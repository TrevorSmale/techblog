<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="http://localhost:1313/techblog/xml/base.min.xml" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knowledge Exchange on Tech Blog</title>
    <link>http://localhost:1313/techblog/categories/knowledge-exchange/</link>
    <description>Recent content in Knowledge Exchange on Tech Blog</description>
    <generator>Hugo 0.138.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link rel="self" href="http://localhost:1313/techblog/categories/knowledge-exchange/feed.xml" type="application/rss+xml" />
    <item>
      <title>ProLUG Admin Course Unit 9 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu9/</link>
      <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu9/</guid>
      <description>&lt;h1 id=&#34;containers--kubernetes&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#containers--kubernetes&#34;&gt;Containers &amp;amp; Kubernetes&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;One of the most exciting units for me has been exploring deployment and hosting infrastructure. I‚Äôve already spent some time working with Docker and Podman, but I have had limited hands-on experience with Kubernetes. Before this unit, I completed a few interactive Kubernetes labs on Killercoda, covering basic commands, information gathering, and logging.&lt;/p&gt;
&lt;p&gt;This week, I followed an interactive K3s lab that guided me through the installation process‚Äîa perfect refresher. Afterward, I jumped onto one of my Proxmox VMs and installed K3s on my homelab üë®‚Äçüîß&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;discussion-post-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#discussion-post-1&#34;&gt;Discussion Post 1&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;It‚Äôs a slow day in the NOC and you have heard that a new system of container deployments are being used by your developers. Do some reading about containers, docker, and podman.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What resources helped me answer these questions&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/containers&#34;&gt;https://www.redhat.com/en/topics/containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My RHCSA 9 Course on Udemy&lt;/li&gt;
&lt;li&gt;Notes I have composed in LogSeq from multiple sources&lt;/li&gt;
&lt;li&gt;Julia Evans Blog &lt;a href=&#34;https://jvns.ca/&#34;&gt;https://jvns.ca/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;What did you learn about that you didn‚Äôt know before?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;I did not know that Podman and Kubernetes can run WASM Applications alongside containers. I have some interest in WASM and Subsequent ByteCode, having read about it on occasion.&lt;/li&gt;
&lt;li&gt;I did not know that Podman containers can be converted to SystemD services.&lt;/li&gt;
&lt;li&gt;I learned a technique that I quite like using podman commit to create a custom compose file from a modified container and will likely use this alot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Terminology that I wasn&amp;rsquo;t familiar with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Control Plane: Manages container orchestration, monitoring, and state across cluster nodes.&lt;/li&gt;
&lt;li&gt;The API server: Core interface for communication between users and container clusters.&lt;/li&gt;
&lt;li&gt;Scheduler: Assigns containers to nodes based on resource availability and policies.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;What seems to be the major benefit of containers?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Can be declarative with compose. So infrastructure can be explicitly defined and easily rebuilt.&lt;/li&gt;
&lt;li&gt;Light weight / low resource. Containers are not complete systems and are stripped to the bare essentials, meaning they are very small files that run fast.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;What seems to be some obstacles to container deployment?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;From my own experience, mounting persistent volumes was a bit tricky.&lt;/li&gt;
&lt;li&gt;Container networking presents a challenge bot conceptually and practically.&lt;/li&gt;
&lt;li&gt;Packaging application to run harmoniously within a container environment presents some friction.&lt;/li&gt;
&lt;li&gt;Large infrastructure must be broken into microservices, introducing complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h2 id=&#34;discussion-post-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#discussion-post-2&#34;&gt;Discussion Post 2&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;You get your first ticket about a problem with containers. One of the engineers is trying to move his container up to the Dev environment shared server. He sends you over this information about the command he‚Äôs trying to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[developer1@devserver read]$ podman ps
CONTAINER ID  IMAGE       COMMAND     CREATED     STATUS      PORTS       NAMES

[developer1@devserver read]$ podman images

REPOSITORY                TAG                IMAGE ID      CREATED      SIZE
localhost/read_docker     latest             2c0728a1f483  5 days ago   68.2 MB
docker.io/library/python  3.13.0-alpine3.19  9edd75ff93ac  3 weeks ago  47.5 MB
[developer1@devserver read]$ podman run -dt -p 8080:80/tcp docker.io/library/httpd
You decide to check out the server 
[developer1@devserver read] ss -ntulp
Netid   State    Recv-Q   Send-Q      Local Address:Port        Peer Address:Port         Process
udp     UNCONN   0        0           127.0.0.53%lo:53               0.0.0.0:*             users:((&amp;quot;systemd-resolve&amp;quot;,pid=166693,fd=13))
tcp     LISTEN   0        80              127.0.0.1:3306             0.0.0.0:*             users:((&amp;quot;mariadbd&amp;quot;,pid=234918,fd=20))
tcp     LISTEN   0        128               0.0.0.0:22               0.0.0.0:*             users:((&amp;quot;sshd&amp;quot;,pid=166657,fd=3))
tcp     LISTEN   0        4096        127.0.0.53%lo:53               0.0.0.0:*             users:((&amp;quot;systemd-resolve&amp;quot;,pid=166693,fd=14))
tcp     LISTEN   0        4096                    *:8080                   *:*             users:((&amp;quot;node_exporter&amp;quot;,pid=662,fd=3))
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;What do you think the problem might be?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There is a container call node exporter that is listening on port 8080, therefore the port is already in use. I think this is a pretty common issue as this port is normally used for public traffic. With many nodes running it is easy to double assign a port.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;How will you test this?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I would run the conflicting container run command with a slight port change.
podman run -dt -p 8081:80/tcp docker.io/library/httpd&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;The developer tells you that he‚Äôs pulling a local image, do you find this to be true, or is something else happening in their run command?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is true that once and image is pulled, it is stored locally. So the developer may have &lt;strong&gt;pulled&lt;/strong&gt; the image. However in the command he is specifying a source for pulling a fresh container, so the dev is definitely sus. Typically if the image has been pulled it is given a container ID, which is then used to build with.&lt;/p&gt;



&lt;h2 id=&#34;installing-k3s-in-my-homelab&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#installing-k3s-in-my-homelab&#34;&gt;Installing K3s in my HomeLab&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;After completing the suggested lab, I took note of installation process and replicated it on my HomeLab. I just wanted to share my process and bumps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Installation from curl script
curl -sfL &lt;a href=&#34;https://get.k3s.io&#34;&gt;https://get.k3s.io&lt;/a&gt; | sh -&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Making sure the service is running in systemD
systemctl status k3s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Changing config permissions (Problem that had stumped me)
sudo chmod 644 /etc/rancher/k3s/k3s.yaml&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploying a pod
kubectl run nginx &amp;ndash;image=nginx:alpine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Making an alias so commands are less annoying
alias k=kubectl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Checking the running pod
k get pods&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;digging-deeper-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#digging-deeper-&#34;&gt;Digging Deeper ‚õèÔ∏è&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;See if you can get a deployment working in the lab.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Screen shots from this deployment&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU8/ibb.jpg&#34; alt=&#34;Arnold&#34;&gt;
&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU8/ibb.jpg&#34; alt=&#34;Arnold&#34;&gt;
&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU8/ibb.jpg&#34; alt=&#34;Arnold&#34;&gt;
&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU8/ibb.jpg&#34; alt=&#34;Arnold&#34;&gt;
&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU8/ibb.jpg&#34; alt=&#34;Arnold&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What worked well?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;creating a persistent volume and attaching to the volume worked well.
mkdir /root/TreasuresVolume
Pulling and building an image worked well.
Attaching to the container and interacting with it went well.
podman run -dit &amp;ndash;name TreasuresContainer -v /root/TreasuresVolume:/app docker.io/library/golang:alpine tail -f /dev/null
apk add vim gcc bash&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What did you have to troubleshoot?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I ran into trouble when exiting the container. It will kill the container, forcing me to start it again, which was frustrating.
Having done this in the past, I thought this would not be an issue. However, I just learned that containers without continually running services will die when exited.
The fix for such an issue is to run something light and persistent on the container in order to keep it alive. This can be accomplished with a bash script or turning a go binary into a system binary to keep running.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What documentation can you make to be able to do this faster next time?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actually, this blog is used to partially keep track of this. I use LogSeq as a second brain, where I will definitely copy and paste this info into my Podman section.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;reflection-questions&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#reflection-questions&#34;&gt;Reflection Questionsü§î&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;What questions do you still have about this week?&lt;/li&gt;
&lt;li&gt;How can you apply this now in your current role in IT? If you‚Äôre not in IT, how can you look to put something like this into your resume or portfolio?&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu9/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 8 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu8/</link>
      <pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu8/</guid>
      <description>&lt;h1 id=&#34;scripting-system-checks&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#scripting-system-checks&#34;&gt;Scripting System Checks&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU8/ibb.jpg&#34; alt=&#34;Arnold&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once again beyond the Discussion Posts and Labbing. I spent a great deal of time scripting/programming System checks. After completing the labs which Bash Scripting and intro to &amp;lsquo;C&amp;rsquo;, I got really into GO as a system util. I have a particularly productive day with using the embed.fs feature of GO and packing unix system tools together in a single go program at compilation. I think there is a ton of potential here for my own uses. üë®‚Äçüîß&lt;/p&gt;



&lt;h2 id=&#34;discussion-post-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#discussion-post-1&#34;&gt;Discussion Post 1&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Scenario&lt;/p&gt;
&lt;p&gt;It‚Äôs a 2-week holiday in your country, and most of the engineers and architects who designed the system are out of town. You‚Äôve noticed a pattern of logs filling up on a set of web servers due to increased traffic. Research and verification show that the logs are being sent off in real time to Splunk. Your team has been deleting the logs every few days, but a 3rd-shift engineer missed this in the notes, causing downtime. How might you implement a simple fix to stop-gap the problem until all engineering resources return next week?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resources Used&lt;/strong&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TryHackMe (Splunk) Intro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Study Group discussion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ChatGPT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blogs:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nohl.eu/tech-resources/notes-to-linux/log-files-in-tmpfs-without-breaking-logging/&#34;&gt;Nohl&amp;rsquo;s Tech Resources: Log Files in tmpfs Without Breaking Logging&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dietpi.com/docs/software/log_system/&#34;&gt;DietPi Documentation: Log System&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;why-cant-you-just-make-a-design-fix-and-add-space-in-varlog-on-all-these-systems&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#why-cant-you-just-make-a-design-fix-and-add-space-in-varlog-on-all-these-systems&#34;&gt;Why can‚Äôt you just make a design fix and add space in /var/log on all these systems?&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Adding more space to &lt;code&gt;/var/log&lt;/code&gt; might be a design fix, but it isn‚Äôt feasible in the short term due to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Operational Constraints&lt;/strong&gt;: Extending storage may involve downtime, additional permissions, or architectural changes that can‚Äôt be approved without the primary engineers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Temporary Nature of the Fix&lt;/strong&gt;: Increasing space only delays the issue. If logs continue to grow, the problem will recur once space is exhausted again.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;why-cant-you-just-make-a-design-change-and-use-logrotate-more-frequently&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#why-cant-you-just-make-a-design-change-and-use-logrotate-more-frequently&#34;&gt;Why can‚Äôt you just make a design change and use logrotate more frequently?&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Possibility of Log Loss&lt;/strong&gt;: Higher logrotate frequency could still miss high-frequency log spikes, especially during unusual traffic peaks, risking logs being deleted before Splunk ingestion is complete.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuration and Testing&lt;/strong&gt;: Aggressive logrotate adjustments may interfere with processes expecting logs at specific retention periods. Testing changes in production without key team members isn‚Äôt ideal.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;temporary-fix-options&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#temporary-fix-options&#34;&gt;Temporary Fix Options&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;To address the issue, consider implementing a temporary fix by configuring a log retention policy that aggressively compresses or truncates logs without disrupting active processes. Here are some potential approaches:&lt;/p&gt;



&lt;h3 id=&#34;implement-a-temporary-cron-job&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#implement-a-temporary-cron-job&#34;&gt;Implement a Temporary &lt;strong&gt;Cron Job&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Schedule a cron job to truncate logs on a more aggressive schedule without deleting them. For example:&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; /var/log/access.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sb&#34;&gt;```&lt;/span&gt;bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;gt; /var/log/access.log&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would empty the log file without removing it or impacting the active file descriptors held by any running processes.&lt;/p&gt;



&lt;h3 id=&#34;set-up-temporary-log-compression&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#set-up-temporary-log-compression&#34;&gt;Set Up Temporary Log Compression&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Compress the logs after truncation if additional space savings are needed. Tools like gzip can compress logs efficiently, reducing disk space usage and ensuring logs are still accessible if required for audits or incident investigations.&lt;/p&gt;



&lt;h3 id=&#34;implement-a-ram-disk-for-temporary-logs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#implement-a-ram-disk-for-temporary-logs&#34;&gt;Implement a RAM Disk for Temporary Logs&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;As a short-term measure, you could set up a RAM disk for logs that don‚Äôt need long-term retention. This allows logs to be stored temporarily in memory, reducing disk space pressure. For instance&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  mount -t tmpfs -o &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;512M tmpfs /var/log/temp&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You could then configure lower-priority logs to write here temporarily, knowing they will be lost upon reboot, which may be acceptable in a crisis scenario.&lt;/p&gt;



&lt;h3 id=&#34;adjust-splunk-forwarder-configuration&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#adjust-splunk-forwarder-configuration&#34;&gt;Adjust Splunk Forwarder Configuration:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;If possible, configure the Splunk forwarder to filter logs more aggressively, reducing the volume of logs that are retained on the system. The props.conf or inputs.conf files can be configured to forward logs without keeping local copies.&lt;/p&gt;
&lt;p&gt;Adding more space to /var/log might be a design fix, but it isn‚Äôt feasible in the short term due to the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Operational Constraints: Extending storage could involve downtime, additional permissions, or changes that require architectural decisions that can‚Äôt be made without the primary engineers.&lt;/li&gt;
&lt;li&gt;Temporary Nature of the Fix: Increasing space only delays the issue rather than preventing it. If the logs keep growing, the problem will recur once space runs out again.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;discussion-post-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#discussion-post-2&#34;&gt;Discussion Post 2&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;You are the only Linux Administrator at a small healthcare company. The engineer/admin before you left you a lot of scripts to untangle. This is one of our many tasks as administrators, so you set out to accomplish it. You start to notice that he only ever uses nested if statements in bash. You also notice that every loop is a conditional &lt;code&gt;while true&lt;/code&gt; and then he breaks the loop after a decision test each loop. You know his stuff works, but you think it could be more easily written for supportability, for you and future admins. You decide to write up some notes by reading some google, AI, and talking to your peers.&lt;/p&gt;
&lt;p&gt;Compare the use of nested if versus case statement in bash.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nested if statements are useful for situations where each condition depends on the result of the previous test, requiring a hierarchy or sequence.&lt;/li&gt;
&lt;li&gt;A case statement is ideal for handling multiple discrete values of a variable, especially if there are many possible branches. It‚Äôs typically cleaner and more readable than a nested if.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Compare the use of conditional and counting loops. Under what circumstances&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use conditional loops (while) when you don‚Äôt know the number of iterations in advance and need to loop based on conditions.&lt;/li&gt;
&lt;li&gt;Use counting loops (for) when you have a set number of iterations or are working with a list. This structure is clearer and prevents issues that may arise from unintentional infinite loops.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;would you use one or the other?&lt;/p&gt;
&lt;p&gt;optimizing or refactoring Bash scripts the Engineer had left me.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I would replace nested if statements with case statements when possible to improve readability, especially when handling multiple discrete values.&lt;/li&gt;
&lt;li&gt;Of course, I would comment things for added communication/ maintainability.&lt;/li&gt;
&lt;li&gt;I would Limit while true loops to cases where no predictable count or list is available. Clearly define a break condition early to avoid infinite loops.&lt;/li&gt;
&lt;li&gt;I would Use for loops for counting or iterating over arrays or lists, as they provide a clean structure with known iteration limits.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu8/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 7 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu7/</link>
      <pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu7/</guid>
      <description>&lt;h1 id=&#34;security&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#security&#34;&gt;Security&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;patching-the-system-package-management&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#patching-the-system-package-management&#34;&gt;Patching the system/ Package Management&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;yum-dnf-rpm&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#yum-dnf-rpm&#34;&gt;yum, dnf, rpm&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU7/CatPackage.jpg&#34; alt=&#34;Packaged Cat&#34;&gt;&lt;/p&gt;
&lt;p&gt;As the course progresses, I am learning more deeply within a study group. Aside from the lab work and discussion posts. I have been putting a lot of hours satisfying curiosities regarding the linux system.
For this unit we did a deep dive into packaging, going so far as to look at the history and reasoning before decision making. We had also looked at packages are managed within tightly controlled environments.
I now feel that I have a robust understanding of the theory and practical elements of Redhat packaging and beyond.&lt;/p&gt;



&lt;h2 id=&#34;discussion-post-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#discussion-post-1&#34;&gt;Discussion Post 1:&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Why software versioning is important. ü§î&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Versioning enables you to monitor software updates systematically, making it easier to troubleshoot, roll back changes, and trace modifications for security or functionality purposes. üëç&lt;/li&gt;
&lt;li&gt;One can manage dependencies confidently, avoiding conflicts between system components, libraries, and tools. crucial for stable and consistent deployments. üëç&lt;/li&gt;
&lt;li&gt;We can verify package integrity, ensuring installed software hasn‚Äôt been altered or corrupted. Essential for maintaining a secure and stable system environment. üëç&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;discussion-post-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#discussion-post-2&#34;&gt;Discussion Post 2:&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;scenario&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#scenario&#34;&gt;Scenario:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;You are new to a Linux team. A ticket has come in from an application team and has already been escalated to your manager. They want software installed on one of their servers but you cannot find any documentation and your security team is out to lunch and not responding. You remember from some early documentation that you read that all the software in the internal repos you currently have are approved for deployment on servers. You want to also verify by checking other servers that this software exists. This is an urgent ask and your manager is hovering.
How can you check all the repos on your system to see which are active? ü§î
How would you check another server to see if the software was installed there? ü§î
If you find the software, how might you figure out when it was installed? (Time/Date) ü§î&lt;/p&gt;



&lt;h3 id=&#34;answer&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#answer&#34;&gt;Answer:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In an urgent situation like this, I‚Äôd first check which approved software repositories are active on my system,
then verify if the software is already installed on similar servers to ensure it‚Äôs safe to proceed. Finally, I‚Äôd review the installation history to confirm when it was
added. Working with Red Hat packaging and package management systems has many more options than I was expecting; through labbing in the study group,
I‚Äôve gained a much better understanding of packages, dependencies, and package management.&lt;/p&gt;
&lt;p&gt;Packing was a pretty deep rabbit hole for me.&lt;/p&gt;
&lt;p&gt;This is the process I&amp;rsquo;d follow for this case:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Check Active Repositories
dnf repolist&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check if the Software is Installed on Your System
rpm -qa | grep &amp;lt;software_name&amp;gt;
or
dnf list installed &amp;lt;software_name&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check Another Server for Software Installation with SSH and Step 2 commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;View Installation History (Time/Date)&lt;/p&gt;
&lt;p&gt;dnf history info &amp;lt;transaction_id&amp;gt;
dnf history list &amp;lt;software_name&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;



&lt;h2 id=&#34;discussion-post-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#discussion-post-3&#34;&gt;Discussion Post 3&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;(After you have completed the lab) - Looking at the concept of group install from DNF or Yum. Why do you think an administrator may never want to use that in a running system? Why might an engineer want to or not want to use that? This is a thought exercise, so it‚Äôs not a ‚Äúright or wrong‚Äù answer it‚Äôs for you to think about.&lt;/p&gt;



&lt;h3 id=&#34;question&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#question&#34;&gt;Question:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;What is the concept of software bloat, and how do you think it relates?&lt;/p&gt;



&lt;h3 id=&#34;answer-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#answer-1&#34;&gt;Answer:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Software bloat is when essential tools/packages are larger than they need to be, effecting performance, reliability and security. By performance I am referring to the loss of potential performance from unessecary resource use. In regards to reliability, more complex systems inherently have more potential to fail. Security means many things, so I am specifically thinking about attack surface and potential for vulnerability due to the aforementioned complexity.&lt;/p&gt;



&lt;h3 id=&#34;question-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#question-1&#34;&gt;Question:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;What is the concept of a security baseline, and how do you think it relates?&lt;/p&gt;



&lt;h3 id=&#34;answer-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#answer-2&#34;&gt;Answer:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A set of minimum security standards and controls that organizations implement to protect systems.&lt;/p&gt;



&lt;h3 id=&#34;question-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#question-2&#34;&gt;Question:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;How do you think something like this affects performance baselines?&lt;/p&gt;



&lt;h3 id=&#34;answer-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#answer-3&#34;&gt;Answer:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;By targeting specific packages, tracking changes, reducing unnessecary dependancies and bloat, we satisfy the tenants of a security baseline by establishing consistency, simplifying compliance, enhancing efficiency and reduce risk.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu7/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 6 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu6/</link>
      <pubDate>Mon, 21 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu6/</guid>
      <description>&lt;h1 id=&#34;security--firewalld--ufw-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#security--firewalld--ufw-&#34;&gt;Security ‚Äì Firewalld &amp;amp; UFW üî•üß±&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;In this unit, we explore essential concepts in firewall management using Firewalld and UFW. A firewall acts as a security system, controlling the flow of traffic between networks by enforcing rules based on zones ‚Äîlogical areas with different security policies. Services are predefined sets of ports or protocols that firewalls allow or block, and zones like DMZ (Demilitarized Zone) provide added security layers by isolating public-facing systems. Stateful packet filtering tracks the state of connections, allowing more dynamic rules, while stateless packet filtering inspects individual packets without connection context. Proxies facilitate indirect network connections for security and privacy, while advanced security measures such as Web Application Firewalls (WAF) and Next-Generation Firewalls (NGFW) offer specialized protection against modern threats.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;lab-work-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#lab-work-&#34;&gt;Lab Work üß™ü•º&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This week, we dove deep into configuring and testing firewall settings in our Discord study group. I had several virtual machines set up in my ProxMox home lab, and we experimented while completing the lab work. As usual, we went on several tangents, verifying ideas. In total, we spent over 5 hours running commands, experimenting with different configurations, breaking things, and debating solutions. By the end of the session, I gained a practical understanding of Firewalld configuration, packet sending, and packet tracing with Wireshark. It was frustrating at times, but ultimately rewarding.&lt;/p&gt;



&lt;h3 id=&#34;sending--receiving-test-packets-experiment&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#sending--receiving-test-packets-experiment&#34;&gt;Sending &amp;amp; Receiving test packets experiment&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;1-so-we-set-up-one-server-to-receive-a-packet&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#1-so-we-set-up-one-server-to-receive-a-packet&#34;&gt;1. So we set up one server to receive a packet:&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    nc -l -p -u 12345 &amp;gt; received_file
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;2-sending-from-another-server-and-noted-that-the-packet-was-recorded-in-received_file&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#2-sending-from-another-server-and-noted-that-the-packet-was-recorded-in-received_file&#34;&gt;2. Sending from another server and noted that the packet was recorded in &lt;strong&gt;received_file&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    echo &#39;message1&#39; | nc -u server_b_ip 12345
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;3-we-set-firewalld-to-block-udp-port-12345&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#3-we-set-firewalld-to-block-udp-port-12345&#34;&gt;3. We set Firewalld to block udp port 12345&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    sudo firewall-cmd --zone=public --add-rich-rule=&#39;rule family=&amp;quot;ipv4&amp;quot; source address=&amp;quot;192.168.2.166&amp;quot; port protocol=&amp;quot;udp&amp;quot; port=&amp;quot;12345&amp;quot; accept&#39; --permanent
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;4-so-we-set-up-one-server-to-receive-a-packet&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#4-so-we-set-up-one-server-to-receive-a-packet&#34;&gt;4. So we set up one server to receive a packet:&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    nc -l -p -u 12345 &amp;gt; received_file
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;5-sending-from-another-server&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#5-sending-from-another-server&#34;&gt;5. Sending from another server:&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    echo &#39;Blocked&#39; | nc -u server_b_ip 12345
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;6-we-then-noted-that-this-packet-did-not-come-through&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#6-we-then-noted-that-this-packet-did-not-come-through&#34;&gt;6. We then noted that this packet did not come through&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;7-we-then-set-up-netcat-to-listen-for-packets-on-udp-port-12346-slightly-different&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#7-we-then-set-up-netcat-to-listen-for-packets-on-udp-port-12346-slightly-different&#34;&gt;7. We then set up netcat to listen for packets on udp port 12346 &amp;lsquo;slightly different&amp;rsquo;&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    nc -l -p -u 12346 &amp;gt; received_file
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;8-sending-from-another-server-and-noted-that-the-packet-was-recorded-in-received_file&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#8-sending-from-another-server-and-noted-that-the-packet-was-recorded-in-received_file&#34;&gt;8. Sending from another server and noted that the packet was recorded in &lt;strong&gt;received_file&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    echo &#39;message2&#39; | nc -u server_b_ip 12346
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;9-then-we-busted-open-wireshark-on-the-packet-receiving-vm-and-turned-on-general-packet-scanning&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#9-then-we-busted-open-wireshark-on-the-packet-receiving-vm-and-turned-on-general-packet-scanning&#34;&gt;9. Then we busted open WireShark on the packet receiving VM and turned on general packet scanning&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    echo &#39;mom&#39; | nc -u server_b_ip 12346 
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;10-we-then-looked-at-all-of-the-ways-we-could-inspect-the-packets-including-additional-data-bits-over-udp-for-no-apparent-reason&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#10-we-then-looked-at-all-of-the-ways-we-could-inspect-the-packets-including-additional-data-bits-over-udp-for-no-apparent-reason&#34;&gt;10. We then looked at all of the ways we could inspect the packets including additional data bits over UDP for no apparent reason.&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Fin&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;types-of-firewalls-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#types-of-firewalls-&#34;&gt;Types of Firewalls üîç&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;firewalld-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#firewalld-&#34;&gt;Firewalld üî•üß±&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Uses &lt;strong&gt;zones&lt;/strong&gt; to define the level of trust for network connections, making it easy to apply different security settings to various types of connections (like home, public, or work). It‚Äôs dynamic, meaning changes can be made without restarting the firewall, ensuring smooth operation.&lt;/p&gt;



&lt;h3 id=&#34;zones-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#zones-&#34;&gt;Zones üç±&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The concept is specific to Firewalld. Zones are a predefined set of firewall rules that determine the level of trust assigned to a network connection. Zones allow you to apply different security policies to different network interfaces based on how much you trust the network.&lt;/p&gt;



&lt;h3 id=&#34;common-commands&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#common-commands&#34;&gt;Common Commands&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --state
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Checks if Firewalld is running.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --get-active-zones
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lists all active zones and the interfaces associated with them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --get-default-zone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Displays the default zone for new interfaces or connections.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --set-default-zone=ZONE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Changes the default zone to the specified zone.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --zone=ZONE --add-service=SERVICE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allows a service (e.g., SSH, HTTP) in the specified zone.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --zone=ZONE --remove-service=SERVICE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Removes a service from the specified zone.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --zone=ZONE --add-port=PORT/PROTOCOL
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Opens a specific port (e.g., 80/tcp) in the specified zone.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --zone=ZONE --remove-port=PORT/PROTOCOL
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Closes a specific port in the specified zone.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reloads the Firewalld configuration without dropping active connections.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --list-all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lists all the rules and settings in the active zone.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --permanent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Applies changes permanently (used with other commands to ensure changes persist after reboots).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --runtime-to-permanent
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Converts the current runtime configuration to a permanent one.&lt;/p&gt;



&lt;h3 id=&#34;zone-example&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#zone-example&#34;&gt;Zone example&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A public zone might have stricter rules, blocking most traffic except for essential services like web browsing.&lt;/li&gt;
&lt;li&gt;A home zone could allow more open traffic, such as file sharing, because the network is more trusted.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;ufw-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#ufw-&#34;&gt;UFW üî•üß±&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Uncomplicated Firewall&lt;/strong&gt; is a user-friendly firewall designed to simplify the process of controlling network traffic by allowing or blocking connections. UFW is commonly used on &lt;strong&gt;Ubuntu&lt;/strong&gt; and provides easy commands for setting up firewall rules, making it ideal for beginners. Despite it is simplicity, it is powerful enough to handle complex configurations.&lt;/p&gt;



&lt;h3 id=&#34;default-deny-policy-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#default-deny-policy-&#34;&gt;Default Deny Policy üîê&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;By default, UFW denies all incoming connections while allowing outgoing ones. This enhances security by requiring users to explicitly allow any incoming traffic.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;common-commands-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#common-commands-1&#34;&gt;Common Commands&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw status
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Displays the current status of UFW and active rules.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw enable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enables the UFW firewall.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw disable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Disables the UFW firewall.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw default deny incoming
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sets the default policy to deny all incoming connections.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw default allow outgoing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sets the default policy to allow all outgoing connections.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw allow PORT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allows traffic on a specific port (e.g., &lt;code&gt;sudo ufw allow 22&lt;/code&gt; to allow SSH).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw deny PORT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Denies traffic on a specific port.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw delete allow PORT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Removes a previously allowed rule for a port.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw allow SERVICE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allows traffic for a service by name (e.g., &lt;code&gt;sudo ufw allow ssh&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw deny SERVICE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Denies traffic for a service by name.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw allow from IP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allows traffic from a specific IP address.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw deny from IP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Denies traffic from a specific IP address.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw allow proto PROTOCOL from IP to any port PORT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allows traffic for a specific protocol, source IP, and port (e.g., &lt;code&gt;sudo ufw allow proto tcp from 192.168.1.100 to any port 80&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw reset
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Resets all UFW rules to default.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo ufw reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reloads UFW rules without disabling the firewall.&lt;/p&gt;



&lt;h2 id=&#34;waf-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#waf-&#34;&gt;WAF üî•üß±&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Web Application Firewall&lt;/strong&gt; is a security system designed to protect web applications by filtering and monitoring HTTP traffic between a web application and the internet. It helps prevent common web-based attacks like SQL injection, cross-site scripting (XSS), and cross-site request forgery (CSRF) by analyzing the incoming and outgoing traffic and blocking malicious requests. Unlike traditional firewalls that focus on network security, a WAF specifically targets the security of web applications and can be an important part of a layered defense strategy.&lt;/p&gt;



&lt;h3 id=&#34;more-sophisticated-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#more-sophisticated-&#34;&gt;More Sophisticated üç∑&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;are generally more sophisticated than Firewalld or UFW because they operate at the application layer (Layer 7) of the OSI model. Blocking traffic is one thing, but packet inspection is another.&lt;/p&gt;



&lt;h3 id=&#34;quite-a-few-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#quite-a-few-&#34;&gt;Quite a few ‚öñÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;There are many Web Application Firewalls out there that cover specific cloud platforms or web services. Here is a list of some popular ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS WAF&lt;/li&gt;
&lt;li&gt;Cloudflare WAF&lt;/li&gt;
&lt;li&gt;F5 Advanced WAF&lt;/li&gt;
&lt;li&gt;Imperva WAF&lt;/li&gt;
&lt;li&gt;ModSecurity&lt;/li&gt;
&lt;li&gt;Barracuda WAF&lt;/li&gt;
&lt;li&gt;Sucuri WAF&lt;/li&gt;
&lt;li&gt;Akamai Kona Site Defender&lt;/li&gt;
&lt;li&gt;Fortinet FortiWeb&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;ngfw-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#ngfw-&#34;&gt;NGFW üî•üß±üß†&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Next-Generation Firewall&lt;/strong&gt; is an advanced type of firewall that goes beyond traditional firewall features like packet filtering. It combines standard firewall capabilities with more advanced functionalities such as deep packet inspection (DPI), intrusion prevention systems (IPS), and application-level control. NGWs can inspect and control traffic at a more granular level, allowing administrators to set security rules based on specific applications, users, or behaviors.&lt;/p&gt;



&lt;h3 id=&#34;features-of-a-typical-ngfw&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#features-of-a-typical-ngfw&#34;&gt;Features of a typical NGFW&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Deep Packet Inspection (DPI)&lt;/strong&gt;: Examines the content of data packets, not just their headers, allowing the firewall to identify and block threats hidden in the traffic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intrusion Detection and Prevention System (IDS/IPS)&lt;/strong&gt;: Monitors network traffic for suspicious activity and can take action (like blocking or alerting) to prevent attacks in real-time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application Awareness and Control&lt;/strong&gt;: Recognizes and manages specific applications (e.g., Facebook, Skype) regardless of port or protocol, allowing for fine-grained traffic control.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advanced Malware Protection (AMP)&lt;/strong&gt;: Detects and blocks malware using both signature-based detection and behavioral analysis to prevent malware from entering the network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL/TLS Decryption&lt;/strong&gt;: Decrypts encrypted traffic (HTTPS) for inspection to detect threats hiding inside secure channels.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Identity Integration&lt;/strong&gt;: Applies firewall rules based on user identity or group membership rather than just IP addresses, providing more flexible access control.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Threat Intelligence Feeds&lt;/strong&gt;: Uses real-time threat data from global databases to protect against emerging threats and malicious IP addresses or domains.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud-Delivered Security&lt;/strong&gt;: Provides scalable and flexible cloud-based protection services such as sandboxing, traffic analysis, and updates for zero-day attacks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Virtual Private Network (VPN) Support&lt;/strong&gt;: Allows secure, encrypted connections for remote users or between different networks (site-to-site or remote access VPNs).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;URL Filtering&lt;/strong&gt;: Controls access to websites based on categories (e.g., social media, gambling) or specific URLs, helping enforce acceptable use policies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quality of Service (QoS)&lt;/strong&gt;: Prioritizes certain types of traffic, ensuring that critical applications receive the necessary bandwidth and reducing congestion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zero-Trust Network Segmentation&lt;/strong&gt;: Implements policies based on strict access control, ensuring that users and devices only access the resources they are explicitly permitted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sandboxing&lt;/strong&gt;: Isolates suspicious files or code in a secure environment to detect malicious behavior without affecting the rest of the network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logging and Reporting&lt;/strong&gt;: Provides detailed logs and reports on network traffic, blocked threats, and firewall activity for auditing and troubleshooting.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;ngfw-products&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#ngfw-products&#34;&gt;NGFW Products&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Palo Alto Networks NGFW&lt;/li&gt;
&lt;li&gt;Cisco Firepower NGFW&lt;/li&gt;
&lt;li&gt;Fortinet FortiGate NGFW&lt;/li&gt;
&lt;li&gt;Check Point NGFW&lt;/li&gt;
&lt;li&gt;Sophos XG NGFW&lt;/li&gt;
&lt;li&gt;Juniper Networks SRX Series NGFW&lt;/li&gt;
&lt;li&gt;Barracuda CloudGen NGFW&lt;/li&gt;
&lt;li&gt;SonicWall NGFW&lt;/li&gt;
&lt;li&gt;WatchGuard Firebox NGFW&lt;/li&gt;
&lt;li&gt;Forcepoint NGFW&lt;/li&gt;
&lt;li&gt;PfSense NGFW&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;experience-with-pfsense&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#experience-with-pfsense&#34;&gt;Experience with PFSense&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I am familiar with PfSense as it is &lt;strong&gt;Open Source&lt;/strong&gt; and popular among the Homelab enthusiasts because it is offers expansive features built upon FreeBSD which has killer networking.&lt;/p&gt;



&lt;h3 id=&#34;some-limitations&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#some-limitations&#34;&gt;Some limitations&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;pre-packaged-features&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#pre-packaged-features&#34;&gt;Pre-packaged Features&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Commercial NGFWs (e.g., Palo Alto Networks, Cisco Firepower) often come with built-in advanced features such as cloud-delivered threat intelligence, AI-powered threat detection, and sandboxing for zero-day threats. While pfSense can be extended with third-party packages, it doesn‚Äôt natively offer the same level of seamless integration or automation.&lt;/p&gt;



&lt;h4 id=&#34;unified-management&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#unified-management&#34;&gt;Unified Management&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Commercial NGFWs typically provide a centralized management console for handling multiple firewalls across large networks. While pfSense can handle multiple installations, managing them requires more manual effort and may not be as streamlined as the enterprise-grade management consoles of commercial NGFWs.&lt;/p&gt;



&lt;h4 id=&#34;enterprise-support&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#enterprise-support&#34;&gt;Enterprise Support&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;pfSense relies on community and third-party support, whereas commercial NGFWs offer direct vendor support with service level agreements (SLAs), which can be crucial for large enterprises needing guaranteed response times and assistance.&lt;/p&gt;



&lt;h4 id=&#34;threat-intelligence&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#threat-intelligence&#34;&gt;Threat Intelligence&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;NGFWs like those from Palo Alto or Cisco often integrate with real-time global threat intelligence networks, offering constant updates about emerging threats. While pfSense can be configured with tools like Snort for intrusion detection, it lacks the built-in, cloud-powered intelligence found in commercial NGFWs.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;case-study-1-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#case-study-1-&#34;&gt;Case Study #1 ü§î&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A ticket has come in from an application team. Some of the servers your team built for them last week have not been reporting up to enterprise monitoring and they need it to be able to troubleshoot a current issue, but they have no data. You jump on the new servers and find that your engineer built everything correctly and the agents for node_exporter, ceph_exporter and logstash exporter that your teams use. But, they also have adhered to the new company standard of firewalld must be running. No one has documented the ports that need to be open, so you‚Äôre stuck between the new standards and fixing this problem on live systems.&lt;/p&gt;



&lt;h3 id=&#34;1-initial-research&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#1-initial-research&#34;&gt;1. Initial Research&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Findings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node_exporter typically uses port &lt;strong&gt;9100&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ceph_exporter may use port &lt;strong&gt;9128&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;logstash commonly uses ports &lt;strong&gt;5044&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;2-checking-configs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#2-checking-configs&#34;&gt;2. Checking Configs&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;a-logstash-config&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#a-logstash-config&#34;&gt;A. LogStash Config&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    cat /etc/logstash/conf.d/
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;b-node-exporter-config&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#b-node-exporter-config&#34;&gt;B. node exporter config&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    cat /etc/systemd/system/node_exporter.service
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;c-ceph-exporter-config&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#c-ceph-exporter-config&#34;&gt;C. ceph exporter config&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    cat /etc/systemd/system/ceph_exporter.service
&lt;/code&gt;&lt;/pre&gt;



&lt;h1 id=&#34;or&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#or&#34;&gt;Or&lt;/a&gt;
&lt;/h1&gt;



&lt;h3 id=&#34;3-gathering-socket-statistics&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#3-gathering-socket-statistics&#34;&gt;3. Gathering Socket Statistics&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;    sudo ss -tuln | grep LISTEN
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;options-breakdown&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#options-breakdown&#34;&gt;Options Breakdown&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;-t: Show TCP sockets.
-u: Show UDP sockets.
-l: Show listening sockets, i.e., those waiting for incoming connections.
-n: Show the output numerically, without resolving service names (e.g., display IP addresses and port numbers instead of domain names or service names like ‚Äúhttp‚Äù).&lt;/p&gt;



&lt;h3 id=&#34;q-1-as-youre-looking-this-up-what-terms-and-concepts-are-new-to-you&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#q-1-as-youre-looking-this-up-what-terms-and-concepts-are-new-to-you&#34;&gt;Q: 1. As you‚Äôre looking this up, what terms and concepts are new to you?&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Basically all of the concepts used are new to me. I am not very well versed in networking, network scanning or inspecting service configs.
So this became a research and practice exercise that has shown me quite a lot of new tricks.&lt;/p&gt;



&lt;h3 id=&#34;q-2-what-are-the-ports-that-you-need-to-expose-how-did-you-find-the-answer&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#q-2-what-are-the-ports-that-you-need-to-expose-how-did-you-find-the-answer&#34;&gt;Q: 2. What are the ports that you need to expose? How did you find the answer?&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Theoretically I would expose port &lt;strong&gt;9100&lt;/strong&gt;, &lt;strong&gt;9128&lt;/strong&gt;, &lt;strong&gt;5044&lt;/strong&gt; from research. Furthermore, I now know how to check configs and/or gathering sockets statistics&lt;/p&gt;



&lt;h3 id=&#34;q-3-what-are-you-going-to-do-to-fix-this-on-your-firewall&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#q-3-what-are-you-going-to-do-to-fix-this-on-your-firewall&#34;&gt;Q: 3. What are you going to do to fix this on your firewall?&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I would add these services to the internal zone:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    firewall-cmd --zone=ZONE --add-service=SERVICE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allows a service (e.g., SSH, HTTP) in the specified zone.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;case-study-2-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#case-study-2-&#34;&gt;Case Study #2 ü§î&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A manager heard you were the one that saved the new application by fixing the firewall. They get your manager to approach you with a request to review some documentation from a vendor that is pushing them hard to run a WAF in front of their web application. You are ‚Äúthe firewall‚Äù guy now, and they‚Äôre asking you to give them a review of the differences between the firewalls you set up (which they think should be enough to protect them) and what a WAF is doing.&lt;/p&gt;



&lt;h3 id=&#34;q-1-what-do-you-know-about-the-differences-now&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#q-1-what-do-you-know-about-the-differences-now&#34;&gt;Q: 1. What do you know about the differences now?&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;traditional-firewalls-firewalldufw&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#traditional-firewalls-firewalldufw&#34;&gt;Traditional Firewalls (firewalld/ufw):&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Operate at network and transport layers (OSI Layer 3 &amp;amp; 4).&lt;/li&gt;
&lt;li&gt;Control traffic based on IP addresses, ports, and protocols.&lt;/li&gt;
&lt;li&gt;Block or allow entire network connections.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;web-application-firewalls-wafs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#web-application-firewalls-wafs&#34;&gt;Web Application Firewalls (WAFs):&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Operate at the application layer (OSI Layer 7).&lt;/li&gt;
&lt;li&gt;Inspect HTTP/HTTPS traffic, focusing on web application security.&lt;/li&gt;
&lt;li&gt;Protect against attacks like SQL injection, XSS, and other web vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;q-2-what-are-you-going-to-do-to-figure-out-more&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#q-2-what-are-you-going-to-do-to-figure-out-more&#34;&gt;Q: 2. What are you going to do to figure out more?&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dedicate time to researching effective WAF solutions.&lt;/li&gt;
&lt;li&gt;Identifying suitable solutions at 3 budget scales.&lt;/li&gt;
&lt;li&gt;Try to understand the additional labour behind management additional tools.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;q-3-prepare-a-report-for-them-comparing-it-to-the-firewall-you-did-in-the-first-discussion&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#q-3-prepare-a-report-for-them-comparing-it-to-the-firewall-you-did-in-the-first-discussion&#34;&gt;Q: 3. Prepare a report for them comparing it to the firewall you did in the first discussion.&lt;/a&gt;
&lt;/h3&gt;



&lt;h1 id=&#34;report-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#report-&#34;&gt;Report üóíÔ∏è&lt;/a&gt;
&lt;/h1&gt;



&lt;h3 id=&#34;evaluation-of-implementing-a-web-application-firewall-waf&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#evaluation-of-implementing-a-web-application-firewall-waf&#34;&gt;Evaluation of Implementing a Web Application Firewall &lt;strong&gt;WAF&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;prepared-by-treasure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#prepared-by-treasure&#34;&gt;&lt;strong&gt;Prepared by:&lt;/strong&gt; Treasure&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;date-oct-20th-2024&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#date-oct-20th-2024&#34;&gt;&lt;strong&gt;Date:&lt;/strong&gt; Oct 20th 2024&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;subject-evaluation-of-waf-implementation-suitability-and-comparison-with-traditional-firewalls&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#subject-evaluation-of-waf-implementation-suitability-and-comparison-with-traditional-firewalls&#34;&gt;&lt;strong&gt;Subject:&lt;/strong&gt; Evaluation of WAF Implementation Suitability and Comparison with Traditional Firewalls&lt;/a&gt;
&lt;/h3&gt;
&lt;hr&gt;



&lt;h2 id=&#34;1-introduction&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#1-introduction&#34;&gt;&lt;strong&gt;1. Introduction&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This report has been prepared in response to a request to evaluate the suitability of implementing a Web Application Firewall (WAF) within our infrastructure. The aim of this report is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compare WAF technology with traditional firewall solutions currently implemented.&lt;/li&gt;
&lt;li&gt;Assess the benefits and limitations of each.&lt;/li&gt;
&lt;li&gt;Provide recommendations based on the findings.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;2-objectives&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#2-objectives&#34;&gt;&lt;strong&gt;2. Objectives&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The key objectives of this evaluation are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To determine the suitability of WAF in enhancing our web application security.&lt;/li&gt;
&lt;li&gt;To identify potential risks and benefits associated with the deployment of WAF.&lt;/li&gt;
&lt;li&gt;To compare traditional firewall solutions with WAF in terms of functionality, security, and cost.&lt;/li&gt;
&lt;li&gt;To make recommendations based on the current and future needs of our IT infrastructure.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;3-comparison-of-technologies&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#3-comparison-of-technologies&#34;&gt;&lt;strong&gt;3. Comparison of Technologies&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;31-traditional-firewalls-firewalldufw&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#31-traditional-firewalls-firewalldufw&#34;&gt;&lt;strong&gt;3.1 Traditional Firewalls (firewalld/ufw)&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Primary Function&lt;/strong&gt;: Control and filter network traffic based on IP addresses, ports, and protocols.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strengths&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Blocks unwanted connections at the network level.&lt;/li&gt;
&lt;li&gt;Suitable for general network protection.&lt;/li&gt;
&lt;li&gt;Easy to configure and manage.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Limitations&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Does not inspect web traffic at the application level.&lt;/li&gt;
&lt;li&gt;Cannot protect against specific web application attacks (e.g., SQL injection, XSS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;32-web-application-firewalls-waf&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#32-web-application-firewalls-waf&#34;&gt;&lt;strong&gt;3.2 Web Application Firewalls (WAF)&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Primary Function&lt;/strong&gt;: Protect web applications by filtering and monitoring HTTP/HTTPS traffic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strengths&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Protects against common web application vulnerabilities (e.g., SQL injection, XSS).&lt;/li&gt;
&lt;li&gt;Monitors web traffic to block malicious requests.&lt;/li&gt;
&lt;li&gt;Can provide real-time threat detection and logging.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Limitations&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;May require more resources and specialized configuration.&lt;/li&gt;
&lt;li&gt;Focused solely on web applications, not general network traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;33-key-differences&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#33-key-differences&#34;&gt;&lt;strong&gt;3.3 Key Differences&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Feature&lt;/th&gt;
          &lt;th&gt;Traditional Firewall&lt;/th&gt;
          &lt;th&gt;Web Application Firewall (WAF)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Layer&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Network (Layer 3/4)&lt;/td&gt;
          &lt;td&gt;Application (Layer 7)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Traffic Type&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;IP, ports, protocols&lt;/td&gt;
          &lt;td&gt;HTTP/HTTPS, web requests&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Use Case&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;General network security&lt;/td&gt;
          &lt;td&gt;Web application protection&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Threat Coverage&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Blocks IP-based threats&lt;/td&gt;
          &lt;td&gt;Mitigates web vulnerabilities (SQLi, XSS)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Cost&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Typically lower&lt;/td&gt;
          &lt;td&gt;Generally higher due to specialized focus&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;



&lt;h2 id=&#34;4-key-considerations-for-waf-implementation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#4-key-considerations-for-waf-implementation&#34;&gt;&lt;strong&gt;4. Key Considerations for WAF Implementation&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;41-security-benefits&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#41-security-benefits&#34;&gt;&lt;strong&gt;4.1 Security Benefits&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced protection against web-specific attacks.&lt;/li&gt;
&lt;li&gt;Ability to monitor and block suspicious activity in real-time.&lt;/li&gt;
&lt;li&gt;Added layer of security on top of traditional network firewalls.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;42-cost-analysis&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#42-cost-analysis&#34;&gt;&lt;strong&gt;4.2 Cost Analysis&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Initial Investment&lt;/strong&gt;: The upfront cost of acquiring and configuring a WAF solution.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ongoing Costs&lt;/strong&gt;: Maintenance, updates, and potential personnel training.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;43-operational-impact&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#43-operational-impact&#34;&gt;&lt;strong&gt;4.3 Operational Impact&lt;/strong&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;May require additional resources for setup, monitoring, and incident response.&lt;/li&gt;
&lt;li&gt;Potential need for collaboration between the security and development teams to ensure smooth integration.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;5-risk-assessment&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#5-risk-assessment&#34;&gt;&lt;strong&gt;5. Risk Assessment&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Without WAF&lt;/strong&gt;: Increased vulnerability to web application-specific threats, such as cross-site scripting (XSS) and SQL injection, especially for critical applications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;With WAF&lt;/strong&gt;: Increased security for web applications but requires ongoing monitoring and adjustment to ensure performance and efficacy.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;6-recommendations&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#6-recommendations&#34;&gt;&lt;strong&gt;6. Recommendations&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Based on the evaluation, I recommend the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Implement a WAF&lt;/strong&gt;: Due to the increasing reliance on web applications and the rise in web-based attacks, implementing a WAF would provide an essential layer of security.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintain Traditional Firewalls&lt;/strong&gt;: Existing firewalls should continue to be used for network-level protection alongside the WAF.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pilot Implementation&lt;/strong&gt;: Begin with a limited deployment of WAF for high-risk applications to evaluate performance and cost before a full-scale rollout.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Staff Training&lt;/strong&gt;: Ensure the security and IT teams are trained in WAF management to maximize its effectiveness.&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;7-conclusion&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#7-conclusion&#34;&gt;&lt;strong&gt;7. Conclusion&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The implementation of a Web Application Firewall is a strategic move to protect our web applications from evolving security threats. While traditional firewalls remain crucial for network security, they cannot defend against the types of attacks WAFs are designed to mitigate. By implementing both WAF and traditional firewall solutions, we can ensure comprehensive security coverage across both network and application layers.&lt;/p&gt;



&lt;h2 id=&#34;8-next-steps&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#8-next-steps&#34;&gt;&lt;strong&gt;8. Next Steps&lt;/strong&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Further evaluation of potential WAF solutions based on budget, compatibility, and scalability.&lt;/li&gt;
&lt;li&gt;Engage with the security team for a detailed implementation plan.&lt;/li&gt;
&lt;li&gt;Prepare a pilot program for critical applications and monitor its performance.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;approved-by-bob-saggit&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#approved-by-bob-saggit&#34;&gt;&lt;strong&gt;Approved by:&lt;/strong&gt; Bob Saggit&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;date-october-25th-2024&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#date-october-25th-2024&#34;&gt;&lt;strong&gt;Date:&lt;/strong&gt; October 25th 2024&lt;/a&gt;
&lt;/h3&gt;
&lt;hr&gt;



&lt;h3 id=&#34;definitions&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#definitions&#34;&gt;Definitions&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Firewall&lt;/strong&gt;: A security device that monitors and controls incoming and outgoing network traffic based on predetermined security rules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zone&lt;/strong&gt;: A defined area within a network that contains systems with similar security requirements, separated by a firewall.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Service&lt;/strong&gt;: A specific type of network functionality, like HTTP or DNS, that can be allowed or blocked by a firewall.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DMZ&lt;/strong&gt;: A &amp;ldquo;Demilitarized Zone&amp;rdquo; is a network segment that serves as a buffer between a secure internal network and untrusted external networks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Proxy&lt;/strong&gt;: A server that acts as an intermediary for requests between clients and servers, often used for filtering, security, or caching.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stateful packet filtering&lt;/strong&gt;: A firewall feature that tracks the state of active connections and makes filtering decisions based on the connection&amp;rsquo;s state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stateless packet filtering&lt;/strong&gt;: A type of firewall filtering that analyzes each packet independently without considering the state of the connection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;: A Web Application Firewall that protects web applications by filtering and monitoring HTTP/HTTPS traffic for threats like SQL injection and XSS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NGFW&lt;/strong&gt;: A Next-Generation Firewall that combines traditional firewall functions with additional features like application awareness, integrated intrusion prevention, and advanced threat detection.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu6/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 5 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu5/</link>
      <pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu5/</guid>
      <description>&lt;h1 id=&#34;managing-users--groups&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#managing-users--groups&#34;&gt;Managing Users &amp;amp; Groups&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The overarching theme of this Unit is in the title, we are looking at Managing Users &amp;amp; Groups. Managing users and groups in Linux within an enterprise involves creating, modifying, and organizing user accounts and permissions to enforce security and control over resources.&lt;/p&gt;
&lt;p&gt;Organizing permissions to enforce security is more important than it has ever been, as we live in a hyper connected world with many bad actors and large amounts of sensitive data.&lt;/p&gt;
&lt;p&gt;Linux is fundamentally well suited for Managing Users &amp;amp; Groups because permissions permeate every aspect of a Linux environment. Everything is a file and every file has associated permissions, Therefore we have granular control over the comings and goings of users as administrators.&lt;/p&gt;



&lt;h2 id=&#34;lab-work-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#lab-work-&#34;&gt;Lab Work üß™ü•º&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;primary-commands--tools&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#primary-commands--tools&#34;&gt;Primary Commands / Tools&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;alias&lt;/strong&gt;: Creates a shortcut or alias for a command.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unalias&lt;/strong&gt;: Removes an alias that was previously defined.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;awk&lt;/strong&gt;: A powerful text-processing tool used for pattern scanning and processing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;useradd&lt;/strong&gt;: Adds a new user to the system.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vi .bashrc&lt;/strong&gt;: Opens the &lt;code&gt;.bashrc&lt;/code&gt; file in the vi editor to customize shell settings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UID_MIN 1000&lt;/strong&gt;: The minimum user ID value for normal users (as defined in &lt;code&gt;/etc/login.defs&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UID_MAX 60000&lt;/strong&gt;: The maximum user ID value for normal users (as defined in &lt;code&gt;/etc/login.defs&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;groupadd ‚Äìg 60001 project&lt;/strong&gt;: Creates a new group named &amp;ldquo;project&amp;rdquo; with a GID of 60001.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id user4&lt;/strong&gt;: Displays the user ID (UID), group ID (GID), and group memberships of user &amp;ldquo;user4.&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h4 id=&#34;etc-directories&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#etc-directories&#34;&gt;etc directories&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Looking at etc directories relating to Users, Groups and Associated Security&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/passwd 
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;contains essential information about users, including their username, user ID (UID), group ID (GID), home directory, and default shell, with each entry separated by a colon.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/group
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;stores group information, listing each group‚Äôs name, group ID (GID), and its members, with each entry separated by a colon, allowing users to belong to one or more groups for access control purposes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/shadow
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;contains encrypted password information and related security details for user accounts, such as password aging and expiration&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/gshadow
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;stores encrypted passwords for group accounts, as well as information about group administrators and members, providing enhanced security for group access by restricting who can modify or access specific group data.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/login.defs 
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;configuration settings for user account creation and login parameters, such as password aging policies, UID and GID ranges, and the default paths for user home directories, helping to control system-wide authentication behavior.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/skel/
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;provides template files that are automatically copied to a new user‚Äôs home directory when the user is created, ensuring they have default configuration settings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;other-interesting-directories&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#other-interesting-directories&#34;&gt;Other interesting directories&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Brief Description&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Associated permissions&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This file contains information about disk partitions and other block storage devices and how they should be automatically mounted during the boot process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions: Usually -rw-r&amp;ndash;r&amp;ndash; (readable by all users, writable only by the root).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /etc/hostname
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This file stores the system‚Äôs hostname, which is a unique identifier for the machine in a network.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions: Usually -rw-r&amp;ndash;r&amp;ndash; (readable by all users, writable only by the root).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /proc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is a virtual filesystem that provides detailed information about processes and system resources. It does not contain actual files but rather system and process information in real-time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions: dr-xr-xr-x (readable and executable by all users, writable only by root).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /boot
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contains the kernel, initial ramdisk, and bootloader files needed to start the system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions: drwxr-xr-x (readable and executable by all users, writable only by root).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /root
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is the home directory for the root user (the system administrator).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions: drwx&amp;mdash;&amp;mdash; (only root has read, write, and execute permissions).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  /usr/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contains binary executables for user programs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Permissions: drwxr-xr-x (readable and executable by all users, writable by root).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h2 id=&#34;mapping-unknown-infrastructure-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#mapping-unknown-infrastructure-&#34;&gt;Mapping unknown infrastructure üó∫Ô∏èü§î&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map the Internal ProLUG Network (192.168.200.0/24):&lt;/li&gt;
&lt;li&gt;Map the network from one of the rocky nodes.&lt;/li&gt;
&lt;li&gt;Using a template that you build or find from the internet&lt;/li&gt;
&lt;li&gt;Provide a 1 page summary of what you find in the network.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;approach-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#approach-&#34;&gt;Approach ü§î&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;a-briefing-on-the-infra-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#a-briefing-on-the-infra-&#34;&gt;A briefing on the infra. üîçüñ•Ô∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Het&amp;rsquo; server is unique to me. He uses an injest system that makes a jump to the actual server for security purposes. Within the main server we have a warewulf managed cluster running a series of Rocky Linux VM&amp;rsquo;s. ‚õ∞&lt;/p&gt;
&lt;p&gt;Since we will be doing this from one of the Rocky Nodes within the system, the jump server will not be an issue I recon. ü§î&lt;/p&gt;



&lt;h4 id=&#34;mapping-strategy-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#mapping-strategy-&#34;&gt;Mapping Strategy üìçüó∫Ô∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;So I shouldn&amp;rsquo;t just pop into the server and go willy nilly with scanning commands. This sever is managed by someone who understands security. So it is best to do some &lt;strong&gt;Dead Reckoning&lt;/strong&gt; beforehand.&lt;/p&gt;



&lt;h4 id=&#34;the-basic-commands-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#the-basic-commands-&#34;&gt;The Basic Commands ‚å®Ô∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Mapping the remote servers open ports with nmap.
nmap stands for Network Mapper. A quick perusal of the man page states it is an exploration tool and security / port scanner. It was designed to rapidly scan large networks. Nmap uses raw IP packets in novel ways to determine what hosts
are available on the network, what services (application name and version) those hosts are offering, what operating systems (and OS versions) they are running, what type of packet filters/firewalls are in use, and dozens of other characteristics.&lt;/p&gt;
&lt;p&gt;In order to Map the network I am going to use the ip address for the argument/target of the nmap command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Checking mounted filesystem&amp;rsquo; with df. stands for &lt;strong&gt;Display Free&lt;/strong&gt; disk space. It is a utility that displays statistics about the amount of free disk space on the specified mounted file system or on the file system of which file is a past.&lt;/p&gt;
&lt;p&gt;I will be using the -h flag for human readable format, which ads unit suffixes eg. Gibibyte (GiB) to the ends of values. There is more to it, but I am mentioning the bread and butter of the flag.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;df -h
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;digging-deeper-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#digging-deeper-&#34;&gt;Digging Deeper ‚õèÔ∏è&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;getting-to-know-nmap-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#getting-to-know-nmap-&#34;&gt;Getting to know nmap ü´∂&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;nmap&lt;/strong&gt; is actually a big command, by big I mean the number of options and capabilities are vast. It is quite popular with pen testers and is packaged with Kali Linux &amp;ndash; a security analysis and exploitation focused distribution of Linux, so best believe it is something important. This essentially means I should take some time to get to know it more.&lt;/p&gt;



&lt;h4 id=&#34;stealth-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#stealth-&#34;&gt;Stealth ü•∑&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Beware that &lt;strong&gt;nmap&lt;/strong&gt; can and will trigger detection software like an active firewall, because &lt;strong&gt;nmap&lt;/strong&gt; is conducting &lt;strong&gt;Funny Bizniz&lt;/strong&gt; by way of packet &lt;strong&gt;trickery&lt;/strong&gt; inside a network, both are technical terms. Luckily there is a &lt;strong&gt;stealth&lt;/strong&gt; option ( -s ) that enables the mapping to take place un-detected &amp;ndash;for the most part.&lt;/p&gt;
&lt;p&gt;Contrary to what I assumed, the lower case &lt;strong&gt;s&lt;/strong&gt; does not even stand for stealth, though it still helps as a mnemonic. No, it actually stands for SYN and
SYN stands for Synchronize. It is part of the TCP three-way handshake, which is a process used to establish a reliable connection between two devices on a network and has nothing to do with guys meeting at a bar.&lt;/p&gt;
&lt;p&gt;I thought we were trying to be stealthy, not synchronized ü§î
Well is actually a form of &lt;strong&gt;Funny Bizniz&lt;/strong&gt; wherein SYN is sent and never acknowledged, thustly not completing the handshake process and therefore hiding activity &lt;strong&gt;somehow&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;but &lt;strong&gt;how?&lt;/strong&gt; Well&amp;hellip; it reduces the chance of being logged by the target system‚Äôs monitoring tools, such as firewalls or intrusion detection systems. Now we both know.&lt;/p&gt;
&lt;p&gt;Keep in mind this is only one command option, just imagine how deep the rabbit hole goes.&lt;/p&gt;



&lt;h4 id=&#34;important-mapping-command-list&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#important-mapping-command-list&#34;&gt;Important Mapping Command List&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Ninjas mark stealthier techniques.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;#&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sS &amp;lt;target&amp;gt;&lt;/code&gt; ü•∑&lt;/td&gt;
          &lt;td&gt;TCP SYN scan (stealth mode)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sT &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;TCP connect scan (full connection)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sA &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;ACK scan to detect firewalls&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sU &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;UDP scan&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sP &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Ping scan to detect live hosts&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sV &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Detect service versions on open ports&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -O &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;OS detection&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -A &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Aggressive scan (OS, version, scripts)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -Pn &amp;lt;target&amp;gt;&lt;/code&gt; ü•∑&lt;/td&gt;
          &lt;td&gt;Disable ping (stealthy, avoid detection)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -p- &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Scan all 65,535 TCP ports&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap --top-ports 100 &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Scan the top 100 most common ports&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;12&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap --script &amp;lt;script&amp;gt; &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Use Nmap scripts for detailed scanning&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;13&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sC &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Run default NSE scripts&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;14&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -sW &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;TCP window scan&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;15&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -T4 &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Faster scan using timing template T4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;16&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -v &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Enable verbose output&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;17&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -oN scan.txt &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Save output in normal format&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;18&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -oX scan.xml &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Save output in XML format&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;19&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -6 &amp;lt;target&amp;gt;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Scan IPv6 targets&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;nmap -D RND:10 &amp;lt;target&amp;gt;&lt;/code&gt; ü•∑&lt;/td&gt;
          &lt;td&gt;Decoy scan to mask source of scan&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;



&lt;h2 id=&#34;the-actual-mapping&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#the-actual-mapping&#34;&gt;The Actual Mapping&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU5/cnm.png&#34; alt=&#34;Network Map&#34;&gt;&lt;/p&gt;



&lt;h3 id=&#34;-accessing-the-secure-jump-point&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-accessing-the-secure-jump-point&#34;&gt;üöÄ Accessing the Secure Jump Point&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The network is safely tucked behind a Dynamic Domain Name System (DDNS) running on an Asus Router. This setup allows access from a WAN, in this case, &lt;em&gt;The Internet&lt;/em&gt; (if you‚Äôve heard of it üåê). It securely gate-keeps the network via login credentials, because let‚Äôs be honest, the Internet can be a scary place with bots&amp;hellip; and sometimes people üëÄ.&lt;/p&gt;
&lt;p&gt;So, what exactly does DDNS do? Well, I‚Äôm glad you asked! Most home internet connections don‚Äôt offer a static IP address, which makes hosting things tricky because the IP will randomly change. The IP is dynamic for a few reasons, including cost savings and the limited availability of IPv4 addresses. Anyway, I‚Äôm getting off track üõ§Ô∏è. A DDNS monitors this dynamic IP and links it to a stable address that stays fixed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: DDNS bonds a dynamic IP with a fixed address, offering the added bonus of hiding the internal IP from bad actors, or as I like to call them, &lt;em&gt;the baddies&lt;/em&gt; in London üïµÔ∏è‚Äç‚ôÇÔ∏è. So, this network has a DDNS gateway in place for that extra layer of security üîí.&lt;/p&gt;



&lt;h3 id=&#34;-jumping-into-a-node&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-jumping-into-a-node&#34;&gt;üéØ Jumping into a Node&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Once a credentialed fellow enters their login while hanging at the gateway, a list of servers appears, like a digital menu üçΩÔ∏è. From this list, one can choose where to jump to. In my case, I leapt to &lt;em&gt;Rocky12&lt;/em&gt;, a node within a managed cluster. I knew a little about this network thanks to earlier sessions, but most of this can also be discovered by doing some network scanning üïµÔ∏è.&lt;/p&gt;



&lt;h3 id=&#34;-doing-a-broad-inventory-scan&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-doing-a-broad-inventory-scan&#34;&gt;üîç Doing a Broad Inventory Scan&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This is where the magic of &lt;code&gt;nmap&lt;/code&gt; comes into play! I used two stealthy commands: &lt;strong&gt;nmap -sS&lt;/strong&gt; and &lt;strong&gt;nmap -sT&lt;/strong&gt;. The &lt;code&gt;sT&lt;/code&gt; option scanned a wide range of ports and connections, giving me a detailed list that I piped into &lt;code&gt;less&lt;/code&gt; for easier viewing üìú.&lt;/p&gt;



&lt;h3 id=&#34;-doing-targeted-scans&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-doing-targeted-scans&#34;&gt;üéØ Doing Targeted Scans&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I grepped all the IP addresses and ran an &lt;strong&gt;-sS SYN Scan&lt;/strong&gt; to gather more details on each node. These scans revealed loads of information about open ports and, in some cases, the hostnames of devices üéØ.&lt;/p&gt;



&lt;h3 id=&#34;-identifying-devices&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-identifying-devices&#34;&gt;üß© Identifying Devices&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I quickly identified the &lt;em&gt;warewulf orchestration device&lt;/em&gt; and all of the &lt;em&gt;Rocky nodes&lt;/em&gt;. However, a few mysterious devices needed some detective work üîé. I noticed &lt;strong&gt;glrpc&lt;/strong&gt; listed as a service while scanning six addresses‚Äîthree on one IP range and three on another. A quick Google search revealed that &lt;strong&gt;glrpc&lt;/strong&gt; relates to &lt;em&gt;GlusterFS&lt;/em&gt;, a filesystem specific to Red Hat systems. After watching a video explainer on GlusterFS, I figured out that these two IP ranges were likely a RAID or high availability configuration üíæ.&lt;/p&gt;



&lt;h3 id=&#34;-mapping-with-excalidraw&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-mapping-with-excalidraw&#34;&gt;üó∫Ô∏è Mapping with Excalidraw&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I initially created a highly technical Engineer‚Äôs map filled with data and presented it to Het for feedback. He advised me to think about how management would interpret it ü§î. So, back to the drawing board! I focused on improving the visual presentation and labeling, keeping in mind that management doesn‚Äôt care about the nitty-gritty; they just need a clear, high-level understanding during briefings üìä.&lt;/p&gt;



&lt;h3 id=&#34;-wrapping-up&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#-wrapping-up&#34;&gt;üéâ Wrapping Up&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This concludes my exercise in mapping an unknown network! I learned a lot from this experience and am quite proud of the outcome üí™. It will undoubtedly come in handy when I find myself in future scenarios with many unknowns.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;mitre-attck---1-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#mitre-attck---1-&#34;&gt;MITRE ATT&amp;amp;CK - &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; ü™ö&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;is a globally-accessible knowledge base of adversary tactics and techniques based on real-world observations.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;somewhat-unfamiliar-terminology-for-me&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#somewhat-unfamiliar-terminology-for-me&#34;&gt;Somewhat unfamiliar terminology for me&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lateral Movement&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lateral movement in the context of cyber exploitation refers to an attacker‚Äôs strategy of moving across a network to gain access to additional systems or sensitive data after initially infiltrating a single point. This involves leveraging compromised credentials, escalating privileges, or exploiting vulnerabilities to navigate between hosts and systems. The objective is often to broaden access within the environment while avoiding detection, eventually targeting critical infrastructure or data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Exfiltration üß≥üöÄ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;refers to the unauthorized transfer of data from a target system or network to an external location controlled by an attacker. This can involve methods such as encrypted tunnels, covert channels, or compromised accounts to avoid detection. Exfiltration is typically the final step in a cyberattack, allowing attackers to steal sensitive data, intellectual property, or credentials for further malicious activities.&lt;/p&gt;



&lt;h3 id=&#34;security-is-everybodys-issue&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#security-is-everybodys-issue&#34;&gt;Security is everybody&amp;rsquo;s issue&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;It is important to understand the data on your system regardless of specific responsibility in order to asses risk.&lt;/p&gt;



&lt;h3 id=&#34;impact-of-exfiltration&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#impact-of-exfiltration&#34;&gt;Impact of Exfiltration&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The impacts of data exfiltration can be massive. Given the level of severity an exfiltration incident can entirely destroy an organization or cause financial losses, reputational damage, labour force diversion, data loss and jeopardizing future security.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;the-linux-user-environment&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#the-linux-user-environment&#34;&gt;The Linux User Environment&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The Linux user environment is a customizable space that includes settings like environment variables, shell configurations, and startup scripts, typically defined in files such as .bashrc or .profile. These configurations allow users to tailor command line behavior, automate tasks, and create a personalized and efficient working environment.&lt;/p&gt;



&lt;h3 id=&#34;customizations-to-the-user-environment&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#customizations-to-the-user-environment&#34;&gt;Customizations to the User Environment&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Customizations for the user environment in Linux might include setting up aliases for frequently used commands, configuring environment variables, and adding functions to streamline workflows. These changes can make repetitive tasks faster, improve the command line interface&amp;rsquo;s convenience, and adapt the environment to personal preferences.&lt;/p&gt;



&lt;h4 id=&#34;problems-may-arise&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#problems-may-arise&#34;&gt;Problems may arise&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Problems around helping users with their dot files often stem from the diverse and sometimes incompatible changes users make to suit their needs. This can lead to issues like conflicting configurations, inconsistent behavior across systems, or difficult debugging when unexpected behaviors arise from custom scripts.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;definitionsterminology&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#definitionsterminology&#34;&gt;Definitions/Terminology&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;footprinting-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#footprinting-&#34;&gt;Footprinting üë£&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Footprinting is an essential phase in ethical hacking and system security. It involves gathering information about a computer system, network, or organization to understand its structure and identify potential vulnerabilities. Footprinting is often the first step of a cyberattack or penetration test, allowing attackers or security professionals to map out an environment before deciding how to approach the next steps.&lt;/p&gt;



&lt;h4 id=&#34;scanning-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#scanning-&#34;&gt;Scanning üîç&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Scanning is a process of actively probing systems or networks to identify open ports, services, and vulnerabilities. It&amp;rsquo;s used by attackers to gather deeper insights for potential exploitation and by security professionals to assess weaknesses. Common tools include Nmap and Nessus, while defenses include firewalls and IDS/IPS systems.&lt;/p&gt;



&lt;h4 id=&#34;enumeration-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#enumeration-&#34;&gt;Enumeration üíØ&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Enumeration is the process of extracting more detailed information about a target, such as usernames, network shares, and system services, after identifying open ports and active systems. It typically involves active engagement with the target to gain in-depth knowledge that can be used for exploitation.&lt;/p&gt;



&lt;h4 id=&#34;system-hacking-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#system-hacking-&#34;&gt;System Hacking ü™ì&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;System hacking is the process of gaining unauthorized access to individual systems or networks by exploiting vulnerabilities. It involves activities such as password cracking, privilege escalation, installing backdoors, and covering tracks. Ethical hackers use these techniques to assess system security and recommend protective measures.&lt;/p&gt;



&lt;h4 id=&#34;escalation-of-privilege-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#escalation-of-privilege-&#34;&gt;Escalation of Privilege ü•âü•àü•á&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Privilege escalation is the process of gaining higher-level permissions or privileges than initially granted, allowing an attacker to execute commands with elevated authority. This can be achieved through exploiting vulnerabilities or misconfigurations, leading to unauthorized access to restricted resources or system control.&lt;/p&gt;



&lt;h4 id=&#34;rule-of-least-privilege-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#rule-of-least-privilege-&#34;&gt;Rule of least privilege üîê&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;The Rule of Least Privilege (LoP) is a security principle that states users, applications, and systems should only be granted the minimum level of access or permissions necessary to perform their tasks. This helps reduce the attack surface, limit potential damage from breaches, and mitigate insider threats.&lt;/p&gt;



&lt;h4 id=&#34;covering-tracks-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#covering-tracks-&#34;&gt;Covering Tracks üßπüë£&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Covering tracks is the process attackers use to hide their unauthorized activities and avoid detection. This involves techniques such as deleting or modifying system logs, using rootkits, and clearing command histories to prevent system administrators or security teams from discovering their presence or actions.&lt;/p&gt;



&lt;h4 id=&#34;planting-backdoors-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#planting-backdoors-&#34;&gt;Planting Backdoors ü™¥üö™&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Planting backdoors involves installing hidden access points in a system, allowing attackers to bypass regular authentication and gain unauthorized access at a later time. Backdoors can be inserted through malicious code, vulnerabilities, or modifications to existing software, making them useful for maintaining persistent control over compromised systems.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu5/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;MITRE | ATT&amp;amp;CK &lt;a href=&#34;https://attack.mitre.org/&#34;&gt;Site&lt;/a&gt; Knowledge Base.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>GO CLI Utility</title>
      <link>http://localhost:1313/techblog/post/goclisysutil/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/goclisysutil/</guid>
      <description>&lt;h1 id=&#34;making-a-utility-for-linux-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#making-a-utility-for-linux-&#34;&gt;Making a Utility for Linux üöÄ&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Recently, I was chatting with fellow enthusiasts in the ProLUG group about creating system utilities with Go.&lt;/p&gt;
&lt;p&gt;Between learning about it on my own time and getting input from others, I realized there are so many compelling reasons for using Go as a utility language. üõ†Ô∏è&lt;/p&gt;
&lt;p&gt;Currently, the idea isn&amp;rsquo;t as prevalent as Python or Bash, but it‚Äôs gaining traction. This makes sense since Go was designed with modern, interconnected systems in mind.&lt;/p&gt;



&lt;h2 id=&#34;what-is-a-utility-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#what-is-a-utility-&#34;&gt;What is a Utility? ü§î&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A system utility streamlines repetitive tasks by offering custom commands tailored to your workflow, boosting efficiency for system administrators and engineers. Work smarter, not harder. üí°&lt;/p&gt;



&lt;h2 id=&#34;cli-tool-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#cli-tool-&#34;&gt;CLI Tool üñ•Ô∏è&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Go offers a package called Cobra CLI &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, which enables the creation of command-line interfaces that take input from the terminal and execute predetermined logic. I‚Äôm putting this simply in case you‚Äôre unfamiliar with how programs work üòÜ.&lt;/p&gt;
&lt;p&gt;The CLI is the simplest form of a computer program and is perfect for Linux system folks.&lt;/p&gt;



&lt;h2 id=&#34;core-idea-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#core-idea-&#34;&gt;Core Idea üéØ&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The core idea of this article is to explain how a Go program can act as a personalized utility that lives on your system or can be deployed across many. Go compiles code into a binary‚Äînative computer language. Once built, the binary runs reliably without failure, assuming the program logic is solid. This makes Go ideal for utilities that are called repeatedly to perform simple tasks.&lt;/p&gt;



&lt;h2 id=&#34;automate-everything-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#automate-everything-&#34;&gt;Automate Everything ü§ñ&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Managing systems involves a lot of repetitive tasks, and the goal of any sysadmin or engineer is to automate them. Tools like Ansible, Python, and Bash are already well-known for automation. However, there are specific reasons to use Go, which I‚Äôll explore further in a future article titled &lt;em&gt;&amp;ldquo;Why Go?&amp;rdquo;&lt;/em&gt; where I‚Äôll break down why it belongs in your quiver of tools üèπ.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;cli-programming-portion-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#cli-programming-portion-&#34;&gt;CLI Programming Portion ‚öôÔ∏è&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;setup&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#setup&#34;&gt;Setup&lt;/a&gt;
&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install&lt;/strong&gt; Go and Cobra CLI (if not already installed).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Initialize&lt;/strong&gt; a new Go project with Cobra CLI.&lt;/li&gt;
&lt;/ol&gt;



&lt;h4 id=&#34;cli-logic&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#cli-logic&#34;&gt;CLI Logic&lt;/a&gt;
&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Add commands and flags&lt;/strong&gt; to the Cobra application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Implement utility functions&lt;/strong&gt;, such as disk usage checks or file listings.&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;compilation-and-installation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#compilation-and-installation-&#34;&gt;Compilation and Installation üèóÔ∏è&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;compile&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#compile&#34;&gt;Compile&lt;/a&gt;
&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Build&lt;/strong&gt; the Go project into a single x86 Linux binary.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test&lt;/strong&gt; the binary locally to confirm functionality.&lt;/li&gt;
&lt;/ol&gt;



&lt;h4 id=&#34;install&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#install&#34;&gt;Install&lt;/a&gt;
&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Move&lt;/strong&gt; the binary to &lt;code&gt;/usr/local/bin&lt;/code&gt; for global access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Set permissions&lt;/strong&gt; on the binary to allow execution.&lt;/li&gt;
&lt;/ol&gt;



&lt;h4 id=&#34;add-to-path&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#add-to-path&#34;&gt;Add to PATH&lt;/a&gt;
&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Check&lt;/strong&gt; if &lt;code&gt;/usr/local/bin&lt;/code&gt; is in your PATH.&lt;/li&gt;
&lt;li&gt;If not, &lt;strong&gt;add it&lt;/strong&gt; to your &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.bash_profile&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;testing-portion-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#testing-portion-&#34;&gt;Testing Portion üß™&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Run&lt;/strong&gt; the utility from any location to confirm it works.&lt;/li&gt;
&lt;li&gt;Optionally, &lt;strong&gt;add help documentation&lt;/strong&gt; or more commands to the CLI.&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;packaging-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#packaging-&#34;&gt;Packaging üì¶&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Provide installation instructions&lt;/strong&gt; if you plan to share it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; the binary or source code to GitHub for distribution.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;



&lt;h2 id=&#34;learning-resources&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#learning-resources&#34;&gt;Learning Resources&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ok this was just a simple outline you say. Yes, I am trying to convey information simply for sanities sake, this is how I process things anyway.&lt;/p&gt;
&lt;p&gt;In order to make your own utility you will have to go off on your own learning adventure. Below I am giving you some resources for getting started.&lt;/p&gt;



&lt;h3 id=&#34;getting-up-and-running-with-go&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#getting-up-and-running-with-go&#34;&gt;Getting up and running with GO&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;brief-intro-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#brief-intro-2&#34;&gt;Brief Intro &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;for-the-impatient-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#for-the-impatient-3&#34;&gt;For the impatient &lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;There are many ways to get this done. For the clever and impatient, I suggest finding a pre-made CLI application that you can deconstruct. &lt;sup id=&#34;fnref1:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;



&lt;h4 id=&#34;for-the-patient-4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#for-the-patient-4&#34;&gt;For the Patient &lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;For those who like to build a foundation of understanding, I suggest watching a lecture followed by a tutorial and finally doing the project. &lt;sup id=&#34;fnref1:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;



&lt;h2 id=&#34;conclusion&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#conclusion&#34;&gt;Conclusion&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I try to keep things simple and succinct, so this is where I ride off into the sunset. Good luck and happy learning.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;footnotes-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/goclisysutil/#footnotes-&#34;&gt;Footnotes ‚õìÔ∏è&lt;/a&gt;
&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Cobra CLI Source Code &lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;GitHub Repository&lt;/a&gt; User: spf13, Current.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;GO in 100 Seconds &lt;a href=&#34;https://www.youtube.com/watch?v=446E-r0rXHI&#34;&gt;Youtube Video&lt;/a&gt; Channel: Fireship, 2021.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Cobra CLI Samples &lt;a href=&#34;https://github.com/Adron/cobra-cli-samples&#34;&gt;GitHub Repository&lt;/a&gt; User: Adron, 2022.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref1:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;Golang Tutorial Series Playlist &lt;a href=&#34;https://www.youtube.com/watch?v=etSN4X_fCnM&amp;amp;list=PL4cUxeGkcC9gC88BEo9czgyS72A3doDeM&#34;&gt;Youtube Channel&lt;/a&gt; Channel: Net Ninja, 2021.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref1:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Capstone Submission Requirements üêß</title>
      <link>http://localhost:1313/techblog/post/paccp0/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/paccp0/</guid>
      <description>&lt;h1 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;To complete the Professional Linux User Group (ProLUG) Professional Administrator Course (PAC), we are required to submit a final Capstone Project.&lt;/p&gt;
&lt;p&gt;This article is a bit out of order, as I proactively chose a project topic before it was formally introduced. The purpose of this article is to document the project requirements as set out by our instructor.&lt;/p&gt;
&lt;p&gt;Of course, I like to make slight modifications to ensure everything is neatly formatted and grouped‚Äîwith plenty of emoji usage for extra flair! üòâ&lt;/p&gt;



&lt;h2 id=&#34;step-1select-a-topic-and-do-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-1select-a-topic-and-do-&#34;&gt;Step 1.Select a topic and do üìå&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-write-a-brief-intro-to-the-project&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-write-a-brief-intro-to-the-project&#34;&gt;A) Write a brief intro to the project&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-outline-technologies&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-outline-technologies&#34;&gt;B) Outline Technologies&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;c-propose-idea-to-instructor&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#c-propose-idea-to-instructor&#34;&gt;C) Propose idea to Instructor&lt;/a&gt;
&lt;/h4&gt;



&lt;h2 id=&#34;step-2research-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-2research-&#34;&gt;Step 2.Research ü§ì&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-confirm-this-is-doable&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-confirm-this-is-doable&#34;&gt;A) Confirm this is doable&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-estimate-time&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-estimate-time&#34;&gt;B) Estimate time&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;c-find-snippets-manuals&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#c-find-snippets-manuals&#34;&gt;C) Find snippets, manuals&lt;/a&gt;
&lt;/h4&gt;



&lt;h2 id=&#34;step-3plan-project-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-3plan-project-&#34;&gt;Step 3.Plan Project üìç&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-find-comparables&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-find-comparables&#34;&gt;A) Find Comparables&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-document-procedure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-document-procedure&#34;&gt;B) Document Procedure&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;c-diagram-project&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#c-diagram-project&#34;&gt;C) Diagram Project&lt;/a&gt;
&lt;/h4&gt;



&lt;h2 id=&#34;step-4diagram-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-4diagram-&#34;&gt;Step 4.Diagram ‚ßÑ&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-create-a-system-diagram-excalidraw&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-create-a-system-diagram-excalidraw&#34;&gt;A) Create a System Diagram (ExcaliDraw)&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-combine-with-documentation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-combine-with-documentation&#34;&gt;B) Combine with Documentation&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;c-export-for-use-in-keynote&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#c-export-for-use-in-keynote&#34;&gt;C) Export for use in Keynote&lt;/a&gt;
&lt;/h4&gt;



&lt;h2 id=&#34;step-5build-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-5build-&#34;&gt;Step 5.Build üõ†Ô∏è&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-document-process&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-document-process&#34;&gt;A) Document Process&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-create-demo&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-create-demo&#34;&gt;B) Create Demo&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;c-essential-truth&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#c-essential-truth&#34;&gt;C) Essential Truth&lt;/a&gt;
&lt;/h4&gt;



&lt;h2 id=&#34;step-6-documentation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-6-documentation-&#34;&gt;Step 6. Documentation üìï&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-create-redline-documentation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-create-redline-documentation&#34;&gt;A) Create Redline Documentation&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-format-in-a-comprehensible-way&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-format-in-a-comprehensible-way&#34;&gt;B) Format in a comprehensible way&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;c-organize-logically&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#c-organize-logically&#34;&gt;C) Organize logically&lt;/a&gt;
&lt;/h4&gt;



&lt;h2 id=&#34;step-7-prepare--present-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#step-7-prepare--present-&#34;&gt;Step 7. Prepare &amp;amp; Present üë®üèª‚Äçüè´&lt;/a&gt;
&lt;/h2&gt;



&lt;h4 id=&#34;a-volunteer-to-present&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#a-volunteer-to-present&#34;&gt;A) Volunteer to Present&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;b-create-keynote-15-20-slides&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#b-create-keynote-15-20-slides&#34;&gt;B) Create Keynote (15-20) Slides&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;i-project-purpose&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#i-project-purpose&#34;&gt;i. project Purpose&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;ii-diagram&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#ii-diagram&#34;&gt;ii. Diagram&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;iii-build-process&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#iii-build-process&#34;&gt;iii. Build Process&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;iv-what-did-you-learn&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#iv-what-did-you-learn&#34;&gt;iv. What did you learn?&lt;/a&gt;
&lt;/h4&gt;



&lt;h4 id=&#34;v-what-transferable-skills-did-you-gain&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#v-what-transferable-skills-did-you-gain&#34;&gt;v. What transferable skills did you gain?&lt;/a&gt;
&lt;/h4&gt;
&lt;hr&gt;



&lt;h1 id=&#34;deliverables-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#deliverables-&#34;&gt;Deliverables üîë&lt;/a&gt;
&lt;/h1&gt;



&lt;h3 id=&#34;-1-comprehensive-documentation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#-1-comprehensive-documentation-&#34;&gt;‚úîÔ∏è 1. Comprehensive Documentation üìï&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;-2-system-diagram-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#-2-system-diagram-&#34;&gt;‚úîÔ∏è 2. System Diagram ‚ßÑ&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;-3-communicative-examples-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#-3-communicative-examples-&#34;&gt;‚úîÔ∏è 3. Communicative Examples üì∏&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;-4-keynote-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#-4-keynote-&#34;&gt;‚úîÔ∏è 4. Keynote üë®üèª‚Äçüè´&lt;/a&gt;
&lt;/h3&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp0/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 4 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu4/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu4/</guid>
      <description>&lt;h1 id=&#34;operating-running-systems-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#operating-running-systems-&#34;&gt;Operating Running Systems ‚ô∫&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU4/sudo.png&#34; alt=&#34;Sodoer Power&#34;&gt;&lt;/p&gt;



&lt;h2 id=&#34;introduction&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#introduction&#34;&gt;Introduction&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In this week&amp;rsquo;s Brown Bag session, we discussed the operation of running systems. This refers to when systems are live and possibly being accessed by users. During this time, we inspect settings, configurations, logs, and monitor running processes.&lt;/p&gt;



&lt;h3 id=&#34;purpose&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#purpose&#34;&gt;Purpose&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Identify anomalies üîç&lt;/li&gt;
&lt;li&gt;Monitor users for incorrect usage üë•&lt;/li&gt;
&lt;li&gt;Detect nefarious behavior ‚ö†Ô∏è&lt;/li&gt;
&lt;li&gt;Ensure processes have adequate resources ‚öôÔ∏è&lt;/li&gt;
&lt;li&gt;Check logs for faults or failures üìù&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h1 id=&#34;class-notes&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#class-notes&#34;&gt;Class Notes&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A project wherein a file name was not being recognized, but the uuid was. Once the uuid was placed in fstab, everything worked fine.&lt;/p&gt;



&lt;h2 id=&#34;grey-beard-wisdom-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#grey-beard-wisdom-&#34;&gt;Grey Beard Wisdom üßô‚Äç‚ôÇÔ∏è&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make sure ports are &lt;strong&gt;open&lt;/strong&gt; &amp;amp; server is &lt;strong&gt;on&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rebuild Backups in a Test Environment to ensure integrity&lt;/li&gt;
&lt;li&gt;Write Stuff that can be supported by your team&lt;/li&gt;
&lt;li&gt;Whats the AI policy for the company?&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;useful-toolsresourcescommands&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#useful-toolsresourcescommands&#34;&gt;Useful Tools/Resources/Commands:&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Tripwire - &lt;a href=&#34;https://www.tripwire.com/&#34;&gt;Sourceforge&lt;/a&gt;
Grubby - &lt;a href=&#34;https://software.opensuse.org/package/grubby&#34;&gt;https://software.opensuse.org/package/grubby&lt;/a&gt;
SANS.org
srq trigger&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;lab-notes-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#lab-notes-&#34;&gt;Lab Notes üß™&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;server-checks&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#server-checks&#34;&gt;Server Checks&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;warm-up&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#warm-up&#34;&gt;Warm Up&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ~ # Change Directory to Home

ls # list

mkdir unit4 # Create a Directory named unit4

mkdir unit4/test/round6 # This fails üôÖ, because the -p option is not invoked 

mkdir -p unit4/test/round6 # This works because the Parent option -p is enables allowing for sub directories ‚úÖ

cd unit4 # Change to unit4 directory

man ps # View the manual for the ps command üëÄ
  
ps -ef # -e Display information about other users processes, including those without controlling terminals. -f Display the uid, pid, parent pid, recent CPU

ps -ef | grep -i root #PID 0, the process ID is zero
  
ps -ef | grep -i root | wc -L #this command could be helpful because within the root processes it finds the process with the longest line. This could help with finding resource heavy processes or identifying complex commands

top
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;pre-lab-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#pre-lab-&#34;&gt;Pre-Lab ü•™&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;rpm -qa | grep -i iostat #should find nothing üëç

dnf iostat #This automatically invoke an install response ü™Ñ

Install package &#39;sysstat&#39; to provide command &#39;iostat&#39;? [N/y] y
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;confirming-that-sysstat-is-installed-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#confirming-that-sysstat-is-installed-&#34;&gt;Confirming that Sysstat is installed üëç&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU4/sysstat.png&#34; alt=&#34;iostat screenshot&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpm ‚Äìqa | grep ‚Äìi sysstat  # sysstat-12.5.4-8.el9_4.x86_64

dnf install sysstat  # Unnessecary üëé

rpm ‚Äìqa | grep ‚ÄìI sysstat  # Didn&#39;t work üòê

rpm ‚Äìqi sysstat&amp;lt;version&amp;gt;   # Didn&#39;t work &#39;unexpected token newline&#39;
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;confirming-that-vim-is-installed-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#confirming-that-vim-is-installed-&#34;&gt;Confirming that Vim is installed üëç&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;rpm -qa | grep -i vim # vim-minimal-8.2.2637-20.el9_l.x86_64 ‚úÖ
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;lab-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#lab-&#34;&gt;Lab ü•ºüß™&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;gathering-system-release-and-kernel-info-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#gathering-system-release-and-kernel-info-&#34;&gt;Gathering System release and kernel info üåΩ&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cat/etc/*release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU4/etcrelease.png&#34; alt=&#34;cat /etc/*release screenshot&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;uname #Linux

uname -a #Show all

uname -r #release

rpm -qa | grep -i kernel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU4/kernelinfo.png&#34; alt=&#34;rpm -qa | grep -i kernel ouput&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;check-the-number-of-disks-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-the-number-of-disks-&#34;&gt;Check the number of &lt;strong&gt;Disks&lt;/strong&gt; üíæ&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;fdisk -l #list partition tables

ls /dev/sd* #lists disks, with a wildcard at the end

pvs #physical volumes, Volume group and format

vgs #Volumes Groups

lvs #Logical Volumes

pvdisplay # More Comprehensive listing of Physical Volumes

vgdisplay # More Comprehensive listing of Volume Groups

lvdisplay # More Comprehensive listing of Logical Volumes
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;check-disk-statistics-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-disk-statistics-&#34;&gt;Check &lt;strong&gt;Disk&lt;/strong&gt; Statistics üíæ&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;iostat -d # Displays only device statistics

iostat -d 2 # Displays only device statistics in 2 second increments

iostat -d 2 5 # Displays only device statistics in 2 second increments for a total of 5 seconds
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;check-the-amount-of-ram-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-the-amount-of-ram-&#34;&gt;Check the amount of RAM üç™&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cat /proc/meminfo # a very comprehensive listing of memory info that spans multiple pages

free # Displays **Memory** and **Swap** Space usage

free -m # Diplays **Memory** usage in Mebibytes 1024 bytes MiB

üçº I was today years old when I learned what a Mebibyte is üòÑ
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;checking--of-processors-and-processor-info&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#checking--of-processors-and-processor-info&#34;&gt;Checking # of processors and processor info&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cat /proc/cpuinfo

cat /proc/cpuinfo | grep proc | wc ‚Äìl

iostat -c

iostat -c 2 # Runs CPU options in 2 second intervals.

iostat -c 2 5 # I had run this command before, in two second intervals for a total of 5 seconds
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;check-system-uptime&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-system-uptime&#34;&gt;Check system uptime&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;uptime # 16:40  up 2 days, 17:38, 2 users, load averages: 2.81 2.46 2.30

man uptime # show how long system has been running for 1 min 2 min 15 mins
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;check-recent-logins&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-recent-logins&#34;&gt;Check Recent Logins&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;last # vertical list of users ttys 

last | more # more allows me to scroll through

w # Display detailed info about currently logged in users 

who # Prints basic info about users currently logged in

whoami # Just lists your user name
&lt;/code&gt;&lt;/pre&gt;



&lt;h5 id=&#34;difference-between-w--who-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#difference-between-w--who-&#34;&gt;Difference between w / who üßê&lt;/a&gt;
&lt;/h5&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Information Provided&lt;/th&gt;
          &lt;th&gt;Key Focus&lt;/th&gt;
          &lt;th&gt;Use Case&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;who&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Basic info about logged-in users (username, terminal, login time, remote host)&lt;/td&gt;
          &lt;td&gt;Simple listing of users currently logged in&lt;/td&gt;
          &lt;td&gt;Quick check on who is logged in&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Detailed info about logged-in users, system load, idle time, and active processes&lt;/td&gt;
          &lt;td&gt;Who is logged in and what they are doing, with system load info&lt;/td&gt;
          &lt;td&gt;System monitoring and activity tracking&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;



&lt;h4 id=&#34;check-running-processes-and-services&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-running-processes-and-services&#34;&gt;Check running processes and services&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ps -aux | more # sending all listed processes to more

ps -ef | more # list every process

ps -ef | wc -l # counts the number of lines from a full format listing
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;looking-at-historical-system-usage&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#looking-at-historical-system-usage&#34;&gt;Looking at Historical System Usage&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;sar - Collect, report, or save system activity information.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sar | more # check processing for the last day

sar -r | more # check all processes
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;sar-was-not-working-so-i-had-to-figure-it-out&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#sar-was-not-working-so-i-had-to-figure-it-out&#34;&gt;Sar was not working, so I had to figure it out&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo dnf install sysstat üëç

sudo systemctl enable --now sysstat ‚úÖ

sudo systemctl start sysstat ‚úÖ

sudo systemctl status sysstat ‚úÖ

sudo vim /etc/sysconfig/sysstat ‚úÖ

ENABLED=&amp;quot;true&amp;quot; ‚úÖ

sudo systemctl restart sysstat ‚ô∫

sar # üëç Works Now!
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;ok-back-on-course-with-sar&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#ok-back-on-course-with-sar&#34;&gt;Ok back on course with sar&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sar 2 # runs sar every 2 seconds

sar 2 5 # runs sar every 2 seconds for a total duration of 5 seconds
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;check-sar-logs-for-previous-daily-usage&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#check-sar-logs-for-previous-daily-usage&#34;&gt;Check sar logs for previous daily usage&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd var/log/sa/

# ls
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;interesting-sar-logs-are-store-in-varlog-whod-a-thunk-it&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#interesting-sar-logs-are-store-in-varlog-whod-a-thunk-it&#34;&gt;Interesting, sar logs are store in var/log/ who&amp;rsquo;d a thunk it&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sar -f sa03 | head
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;exploring-cron&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#exploring-cron&#34;&gt;Exploring Cron&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Calm down snoop, this is job related üí©&lt;/p&gt;



&lt;h4 id=&#34;there-is-a-daemon-running-my-cron-thank-god-i-can-check-in-on-it-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#there-is-a-daemon-running-my-cron-thank-god-i-can-check-in-on-it-&#34;&gt;There is a daemon running my cron, thank god I can check in on it üòà&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ps -ef | grep -i cron

systemctl status crond

/var/spool/cron 

ls -ld /etc/cron*
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;



&lt;h1 id=&#34;an-operations-bridge&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#an-operations-bridge&#34;&gt;An Operations Bridge&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU4/opbridge.webp&#34; alt=&#34;Abstract Operations Bridge Dashboard&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A centralized platform that provides real-time visibility and control over an organization&amp;rsquo;s IT infrastructure and services.&lt;br&gt;
‚Äî CIO WIKI&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2 id=&#34;essentially-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#essentially-&#34;&gt;Essentially üß™&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A unified view of operations, consolidating and correlating data from various sources.&lt;/p&gt;



&lt;h2 id=&#34;general-purpose&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#general-purpose&#34;&gt;General Purpose&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Streamline IT operations ‚ö°&lt;/li&gt;
&lt;li&gt;Improve service availability üìà&lt;/li&gt;
&lt;li&gt;Enhance incident response and resolution üîç&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;general-features&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#general-features&#34;&gt;General Features&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;event-management-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#event-management-&#34;&gt;Event Management üîî&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Collects and consolidates events and alerts from network devices, servers, applications, and security systems. Applies correlation and filtering to identify meaningful incidents and prioritize them based on service impact.&lt;/p&gt;



&lt;h3 id=&#34;performance-monitoring-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#performance-monitoring-&#34;&gt;Performance Monitoring üèéÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Monitors key performance indicators (KPIs) for infrastructure, applications, and services. Identifies performance bottlenecks, trends, and anomalies, enabling proactive optimization.&lt;/p&gt;



&lt;h3 id=&#34;incident-management-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#incident-management-&#34;&gt;Incident Management üö®&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Captures, tracks, and escalates incidents. Facilitates collaboration and prioritization, ensuring timely resolution with historical insights and knowledge base integration for faster fixes.&lt;/p&gt;



&lt;h3 id=&#34;root-cause-analysis-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#root-cause-analysis-&#34;&gt;Root Cause Analysis ü¶∑&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Analyzes events, performance data, and logs to uncover the root causes of incidents. Uses data analytics to correlate related events and identify underlying issues affecting service availability.&lt;/p&gt;



&lt;h3 id=&#34;dashboards-and-reporting-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#dashboards-and-reporting-&#34;&gt;Dashboards and Reporting üìä&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Provides customizable dashboards and reports to visualize the health, performance, and availability of IT systems. Allows stakeholders to monitor key metrics, track service-level agreements (SLAs), and gain insights into overall system performance.&lt;/p&gt;



&lt;h3 id=&#34;automation-and-orchestration-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#automation-and-orchestration-&#34;&gt;Automation and Orchestration ‚öôÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Includes automation capabilities for routine IT tasks like system restarts, service provisioning, and configuration changes. Reduces manual effort, increases efficiency, and minimizes human errors.&lt;/p&gt;



&lt;h2 id=&#34;potential-challenges&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#potential-challenges&#34;&gt;Potential Challenges&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;initial-setup-and-configuration-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#initial-setup-and-configuration-&#34;&gt;Initial Setup and Configuration üõ†Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Can be complex and may require specialized expertise and significant manpower.&lt;/p&gt;



&lt;h3 id=&#34;integration-with-multiple-systems-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#integration-with-multiple-systems-&#34;&gt;Integration with Multiple Systems üß©&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;As the system grows in complexity, there‚Äôs an increased chance of failure and maintenance challenges.&lt;/p&gt;



&lt;h3 id=&#34;training-and-skill-development-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#training-and-skill-development-&#34;&gt;Training and Skill Development üìö&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Users may need training to effectively manage and operate the platform. Integrating disparate systems requires time and expertise.&lt;/p&gt;



&lt;h3 id=&#34;ongoing-maintenance-and-updates-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#ongoing-maintenance-and-updates-&#34;&gt;Ongoing Maintenance and Updates üîÑ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Frequent updates to data sources can disrupt connections, making regular maintenance essential. It‚Äôs not a turnkey solution.&lt;/p&gt;



&lt;h2 id=&#34;personal-take&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#personal-take&#34;&gt;Personal Take&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;the-term&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#the-term&#34;&gt;The Term&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The term &lt;em&gt;Operations Bridge&lt;/em&gt; is relatively new to me. I would‚Äôve called this a &lt;em&gt;Unified Dashboard&lt;/em&gt;. The idea of bridging operations by consolidating and unifying data makes sense, but it‚Äôs a bit more complex than just a simple dashboard.&lt;/p&gt;



&lt;h2 id=&#34;outstanding-feature&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#outstanding-feature&#34;&gt;Outstanding Feature&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The dashboard and reporting capabilities are the most critical. Seeing everything at a glance is invaluable. Other features can often be achieved using smaller tools like Cron jobs, Ansible, Bash, or Prometheus.&lt;/p&gt;



&lt;h2 id=&#34;complexity-as-a-weakness&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#complexity-as-a-weakness&#34;&gt;Complexity as a Weakness&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The complexity is a major drawback. Constant tweaking seems inevitable in the ever-changing IT landscape. Large organizations with stable, long-term systems may benefit most, but the potential for cascading errors, like in Chernobyl, comes to mind when a single feedback loop causes widespread failures.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;-incident-response-scenario-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#-incident-response-scenario-&#34;&gt;üö® Incident Response Scenario üö®&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU4/ircheat.png&#34; alt=&#34;Incident Response CheatSheet Screenshot&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚Äî Incident Response Cheatsheet&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2 id=&#34;scenario-outline&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#scenario-outline&#34;&gt;Scenario Outline&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Your team lacks documentation on how to check out a server during an incident.&lt;br&gt;
Develop a procedure detailing what an operations person should do when a system is suspected of malfunctioning.&lt;/p&gt;



&lt;h3 id=&#34;key-points&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#key-points&#34;&gt;Key Points&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Undocumented server üõ†Ô∏è&lt;/li&gt;
&lt;li&gt;Server malfunctioning üö´&lt;/li&gt;
&lt;li&gt;Need for procedural diagnosis üßë‚Äçüíª&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;incident-response-cycle&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#incident-response-cycle&#34;&gt;Incident Response Cycle&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Detect&lt;/li&gt;
&lt;li&gt;Respond&lt;/li&gt;
&lt;li&gt;Mitigate&lt;/li&gt;
&lt;li&gt;Report&lt;/li&gt;
&lt;li&gt;Recover&lt;/li&gt;
&lt;li&gt;Remediate&lt;/li&gt;
&lt;li&gt;Lessons&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;custom-incident-procedure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#custom-incident-procedure&#34;&gt;Custom Incident Procedure&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;1-detect--observe&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#1-detect--observe&#34;&gt;1. Detect / Observe&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Check process logs&lt;/li&gt;
&lt;li&gt;Check security logs&lt;/li&gt;
&lt;li&gt;Check application logs&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;2-respond&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#2-respond&#34;&gt;2. Respond&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;snapshot-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#snapshot-&#34;&gt;Snapshot üì∏&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;If possible, take a snapshot of the current system. Treat it like a crime scene‚Äînothing should be disturbed or altered. This snapshot is crucial for forensic analysis of the system&amp;rsquo;s state.&lt;/p&gt;



&lt;h4 id=&#34;triage-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#triage-&#34;&gt;Triage ü©∫&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Scan the system for symptoms. Determine if it&amp;rsquo;s a &lt;strong&gt;security incident&lt;/strong&gt; or a &lt;strong&gt;bug&lt;/strong&gt;.&lt;/p&gt;



&lt;h5 id=&#34;examine-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#examine-&#34;&gt;Examine ü©ª&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Network configuration&lt;/li&gt;
&lt;li&gt;DNS settings&lt;/li&gt;
&lt;li&gt;Hosts file&lt;/li&gt;
&lt;li&gt;Autostart processes&lt;/li&gt;
&lt;li&gt;Scheduled jobs&lt;/li&gt;
&lt;/ul&gt;



&lt;h5 id=&#34;list-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#list-&#34;&gt;List üìù&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Active network connections&lt;/li&gt;
&lt;li&gt;System users&lt;/li&gt;
&lt;li&gt;Running processes&lt;/li&gt;
&lt;li&gt;Recently modified files&lt;/li&gt;
&lt;/ul&gt;



&lt;h5 id=&#34;verify-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#verify-&#34;&gt;Verify ‚úî&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Integrity of installed packages&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;3-mitigate&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#3-mitigate&#34;&gt;3. Mitigate&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;After triaging, identify the nature of the issue. If it&amp;rsquo;s a:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Security Incident&lt;/strong&gt; üö® ‚Äî Follow the [Crisis Management Procedure]&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bug&lt;/strong&gt; ü™≤ ‚Äî Proceed with the steps below&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;4-report--declare-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#4-report--declare-&#34;&gt;4. Report / Declare üì£&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Inform the team and supervisors that the incident has been triaged, diagnosed, documented, and mitigated.&lt;/p&gt;



&lt;h3 id=&#34;5-recover-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#5-recover-&#34;&gt;5. Recover üõ†Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Develop or follow a recovery plan to restore the system to normal operation. Document the recovery steps for future reference.&lt;/p&gt;



&lt;h3 id=&#34;6-remediate--repair-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#6-remediate--repair-&#34;&gt;6. Remediate / Repair üõ†Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Fix the issue based on its nature. This could involve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reconfiguration&lt;/li&gt;
&lt;li&gt;Patching&lt;/li&gt;
&lt;li&gt;Blocking/Banning&lt;/li&gt;
&lt;li&gt;Restoration&lt;/li&gt;
&lt;li&gt;Allocating new resources&lt;/li&gt;
&lt;li&gt;Turning it off and on üòÅ&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;7-document--lessons-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#7-document--lessons-&#34;&gt;7. Document / Lessons üìù&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Write a report detailing the problem, its cause, and the steps taken to resolve it. Include a &lt;strong&gt;lessons learned&lt;/strong&gt; section to improve future responses.&lt;/p&gt;



&lt;h3 id=&#34;8-bask-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#8-bask-&#34;&gt;8. Bask ‚òïÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Once resolved, lean back, nod in satisfaction, and enjoy your coffee. Every resolution deserves a small moment of celebration.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;the-battle-drill---4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#the-battle-drill---4&#34;&gt;The Battle Drill ‚öîÔ∏è  &lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A &lt;strong&gt;Battle Drill&lt;/strong&gt; is a standard operating procedure used in infantry training. It‚Äôs based on common scenarios that require rapid, collective action. By practicing battle drills, a team can react quickly and efficiently to dangerous situations without the need for complex decision-making.&lt;/p&gt;
&lt;p&gt;Battle drills prepare infantry for swift, organized, and aggressive responses to high-stress situations such as explosions, direct fire, flashing lights, chemical exposure, or sudden assaults.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Battle Drills are for those moments when everything is going wrong and you need a reactionary response.&lt;!-- raw HTML omitted --&gt;
‚Äî &lt;!-- raw HTML omitted --&gt;Scott Champine&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‚è±Ô∏è &lt;strong&gt;Reaction time and mental readiness&lt;/strong&gt; are key to success.&lt;/p&gt;



&lt;h2 id=&#34;application-to-operational-incidents-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#application-to-operational-incidents-&#34;&gt;Application to Operational Incidents üõ†Ô∏è&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The principles behind battle drills can easily be applied to system operations, where rapid group responses to incidents are critical.&lt;/p&gt;



&lt;h3 id=&#34;documentation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#documentation-&#34;&gt;Documentation üìù&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Procedures must be &lt;strong&gt;well-documented&lt;/strong&gt; and easy to understand for all possible scenarios.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;clear-objectives-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#clear-objectives-&#34;&gt;Clear Objectives üéØ&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Leadership communicates &lt;strong&gt;simple and clear objectives&lt;/strong&gt; to the team for each scenario.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;drilling--testing-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#drilling--testing-&#34;&gt;Drilling / Testing üßë‚Äçüíª&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Teams &lt;strong&gt;practice scenarios together&lt;/strong&gt;, following the documented procedure and maintaining effective communication.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;known-procedure-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#known-procedure-&#34;&gt;Known Procedure üë•&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Through &lt;strong&gt;review and practice&lt;/strong&gt;, everyone knows their role and objectives in the group, ensuring a unified response in any scenario.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;the-importance-of-drilling-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#the-importance-of-drilling-&#34;&gt;The Importance of Drilling üîÑ&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In real incidents, there‚Äôs often no time to plan a response. For regular operations, we have the luxury of preparation and research, but in high-stress, mission-critical situations, the pressure can become overwhelming, potentially leading to paralysis. &lt;strong&gt;Preparedness through practice&lt;/strong&gt; is essential.&lt;/p&gt;



&lt;h2 id=&#34;knowing-your-tools-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#knowing-your-tools-&#34;&gt;Knowing Your Tools üß∞&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In the infantry, this means knowing how to load, reload, field-strip, and fire a weapon, or apply first aid using a trauma kit to save a fellow soldier.&lt;/p&gt;
&lt;p&gt;These concepts are equally valuable in system operations. Knowing how to run basic commands, troubleshoot issues, break down problems, and write scripts all fall under &lt;strong&gt;knowing your tools&lt;/strong&gt;. Just as a soldier must be able to handle their equipment with their eyes closed, an operator must be fluent in the commands, tools, and procedures they rely on daily. This level of expertise comes from &lt;strong&gt;memorizing commands, knowing paths, and practicing scripting&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;detection&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#detection&#34;&gt;Detection&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;response&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#response&#34;&gt;Response&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;mitigation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#mitigation&#34;&gt;Mitigation&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;reporting&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#reporting&#34;&gt;Reporting&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;recovery&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#recovery&#34;&gt;Recovery&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;remediation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#remediation&#34;&gt;Remediation&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;lessons-learned&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#lessons-learned&#34;&gt;Lessons Learned&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;after-action-review&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#after-action-review&#34;&gt;After action review&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;operations-bridge&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#operations-bridge&#34;&gt;Operations Bridge&lt;/a&gt;
&lt;/h3&gt;
&lt;hr&gt;



&lt;h1 id=&#34;reflecting-upon-unit-4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#reflecting-upon-unit-4&#34;&gt;Reflecting upon Unit #4&lt;/a&gt;
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;What questions do you still have about this week?&lt;/li&gt;
&lt;/ol&gt;



&lt;h2 id=&#34;note-taking-improvements&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#note-taking-improvements&#34;&gt;Note-Taking Improvements&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A few months before this course, I realized that to deepen my understanding of systems, I needed to take extensive notes I could easily refer back to. After doing thorough research on different note-taking systems, I concluded that LogSeq&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; was the best fit for my needs.&lt;/p&gt;
&lt;p&gt;I chose LogSeq&lt;sup id=&#34;fnref1:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It‚Äôs open source&lt;/li&gt;
&lt;li&gt;Local-first&lt;/li&gt;
&lt;li&gt;Supports tags&lt;/li&gt;
&lt;li&gt;Uses Markdown&lt;/li&gt;
&lt;li&gt;Works across all platforms&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since adopting LogSeq, I‚Äôve taken an immense amount of notes. I&amp;rsquo;ve also created a lot of cheat sheets and references, thanks to LLMs and various GitHub repositories. Let‚Äôs just say my note-taking game has been strong.&lt;/p&gt;
&lt;p&gt;When this course started, I knew that note-taking would be a big component. Most of my notes are private since I prefer to write candidly, sometimes using strong language. To share more polished, public-friendly notes, I created this HUGO blog. I‚Äôm a stickler for clean layouts, typesetting, and readability, so filling out pre-formatted documents isn‚Äôt my style.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu4/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Operations Bridge &lt;a href=&#34;https://cio-wiki.org/wiki/Operations_Bridge&#34;&gt;Wiki&lt;/a&gt; CIO-WIKI, 2024.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Incident Response Cheatsheet Version 1.8 &lt;a href=&#34;https://zeltser.com/media/docs/security-incident-survey-cheat-sheet.pdf?msc=Cheat+Sheet+Blog&#34;&gt;PDF Reference&lt;/a&gt; Lenny Zeltser, 2024.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Detailed Crisis Management Procedure &lt;a href=&#34;https://trevorsmale.github.io/techblog/PACU4&#34;&gt;Blog&lt;/a&gt; Trevor Smale, 2024.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;Battle Drill &lt;a href=&#34;https://en.wikipedia.org/wiki/Battle_drill&#34;&gt;Wiki&lt;/a&gt; Wikipedia.org, 2024.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;Note Taking &lt;a href=&#34;https://logseq.com/&#34;&gt;Software&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref1:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Why Btrfs ü§î</title>
      <link>http://localhost:1313/techblog/post/btrfs/</link>
      <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/btrfs/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Btrfs/btrfslogo.png&#34; alt=&#34;Custom Btrfs Banner&#34;&gt;&lt;/p&gt;



&lt;h1 id=&#34;btrfs-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#btrfs-&#34;&gt;Btrfs üíæ&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Btrfs stands for &lt;strong&gt;B-tree File System&lt;/strong&gt;, not &amp;ldquo;Better File System,&amp;rdquo; though it‚Äôs easy to see why people might think that. I believe Btrfs is the future for both small and large-scale projects, as it reduces the need for manual and automated maintenance, while simplifying backup and restoration processes.&lt;/p&gt;
&lt;p&gt;This article aims to shed light on the history and motivation behind creating Btrfs, its core functionality, and the standout features that set it apart from the competition.&lt;/p&gt;



&lt;h2 id=&#34;history&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#history&#34;&gt;History&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;motivation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#motivation&#34;&gt;Motivation&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The idea for Btrfs was first proposed by IBM researcher and bioinformatician &lt;strong&gt;Ohad Rodeh&lt;/strong&gt; at a USENIX conference in 2007. The goal was to develop a &lt;strong&gt;copy-on-write (COW)&lt;/strong&gt;-friendly B-tree algorithm, which would allow for efficient data storage and retrieval without the overhead typical of other file systems.&lt;/p&gt;
&lt;p&gt;As Valerie Aurora explained:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;To start with, B-trees in their native form are wildly incompatible with COW. The leaves of the tree are linked together, so when the location of one leaf changes (via a write‚Äîwhich implies a copy to a new block), the link in the adjacent leaf changes, which triggers another copy-on-write and location change, which changes the link in the next leaf&amp;hellip; The result is that the entire B-tree, from top to bottom, has to be rewritten every time one leaf is changed.&amp;rdquo;&lt;br&gt;
‚Äì Valerie Aurora&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Chris Mason&lt;/strong&gt;, a core developer of the &lt;strong&gt;Reiser Filesystem&lt;/strong&gt;, liked the idea and saw an opportunity to move beyond Reiser, which used B-trees but wasn‚Äôt optimized for COW. Mason brought the idea to his new job at Oracle, where development of Btrfs began in earnest.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I started Btrfs soon after joining Oracle. I had a unique opportunity to take a detailed look at the features missing from Linux, and felt that Btrfs was the best way to solve them.&amp;rdquo;&lt;br&gt;
‚Äì Chris Mason&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In collaboration with Oracle colleague &lt;strong&gt;Zach Brown&lt;/strong&gt;, they drafted the initial version of Btrfs.&lt;/p&gt;



&lt;h3 id=&#34;rapid-development-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#rapid-development-&#34;&gt;Rapid Development ‚è±Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Thanks to corporate backing and a team of experienced developers, Btrfs moved through an aggressive development cycle. Within two years of the technical proposal, a working 1.0 version of Btrfs was released in late 2008.&lt;/p&gt;
&lt;p&gt;Shortly after its introduction, Btrfs was merged into the &lt;strong&gt;mainline Linux kernel&lt;/strong&gt;. Despite the conservative nature of file system adoption‚Äîwhere admins, systems engineers, and software engineers prefer proven, stable systems‚ÄîBtrfs quickly gained traction.&lt;/p&gt;
&lt;p&gt;In 2015, &lt;strong&gt;SUSE Linux Enterprise Server (SLES)&lt;/strong&gt; became the first major Linux distribution to adopt Btrfs as its default file system, citing it as the future of Linux storage solutions.&lt;/p&gt;



&lt;h3 id=&#34;enterprise-adoption-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#enterprise-adoption-&#34;&gt;Enterprise Adoption üìä&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Today, Btrfs is the default file system for several major enterprise Linux distributions, including &lt;strong&gt;SUSE&lt;/strong&gt;, &lt;strong&gt;Fujitsu Linux&lt;/strong&gt;, &lt;strong&gt;Ubuntu&lt;/strong&gt;, &lt;strong&gt;Oracle Linux&lt;/strong&gt;, and popular user distributions like &lt;strong&gt;Fedora&lt;/strong&gt;, &lt;strong&gt;Arch&lt;/strong&gt;, and &lt;strong&gt;Gentoo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In fact, &lt;strong&gt;Meta&lt;/strong&gt; (formerly Facebook) uses Btrfs to manage their large, dynamic data sets. According to core developer &lt;strong&gt;Josef Bacik&lt;/strong&gt;, using Btrfs at Meta has significantly reduced access times and contributed to cost reductions in production environments.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;



&lt;h2 id=&#34;how-btrfs-works-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#how-btrfs-works-&#34;&gt;How Btrfs Works ‚öôÔ∏è&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;the-b-tree-algorithm-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#the-b-tree-algorithm-&#34;&gt;The B-Tree+ Algorithm üå≥&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;At its core, Btrfs relies on a &lt;strong&gt;B-tree&lt;/strong&gt;, a type of data structure designed to organize and store data efficiently.&lt;/p&gt;
&lt;p&gt;Here is a basic diagram of a B-tree, though in file systems, it gets more complex:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.github.com/alexeygrigorev/wiki-figures/master/ulb/dbsa/ind/btree-ex.png&#34; alt=&#34;B-Tree Diagram&#34;&gt;&lt;/p&gt;
&lt;p&gt;A B-tree consists of &lt;strong&gt;nodes&lt;/strong&gt; and &lt;strong&gt;links&lt;/strong&gt; (sometimes referred to as &lt;strong&gt;keys&lt;/strong&gt; and &lt;strong&gt;pointers&lt;/strong&gt; or &lt;strong&gt;leaves&lt;/strong&gt; and &lt;strong&gt;branches&lt;/strong&gt;), which drastically reduce seek time. This ensures that, no matter how much data you store, finding the right file is quick and doesn‚Äôt require searching through everything.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;root node&lt;/strong&gt; is a type of index stored in a fixed location on the disk. It serves as the starting point for a rapid search called &lt;strong&gt;fanning out&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This structure reduces disk access time and, in turn, improves overall system efficiency. The relationship between the depth of nodes and the breadth of data is known as the &lt;strong&gt;fan-out factor&lt;/strong&gt;. Tuning this ratio can either speed up searches (with a wider spread) or reduce write size for smaller segments.&lt;/p&gt;



&lt;h3 id=&#34;copy-on-write-cow-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#copy-on-write-cow-&#34;&gt;Copy-on-Write (COW) üêÑ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Copy-on-Write (COW)&lt;/strong&gt; is a method where data and metadata are not overwritten in place. Instead, they are copied to a new location before the update is finalized. Btrfs employs COW in conjunction with its B-tree algorithm to maintain data integrity.&lt;/p&gt;
&lt;p&gt;Btrfs also uses &lt;strong&gt;delayed allocation&lt;/strong&gt;, where metadata is updated first, linking it to new data before the actual data is copied &lt;strong&gt;Persistant Pre Allocation&lt;/strong&gt; to a new location. This delay allows the file system to organize sector placement called &lt;strong&gt;Extent Base Allocation&lt;/strong&gt; and optimize metadata before the actual write &lt;strong&gt;Multi-Block Allocation&lt;/strong&gt;, reducing unnecessary reads and writes.&lt;/p&gt;
&lt;p&gt;This delayed allocation process supports &lt;strong&gt;wear leveling&lt;/strong&gt; (also known as &lt;strong&gt;TRIM&lt;/strong&gt;) on SSDs, where data is written to new sectors to avoid repeatedly writing to the same location, thus extending the lifespan of the drive.&lt;/p&gt;



&lt;h3 id=&#34;snapshots-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#snapshots-&#34;&gt;Snapshots üì∏&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Snapshots&lt;/strong&gt; are one of Btrfs&amp;rsquo;s standout features. They use COW to create lightweight, efficient snapshots of data at any given time.&lt;/p&gt;
&lt;p&gt;Unlike traditional Linux filesystems, which only allow snapshots of &lt;strong&gt;logical volumes&lt;/strong&gt;, Btrfs can snapshot both &lt;strong&gt;volumes&lt;/strong&gt; and &lt;strong&gt;subvolumes&lt;/strong&gt;. This means that the entire data set‚Äîdown to the subvolume level‚Äîcan be efficiently snapshotted. Snapshots in Btrfs do not require duplication of data, only tracking changes made after the snapshot was taken.&lt;/p&gt;



&lt;h3 id=&#34;cloning-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#cloning-&#34;&gt;Cloning üêëüêë&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Cloning&lt;/strong&gt; in Btrfs allows you to create &lt;strong&gt;writeable copies&lt;/strong&gt; of subvolumes or snapshots, which share the same data blocks until changes are made. Unlike traditional file copying, cloning doesn&amp;rsquo;t duplicate the original data, making it fast and storage-efficient. When modifications are made, only the changed blocks are copied, leaving the rest shared between the clone and the original.&lt;/p&gt;
&lt;p&gt;This makes cloning in Btrfs ideal for use cases where multiple environments or datasets need to be derived from the same base system, without significant storage overhead.&lt;/p&gt;



&lt;h3 id=&#34;dynamic-online-storage-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#dynamic-online-storage-&#34;&gt;Dynamic Online Storage üìàüìâ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Btrfs allows you to manage storage pools dynamically with &lt;strong&gt;online resizing&lt;/strong&gt; and device management, meaning that you can expand and shrink file systems while they are mounted and in use. This flexibility helps reduce downtime and allows systems to scale easily with growing storage needs.&lt;/p&gt;



&lt;h4 id=&#34;expanding-disk-pools-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#expanding-disk-pools-&#34;&gt;Expanding Disk Pools üèä‚Äç‚ôÇÔ∏èüèä‚Äç‚ôÇÔ∏èüèä‚Äç‚ôÇÔ∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;You can add new disks to a Btrfs file system without stopping the system. With a simple command, Btrfs integrates the new storage into the existing pool, redistributing data across devices if necessary. This feature makes Btrfs highly scalable, especially in environments where storage demands can grow unpredictably.&lt;/p&gt;



&lt;h4 id=&#34;resizeable-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#resizeable-&#34;&gt;Resizeable üìè&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Btrfs volumes can be &lt;strong&gt;expanded or shrunk&lt;/strong&gt; online, without unmounting the file system. Expanding is as simple as adding more storage, while shrinking requires no special process apart from the resizing command. This dynamic resizing means you can adjust the size of your file system to suit your current storage needs.&lt;/p&gt;



&lt;h4 id=&#34;self-healing-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#self-healing-&#34;&gt;Self-Healing ‚ù§Ô∏è‚Äçü©π&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Btrfs provides &lt;strong&gt;self-healing&lt;/strong&gt; capabilities when used in a redundant RAID setup. Through &lt;strong&gt;data and metadata checksumming&lt;/strong&gt;, Btrfs can detect corrupted blocks and automatically fix them using redundant copies of the data. This ensures data integrity without user intervention, particularly useful for critical data environments.&lt;/p&gt;



&lt;h3 id=&#34;compression-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#compression-&#34;&gt;Compression ü™ó&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Btrfs supports &lt;strong&gt;transparent compression&lt;/strong&gt;, which means files can be compressed as they are written to disk, saving space without requiring manual compression. It supports multiple algorithms like &lt;strong&gt;LZO&lt;/strong&gt;, &lt;strong&gt;Zlib&lt;/strong&gt;, and &lt;strong&gt;Zstandard (ZSTD)&lt;/strong&gt;, each with different balances of speed and compression ratio. This feature helps save storage space and can improve performance, especially when working with large datasets.&lt;/p&gt;



&lt;h3 id=&#34;technical-feature-list-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#technical-feature-list-&#34;&gt;Technical Feature List: üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Journaling&lt;/strong&gt;: Keeps track of changes before they are committed, helping with data recovery in case of a crash.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extent Base Allocation&lt;/strong&gt;: Allocates large, contiguous blocks of storage to reduce fragmentation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Persistent Pre-allocation&lt;/strong&gt;: Reserves space for a file at creation to prevent fragmentation and improve performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Delayed Allocation&lt;/strong&gt;: Delays the allocation of disk space until data is written, optimizing space management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-block Allocation&lt;/strong&gt;: Allocates multiple blocks at once to increase efficiency, especially for large files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stripe-aware Allocation&lt;/strong&gt;: Optimizes block allocation for RAID systems by aligning data with RAID stripes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resizeable with resize2fs&lt;/strong&gt;: Can be resized (grown or shrunk) using the resize2fs tool.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B-tree Balancing Algorithm - Different from XFS (COW B Tree)&lt;/strong&gt;: Uses a specific B-tree balancing algorithm for efficient file system organization and copy-on-write operations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Copy-on-Write (COW)&lt;/strong&gt;: Writes modified data to new locations rather than overwriting existing data, preventing data corruption.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Snapshots and Clones&lt;/strong&gt;: Creates point-in-time copies of data (snapshots) and allows for duplication (clones) without full data replication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Built-in RAID Support&lt;/strong&gt;: Provides native support for RAID configurations, improving data redundancy and performance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data and Metadata Checksumming&lt;/strong&gt;: Ensures data integrity by verifying both data and metadata through checksums.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-Healing&lt;/strong&gt;: Automatically repairs corrupted data using mirrored or parity blocks in RAID configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Subvolumes&lt;/strong&gt;: Supports the creation of isolated subvolumes within the same file system for better data management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Online Resizing&lt;/strong&gt;: Allows the file system to be resized while it&amp;rsquo;s still mounted and in use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compression (LZO, ZLIB, ZSTD)&lt;/strong&gt;: Offers various compression algorithms to reduce storage space usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deduplication&lt;/strong&gt;: Eliminates duplicate copies of repeating data to save space.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;core-commands-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#core-commands-&#34;&gt;Core Commands ü™®&lt;/a&gt;
&lt;/h2&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkfs.btrfs&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Creates a new Btrfs file system on a specified device or partition.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs subvolume create&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Creates a new subvolume within an existing Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs subvolume delete &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Deletes a specified subvolume from the Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs subvolume list &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lists all subvolumes within a Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs filesystem show &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Displays detailed information about the Btrfs file systems on all mounted devices.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs filesystem df &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shows disk space usage, including metadata and data, for a Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs balance start &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Begins a balancing operation to redistribute data and metadata across the Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs balance cancel &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cancels an ongoing balancing operation.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs scrub start &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Initiates a scrub operation to verify data integrity on a Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs scrub status &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Shows the status of an ongoing scrub operation.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs device add &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adds a new device to an existing Btrfs file system, allowing for dynamic storage expansion.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs device delete&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removes a specified device from a Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs device stats &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Displays statistics and error information about devices in a Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs check &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checks the integrity of a Btrfs file system, often used for troubleshooting.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs rescue chunk-recover &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Attempts to recover data chunks from a damaged Btrfs file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs filesystem resize &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Resizes a Btrfs file system, either expanding or shrinking it dynamically.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs snapshot &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Creates a read-only or read-write snapshot of a subvolume or file system.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs property set&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modifies properties of a Btrfs file system or its subvolumes (e.g., enabling compression).&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs quota enable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enables quota enforcement on a Btrfs file system to limit space usage.&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;btrfs quota rescan&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rescans the file system to enforce or update quota limits.&lt;/p&gt;



&lt;h2 id=&#34;conclusion&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#conclusion&#34;&gt;Conclusion&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Well I hope that has opened your eyes to the benefits of Btrfs. Researching for this article has helped me to learn some more about the subject.
If will definitely add to the article as I learn more about the subject, so consider this evergreen information üå≤&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;helpful-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/btrfs/#helpful-links-&#34;&gt;Helpful Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Btrfs&#34;&gt;https://en.wikipedia.org/wiki/Btrfs&lt;/a&gt;
&lt;a href=&#34;https://docs.kernel.org/filesystems/btrfs.html&#34;&gt;https://docs.kernel.org/filesystems/btrfs.html&lt;/a&gt;
Footnotes&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;The above quote is excerpted from Valerie Aurora &lt;a href=&#34;https://lwn.net/Articles/342892/&#34;&gt;Article&lt;/a&gt; lwn.net, 2009.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Chris Mason &lt;a href=&#34;https://www.youtube.com/watch?v=oSgGVX2CGOQ&#34;&gt;Interview&lt;/a&gt; during LF Collaboration Summit, 2009.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;The above reference is to the first proposal for the Btrfs file system &lt;a href=&#34;https://www.youtube.com/watch?v=PAAkCSZUG1c&#34;&gt;Technical Proposal&lt;/a&gt; during Gopherfest, Tues, June 12th, 2017.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Capstone Project Stage 3 üêß</title>
      <link>http://localhost:1313/techblog/post/paccp3/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/paccp3/</guid>
      <description>&lt;h1 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A progress update regarding the ProLUG website that improve useability&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;info-pop-up&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#info-pop-up&#34;&gt;Info Pop-up&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I wanted to add additional information to the site while maintaining a clean layout, predictable and comprehensible design. This is not only my personal aesthetic taste, this is a feature of accessibility. Websites with tons of information, many levels of contrast and or layouts are not only difficult for the visually impaired, but confusing for people suffering from cognitive impairment. I try to use inclusive design in accordance with WCAG guidelines on any project I am working on. So this leads me to the objective, to create a pop up design with additional information. I started with one of the more confusing features of the site, the verification input. When getting started, I wasn&amp;rsquo;t sure if it would be possible to accomplish this with TailwindCSS, so it took a bit of reading to confirm. It turns out this is completely possible using tailwind as evidence by the code snippet.&lt;/p&gt;



&lt;h2 id=&#34;design-details&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#design-details&#34;&gt;Design Details&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I would like to convey about the design choices as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple prominent button with high contrast.&lt;/li&gt;
&lt;li&gt;Semi transparent background to denote this is a temporary overlay&lt;/li&gt;
&lt;li&gt;Large text&lt;/li&gt;
&lt;li&gt;Short, straightforward descriptions&lt;/li&gt;
&lt;li&gt;Differing colors for open and close to further indicate the state.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;verification-entry-box-with-question-mark-button&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#verification-entry-box-with-question-mark-button&#34;&gt;Verification entry box with question mark button&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACCP3/?.png&#34; alt=&#34;Capture of Verification Screen Question Button&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;associated-pop-up&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#associated-pop-up&#34;&gt;Associated pop-up&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACCP3/pu.png&#34; alt=&#34;Capture of additional info pop-up&#34;&gt;&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;open&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Button to be visible --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bg-blue-300 rounded-xl inline-block px-4 py-2 text-xl hover:bg-blue-500 hover:duration-300 hover:text-white cursor-pointer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        ?
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Content will be hidden until the user clicks on the summary button. --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bg-white bg-opacity-50 backdrop-blur-md rounded-sm w-[100%] h-[100%] max-w-[600px] max-h-[700px] my-auto mx-auto absolute inset-0 text-gray-600 p-4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text-2xl font-bold&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Information&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;m-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text-xl font-bold&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;How this works&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Each ProLUG certificate has a unique ID link. This ID belongs only to the person who earned the certificate. When the ID is checked, the certificate information should match the person‚Äôs details. &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text-xl font-bold&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Does not Match&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;If the certificate information does not match what the verifier provided, the certificate is likely to be fake.&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text-xl font-bold&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Why Verify?&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;ProLUG values the hard work graduates put into earning their certification. We work to stop shortcuts and forgery to protect that effort.&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Close button positioned at the bottom and centered --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;absolute bottom-4 left-1/2 transform -translate-x-1/2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-700&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;na&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;this.closest(&amp;#39;details&amp;#39;).removeAttribute(&amp;#39;open&amp;#39;);&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; Close &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;details&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h3 id=&#34;todo&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#todo&#34;&gt;Todo&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp3/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 3 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu3/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu3/</guid>
      <description>&lt;h1 id=&#34;storage--logical-volume-management-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#storage--logical-volume-management-&#34;&gt;Storage &amp;amp; Logical Volume Management üß†üíæ&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ok, Week 3 / Unit 3. This week we are working on Logical Volume Management (LVM) and RAID. Fortunately I was able to listen to the entire lecture and read most of the chats which is always helpful.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;lab-notes-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lab-notes-&#34;&gt;Lab Notes üß™&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;warmup&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#warmup&#34;&gt;Warmup&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;redirects-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#redirects-&#34;&gt;Redirects ‚úâÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ~ # Change Directory to Home

mkdir lvm_lab # Create a Directory called lvm_lab

cd lvm_lab # Change location into the lvm_lab directory

touch somefile # create an empty file called somefile

echo &amp;quot;this is a string of text&amp;quot; &amp;gt; somefile # This sends the output of echo into the file

cat somefile # concatenates and displays what is in the file

echo &amp;quot;this is a sting of text&amp;quot; &amp;gt; somefile # Overwrites the line with the same text

echo &amp;quot;this is a sting of text&amp;quot; &amp;gt; somefile

echo &amp;quot;this is a sting of text&amp;quot; &amp;gt; somefile

cat somefile # We are left with one line of text after repeating this action because this 
action overwrites.

echo &amp;quot;This is a string of text&amp;quot; &amp;gt;&amp;gt; somefile # The double arrow is redirect append

echo &amp;quot;This is a string of text&amp;quot; &amp;gt;&amp;gt; somefile # this adds a second line

echo &amp;quot;This is a string of text&amp;quot; &amp;gt;&amp;gt; somefile # this adds a third line

cat somefile # The concatenated output would be 3 line of &amp;quot;This is a string of text&amp;quot;

echo &amp;quot;this is our other test text&amp;quot; &amp;gt;&amp;gt; somefile

echo &amp;quot;this is our other test text&amp;quot; &amp;gt;&amp;gt; somefile

echo &amp;quot;this is our other test text&amp;quot; &amp;gt;&amp;gt; somefile

cat somefile | nl # This adds numbering to each line in the file

cat somefile | nl | grep test # This does nothing as there is no text within the file that 

contains the string nothing

cat somefile | grep test | nl # Also nothing

cat somefile | nl | other # Gives us our last 3 lines and associated line number

always | nl | before your grep
&lt;/code&gt;&lt;/pre&gt;



&lt;h2 id=&#34;lab-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lab-&#34;&gt;Lab ü•ºüß™&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;disk-speed-tests-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#disk-speed-tests-&#34;&gt;Disk Speed Tests ‚è±Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This is on my own virtual machine, so figuring out the unique commands took a bit of extra work.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lsblk /dev/sda2

p  #print to see partitions
d  #delete partitions or information
w  #Write out the changes to the disk.
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;write-tests-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#write-tests-&#34;&gt;Write tests üíæ&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;saving-off-write-data--rename-tmpfile-each-time&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#saving-off-write-data--rename-tmpfile-each-time&#34;&gt;saving off write data ‚Äì rename /tmp/file each time&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Checking /dev/sda2 for a filesystem&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;blkid /dev/sda2 üëç
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no filesystem, make one&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkfs.ext4 /dev/sda2

mkdir space

mount /dev/xvda space ?
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;write-speed-test-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#write-speed-test-&#34;&gt;Write Speed Test üíæüèéÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;for i in &#39;seq 1 10&#39;;do time dd if=/dev/zero of=/space/testfile$ bs=1024k count=1000 | tee -a /tmp/speedtest1basiclvm
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;write-test-result&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#write-test-result&#34;&gt;Write Test Result&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;real 0m0.003s
user 0m0.000s
sys 0m0.002s
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;read-test-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#read-test-&#34;&gt;Read Test üëìüíæ&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;for i in &#39;seq 1 10&#39;;do time dd if=/space/testfile$i of=/dev/null;done
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;read-test-result&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#read-test-result&#34;&gt;Read Test Result&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;real 0m0.001s
user 0m0.001s
sys 0m0.001s
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;cleanup-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#cleanup-&#34;&gt;Cleanup üßπ&lt;/a&gt;
&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;for i in &#39;seq 1 10&#39;; do rm -rf/space/testfile$i;done
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;lvm-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lvm-&#34;&gt;LVM üß†üíæ&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;start in root (#); cd /root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check physical volumes on your server (my output may vary)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@rocky1 ~]#fdisk -l | grep -i sda
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Disk /dev/sda: 32 GiB, 34359738368 bytes, 67108864 sectors
/dev/sda1           2048  2099199 2097152   1G 83 Linux
/dev/sda2        2099200 67108863 65009664 31G 8e Linux LVM
&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;basic-lvm-listings&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#basic-lvm-listings&#34;&gt;Basic LVM listings&lt;/a&gt;
&lt;/h4&gt;



&lt;h5 id=&#34;pvs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#pvs&#34;&gt;pvs&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PV              VG                  Fmt    Attr PSize    PFree
/dev/sda2       rl_localhost-live   lvm2   a--  &amp;lt;31.00g  0
&lt;/code&gt;&lt;/pre&gt;



&lt;h5 id=&#34;vgs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#vgs&#34;&gt;vgs&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;VG                   #PV    #LV     #SN   Attr      VSize   VFree
rl_localhost-live      1      2       0   wz--n-    &amp;lt;31.00g    0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;output:&lt;/p&gt;



&lt;h5 id=&#34;lvs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lvs&#34;&gt;lvs&lt;/a&gt;
&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;LV    VG     Attr   LSize   Pool   Origin   Data%  Meta%  Move  Log Cpy%Sync Convert
root rL_localhost-live -wi-ao---- 27.79g
swap rL_localhost-live -wi-ao----  3.20g
&lt;/code&gt;&lt;/pre&gt;



&lt;h5 id=&#34;pvdisplay-needs-sudo-or-root&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#pvdisplay-needs-sudo-or-root&#34;&gt;pvdisplay (Needs SUDO or Root)&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PV Name          /dev/sda2
VG Name          rl_localhost-live
PV Size          &amp;lt;31.00 GiB / not usable 3.00 MiB
Allocatable      yes (but full)
PE               4.00 MiB
Total PE         7935
Free PE          0
Allocated PE     7935
PV UUID          gMVNd5-peB1-uUX6-Rw28-4Ncb-mi1b-rDJR38
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PV Name&lt;/strong&gt;: &lt;code&gt;/dev/sda2&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is the physical volume (PV) name, which indicates the device or partition that has been initialized as a physical volume for use in LVM (Logical Volume Manager).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VG Name&lt;/strong&gt;: &lt;code&gt;rl_localhost-live&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is the volume group (VG) name to which this physical volume belongs. A volume group is a collection of physical volumes that create a pool of storage space from which logical volumes (LVs) are allocated.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PV Size&lt;/strong&gt;: &lt;code&gt;&amp;lt;31.00 GiB / not usable 3.00 MiB&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The size of the physical volume is 31.00 GiB, but 3.00 MiB is not usable, likely due to overhead or alignment issues within the physical volume.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Allocatable&lt;/strong&gt;: &lt;code&gt;yes (but full)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This indicates whether the physical volume is available for allocation into logical volumes. It is set to &amp;ldquo;yes,&amp;rdquo; but the &amp;ldquo;full&amp;rdquo; remark means that all available physical extents (PEs) are already allocated.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PE Size&lt;/strong&gt;: &lt;code&gt;4.00 MiB&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This shows the size of a physical extent (PE), which is the smallest chunk of data that LVM manages. In this case, each PE is 4.00 MiB.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Total PE&lt;/strong&gt;: &lt;code&gt;7935&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The total number of physical extents on this physical volume. This is calculated based on the size of the physical volume and the size of each PE.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Free PE&lt;/strong&gt;: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This shows the number of free physical extents on the physical volume. In this case, there are no free extents left, meaning all available space has been allocated.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Allocated PE&lt;/strong&gt;: &lt;code&gt;7935&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of allocated physical extents, which are being used by logical volumes. Since all available extents are allocated, this number matches the total number of PEs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PV UUID&lt;/strong&gt;: &lt;code&gt;gMVNd5-peB1-uUX6-Rw28-4Ncb-mi1b-rDJR38&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The unique identifier for this physical volume, which is used internally by LVM to track physical volumes across different systems or reboots.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h5 id=&#34;vgdisplay-needs-sudo&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#vgdisplay-needs-sudo&#34;&gt;vgdisplay: needs sudo&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;example output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  --- Volume group ---
  VG Name               vg_data
  System ID             
  Format                lvm2
  VG Status             resizable
  MAX LV                0
  Cur LV                2
  Open LV               2
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               99.99 GiB
  PE Size               4.00 MiB
  Total PE              25599
  Alloc PE / Size       12800 / 50.00 GiB
  Free  PE / Size       12799 / 49.99 GiB
  VG UUID               hFwi0D-GTlv-NFjp-O2he-x8Yw-kfIa-c3QqX6
&lt;/code&gt;&lt;/pre&gt;



&lt;h5 id=&#34;lvdisplay-needs-sudo&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lvdisplay-needs-sudo&#34;&gt;lvdisplay: needs sudo&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;example output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  --- Logical volume ---
LV Path                /dev/vg_data/lv_backup
LV Name                lv_backup
VG Name                vg_data
LV UUID                B1q8Iq-0tWz-Fk0P-xwQ7-0T5T-QC3c-XcK5T1
LV Write Access        read/write
LV Creation host, time hostname, 2024-10-08 12:00:00 +0000
LV Status              available
# open                 1
LV Size                50.00 GiB
Current LE             12800
Segments               1
Allocation             inherit
Read ahead sectors     auto
- currently set to     256
Block device           253:2
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;creating--carving-lvm&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#creating--carving-lvm&#34;&gt;Creating &amp;amp; Carving LVM&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;a-little-struggle-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#a-little-struggle-&#34;&gt;A little struggle üò£&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;So I ran into several hurdles when putting this into practice with Proxmox.&lt;/p&gt;
&lt;p&gt;üìç Since I was using Proxmox the storage was already an LVM on account of it being a virtualized disk
Solution: I created a second storage volume in addition to sda, sdb was emulated as an SSD and RAW storage. Once this was set up I was able to initialize the process.&lt;/p&gt;
&lt;p&gt;üìç The demonstration lab suggested using /dev/xvd$disk the &amp;lsquo;x&amp;rsquo; relates to xcp-ng, a virtualization technology that differs from mine. I am using KVM and VirtIO on Proxmox so the naming convention would differ. so vdb would be a naming convention akin to this system.&lt;/p&gt;
&lt;p&gt;Ultimately, once I created this RAW SSD emulated storage I was able to move on.&lt;/p&gt;



&lt;h4 id=&#34;the-steps&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-steps&#34;&gt;The steps&lt;/a&gt;
&lt;/h4&gt;



&lt;h5 id=&#34;1-provisioning-the-physical-volume-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#1-provisioning-the-physical-volume-&#34;&gt;1. Provisioning the Physical Volume ‚úÖ&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;sudo pvcreate /dev/sdb&lt;/p&gt;
&lt;p&gt;Output:
Physical volume &amp;ldquo;/dev/sdb&amp;rdquo; successfully created.&lt;/p&gt;
&lt;p&gt;Confirmed with: lsblk&lt;/p&gt;



&lt;h5 id=&#34;2-provisioning-the-volume-group-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#2-provisioning-the-volume-group-&#34;&gt;2. Provisioning the Volume Group ‚úÖ&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;sudo vgcreate examplegroup /dev/sdb&lt;/p&gt;
&lt;p&gt;Output:
Volume group &amp;ldquo;examplegroup&amp;rdquo; successfully created&lt;/p&gt;
&lt;p&gt;Confirmed with: vgdisplay&lt;/p&gt;



&lt;h5 id=&#34;3-provisioning-the-actual-logical-volume-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#3-provisioning-the-actual-logical-volume-&#34;&gt;3. Provisioning the actual Logical Volume ‚úÖ&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;sudo lvcreate -L 1G -n lv1 examplegroup&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Logical volume &amp;quot;lv1&amp;quot; created.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Confirmed with: lvdisplay&lt;/p&gt;



&lt;h6 id=&#34;4-formatting-a-logical-volume-with-a-fs--&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#4-formatting-a-logical-volume-with-a-fs--&#34;&gt;4. Formatting a Logical Volume with a FS üíæ ‚úÖ&lt;/a&gt;
&lt;/h6&gt;
&lt;p&gt;mkfs.ext4 /dev/mapper/lv1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  mke2fs 1.45.6 (20-Mar-2020)
  Creating filesystem with 262144 4k blocks and 65536 inodes
  filesystem UUID: a1b2c3d4-e5f6-789a-bcde-123456789abc
  Superblock backups stored on blocks:
  32768, 98304

  Allocating group tables: done
  Writing inode tables: done
  Creating journal (8192 blocks): done
  Writing superblocks and filesystem accounting information: done
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;checking-remaining-vg-space&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#checking-remaining-vg-space&#34;&gt;Checking remaining VG Space&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Broadly:&lt;/p&gt;
&lt;p&gt;the &lt;strong&gt;VGS&lt;/strong&gt; command provides a summary of all Volume Groups and includes information about the free space.&lt;/p&gt;
&lt;p&gt;Looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  VG        #PV #LV #SN Attr   VSize   VFree  
  vg_data     2   3   0 wz--n- 199.99g  49.99g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More Specifically:&lt;/p&gt;
&lt;p&gt;The vgdisplay command will show this info as it pertains to a particular pv üëç&lt;/p&gt;



&lt;h4 id=&#34;ultimately&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#ultimately&#34;&gt;Ultimately&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Thanks to putting our heads together in a studygroup, I was able to get through the completed process several times. I ended carving of a Volume Group into Logical Volumes. Some of which were formatted in Ext4 and some were formatted to XFS using MKFS. üòÅ&lt;/p&gt;
&lt;p&gt;The process was a little bit long with many tangential learning, ultimately I think this experience has deeply ingrained the process in my psyche, pushing out childhood memories of finger painting.&lt;/p&gt;



&lt;h3 id=&#34;fstab&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#fstab&#34;&gt;Fstab&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I would like to return to Fstab and learn more about it. I ran into some issues mounting LVM&amp;rsquo;s with Fstab&lt;/p&gt;



&lt;h3 id=&#34;lvs-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lvs-1&#34;&gt;LVS&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Logical Volume Summary provides a summary as the name implies of all logical volumes present in the system. I wish I had known this command earlier as I was using the other commands listed above üòÑ&lt;/p&gt;
&lt;p&gt;Example output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  LV       VG        Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  lv_backup vg_data  -wi-a----- 50.00g                                                    
  lv_home   vg_data  -wi-ao---- 20.00g                                                    
  lv_root   vg_system -wi-ao---- 30.00g
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;raid-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#raid-&#34;&gt;RAID üíæüíæüíæ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;RAID stands for Redundant Array of Independent Disks, more on that below.&lt;/p&gt;
&lt;p&gt;Raw notes:&lt;/p&gt;
&lt;p&gt;Created a proxmox vm with rocky 9.4 minimal with 3 x raw ssd emulated disks&lt;/p&gt;
&lt;p&gt;MDADM&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;lecture-thoughts-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lecture-thoughts-&#34;&gt;Lecture thoughts ü™©&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;everything-is-a-file-after-all&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#everything-is-a-file-after-all&#34;&gt;Everything &amp;lsquo;is&amp;rsquo; a file after all&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU3/ahb.png&#34; alt=&#34;Always has been a file&#34;&gt;&lt;/p&gt;
&lt;p&gt;this past Saturday. During that lecture I had a major awakening in regards to how unix works. I have heard the &amp;rsquo;everything is a file&amp;rsquo; mantra on several occasions. However, sometimes hearing is not fully understanding. My moment of understanding came when we checked running processes and opened one as a file. I knew that everything under the hood was a file, but ephemeral things like processes were not part of the picture. That truly blew my mind ü§Ø&lt;/p&gt;



&lt;h2 id=&#34;uuids-go-beyond-a-block-storage-device&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#uuids-go-beyond-a-block-storage-device&#34;&gt;UUID&amp;rsquo;s go beyond a block storage device&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;It turns out that logical volumes are assigned UUIDs. UUIDs are unique strings that can be used to reference or link reliably to storage device. So logical volumes attain the same respect as physical volume.&lt;/p&gt;
&lt;p&gt;if I were to run&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bash blkid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bash lvddisplay&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;one would see a string like this:&lt;/p&gt;
&lt;p&gt;f4d12857-93c3-4d6f-91e5-bb379f02e1d1&lt;/p&gt;
&lt;p&gt;More on this later, I went down a rabbit hole. üêá&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;logical-volumes-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#logical-volumes-&#34;&gt;Logical Volumes üß†üíº&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Logical Volumes (LVs) offer a flexible way to manage disk storage in Linux. With LVs, users can create, resize, and move storage volumes without being limited by the physical layout of the disks. The Logical Volume Manager (LVM) abstracts the underlying physical storage, making it easier to manage disk space, support snapshots, and resize volumes as needed.&lt;/p&gt;



&lt;h3 id=&#34;the-layered-structure-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-layered-structure-&#34;&gt;The Layered Structure üç∞&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The structure of LVM involves multiple layers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Physical Volumes (PV):&lt;/strong&gt; These are the actual physical storage devices, like SSDs or HDDs. A Physical Volume can either be part of a Volume Group or encompass an entire Volume Group.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Volume Groups (VG):&lt;/strong&gt; VGs are containers that hold one or more Logical Volumes. A Volume Group can span across multiple Physical Volumes, providing a flexible pool of storage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logical Volumes (LV):&lt;/strong&gt; LVs are sections of a Volume Group that serve as the actual storage units. A Volume Group can contain many Logical Volumes of different sizes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Systems:&lt;/strong&gt; Finally, file systems are placed on the Logical Volumes to store data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The table below illustrates how a Volume Group (VG) can host several Logical Volumes (LVs) of varying sizes. Each Logical Volume is assigned a unique identifier (UUID), and snapshots are also given their own UUIDs.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;VG&lt;/th&gt;
          &lt;th&gt;LV&lt;/th&gt;
          &lt;th&gt;FS&lt;/th&gt;
          &lt;th&gt;Size&lt;/th&gt;
          &lt;th&gt;UUID Short&lt;/th&gt;
          &lt;th&gt;Snapshot&lt;/th&gt;
          &lt;th&gt;Snapshot UUID Short&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;vg_data&lt;/td&gt;
          &lt;td&gt;lv_root&lt;/td&gt;
          &lt;td&gt;XFS&lt;/td&gt;
          &lt;td&gt;50 GB&lt;/td&gt;
          &lt;td&gt;f4d1-91e5-bb37&lt;/td&gt;
          &lt;td&gt;None&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vg_data&lt;/td&gt;
          &lt;td&gt;lv_home&lt;/td&gt;
          &lt;td&gt;XFS&lt;/td&gt;
          &lt;td&gt;100 GB&lt;/td&gt;
          &lt;td&gt;a123-c567-8901&lt;/td&gt;
          &lt;td&gt;snap_home&lt;/td&gt;
          &lt;td&gt;abcd-ef56-7890&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vg_data&lt;/td&gt;
          &lt;td&gt;lv_var&lt;/td&gt;
          &lt;td&gt;ext4&lt;/td&gt;
          &lt;td&gt;20 GB&lt;/td&gt;
          &lt;td&gt;c9d8-89e0-f9a1&lt;/td&gt;
          &lt;td&gt;None&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vg_data&lt;/td&gt;
          &lt;td&gt;lv_backup&lt;/td&gt;
          &lt;td&gt;ext4&lt;/td&gt;
          &lt;td&gt;150 GB&lt;/td&gt;
          &lt;td&gt;f129-bc97-f134&lt;/td&gt;
          &lt;td&gt;snap_backup&lt;/td&gt;
          &lt;td&gt;f7d8-a67e-f765&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vg_data&lt;/td&gt;
          &lt;td&gt;lv_logs&lt;/td&gt;
          &lt;td&gt;XFS&lt;/td&gt;
          &lt;td&gt;10 GB&lt;/td&gt;
          &lt;td&gt;e123-9abc-e1d4&lt;/td&gt;
          &lt;td&gt;None&lt;/td&gt;
          &lt;td&gt;N/A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vg_storage&lt;/td&gt;
          &lt;td&gt;lv_media&lt;/td&gt;
          &lt;td&gt;ext4&lt;/td&gt;
          &lt;td&gt;200 GB&lt;/td&gt;
          &lt;td&gt;bc97-bc9e-5612&lt;/td&gt;
          &lt;td&gt;snap_media&lt;/td&gt;
          &lt;td&gt;d98f-9e67-1cd2&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I understand that this course focuses on the two most popular and reliable file systems, as these are the ones most commonly encountered in enterprise environments. However, I&amp;rsquo;ve noticed that BTRFs is starting to gain traction. I&amp;rsquo;ve listened to several talks and read extensively about its features and potential.&lt;/p&gt;



&lt;h3 id=&#34;some-limitations-apply-to-the-status-quo&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#some-limitations-apply-to-the-status-quo&#34;&gt;Some limitations apply to the status quo&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Both ext4 and XFS subvolumes can handle a lot of scenarios. This includes online resizing. This is when the size of an LVM must be increased while actively in use (Online). However, for both of these filesystems, online resizing can only grow and LVM and not shrink. Additionally snapshots must be managed on a per LV basis, not a huge issue with the advent of automation tools.&lt;/p&gt;



&lt;h1 id=&#34;raid&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#raid&#34;&gt;RAID&lt;/a&gt;
&lt;/h1&gt;



&lt;h3 id=&#34;intro-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#intro-1&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;RAID stands for Redundant Array of Independent Disks (originally Redundant Array of Inexpensive Disks). It is a data storage technology that combines multiple physical disk drives into a single logical unit to improve performance, increase capacity, or provide redundancy to protect data against drive failures.&lt;/p&gt;



&lt;h3 id=&#34;how-it-differs-from-lvm&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#how-it-differs-from-lvm&#34;&gt;How it differs from LVM&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;RAID is primarily for redundancy and performance.&lt;/li&gt;
&lt;li&gt;RAID works at a block level across discs.&lt;/li&gt;
&lt;li&gt;So it is sometimes used to create a high capacity pool.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;multiple-configurations&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#multiple-configurations&#34;&gt;Multiple configurations&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;There are configurations for differing degrees of performance&lt;/li&gt;
&lt;li&gt;There are configurations for different levels of redundancy&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;comparison-table&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#comparison-table&#34;&gt;Comparison Table&lt;/a&gt;
&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;RAID Level&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Redundancy&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 0&lt;/td&gt;
          &lt;td&gt;Data striping without parity or mirroring.&lt;/td&gt;
          &lt;td&gt;High (fast read/write speeds)&lt;/td&gt;
          &lt;td&gt;None (no redundancy)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 1&lt;/td&gt;
          &lt;td&gt;Mirroring of data across two or more disks.&lt;/td&gt;
          &lt;td&gt;Moderate (read speed improves, write speed similar to single disk)&lt;/td&gt;
          &lt;td&gt;High (data is mirrored)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 5&lt;/td&gt;
          &lt;td&gt;Block-level striping with distributed parity.&lt;/td&gt;
          &lt;td&gt;Moderate (improved read speeds, slower writes due to parity calculation)&lt;/td&gt;
          &lt;td&gt;Moderate (can tolerate 1 disk failure)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 6&lt;/td&gt;
          &lt;td&gt;Block-level striping with dual parity.&lt;/td&gt;
          &lt;td&gt;Moderate (similar to RAID 5, but slower writes)&lt;/td&gt;
          &lt;td&gt;High (can tolerate 2 disk failures)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 10&lt;/td&gt;
          &lt;td&gt;Striping across mirrored sets (combines RAID 1 and RAID 0).&lt;/td&gt;
          &lt;td&gt;High (fast read/write due to striping and redundancy)&lt;/td&gt;
          &lt;td&gt;High (can tolerate multiple disk failures depending on which disks fail)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 50&lt;/td&gt;
          &lt;td&gt;RAID 5 arrays striped (combines RAID 5 and RAID 0).&lt;/td&gt;
          &lt;td&gt;High (fast read speeds, but slower writes)&lt;/td&gt;
          &lt;td&gt;Moderate (can tolerate up to 1 disk failure in each RAID 5 array)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 60&lt;/td&gt;
          &lt;td&gt;RAID 6 arrays striped (combines RAID 6 and RAID 0).&lt;/td&gt;
          &lt;td&gt;High (fast reads, slower writes due to dual parity)&lt;/td&gt;
          &lt;td&gt;Very High (can tolerate up to 2 disk failures in each RAID 6 array)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;RAID 1+0&lt;/td&gt;
          &lt;td&gt;Nested RAID 1 over RAID 0 (mirroring across striped sets).&lt;/td&gt;
          &lt;td&gt;High (similar to RAID 10)&lt;/td&gt;
          &lt;td&gt;High (similar to RAID 10)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;



&lt;h3 id=&#34;software--hardware-raid&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#software--hardware-raid&#34;&gt;Software &amp;amp; Hardware Raid&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Software RAID is when the host Operating System maintains the linking and syncing.&lt;/li&gt;
&lt;li&gt;Hardware RAID is when a dedicated device does this. For example a PCI raid controller.
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/9/96/Compaq_SystemPro_Server_RAID_Controller_100_2425.jpg&#34; alt=&#34;Older RAID Controller Card&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;a-software-raid-is&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#a-software-raid-is&#34;&gt;A software RAID is:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;is running as a general task through the CPU. With multi-core/thread processors and more robust process handling, software RAID is more reliable than in the past.
Advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Portable ü¶∂&lt;/li&gt;
&lt;li&gt;Flexible üßò&lt;/li&gt;
&lt;li&gt;Cost Effective üí∞&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;hardware-raid-is&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#hardware-raid-is&#34;&gt;Hardware RAID is:&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Application specific hardware like a RAID Controller always has the potential to be more performant and reliable. But this is mfg. dependent, the good ones tend to be expensive (such as life) üí∏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performant* üèéÔ∏è&lt;/li&gt;
&lt;li&gt;Reliable* ‚è≥&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h1 id=&#34;other-filesystem-researchwriting&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#other-filesystem-researchwriting&#34;&gt;Other Filesystem research/writing&lt;/a&gt;
&lt;/h1&gt;



&lt;h3 id=&#34;btrfs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#btrfs&#34;&gt;Btrfs&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I wrote an entire separate article about B-Tree FileSystem as I find it interesting &lt;a href=&#34;https://trevorsmale.github.io/techblog/post/btrfs/&#34;&gt;Link to Btrfs article&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;linux-filesystem-comparison&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#linux-filesystem-comparison&#34;&gt;Linux Filesystem Comparison&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I find file-systems really interesting. Recently I made a huge note comparing the major FileSystems.
&lt;a href=&#34;https://trevorsmale.github.io/techblog/post/fs/&#34;&gt;Link to FileSystems note/article&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;linux-filesystem-timeline&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#linux-filesystem-timeline&#34;&gt;Linux Filesystem Timeline&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This timeline may help illuminate how filesystems incrementally improve over time.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Year&lt;/th&gt;
          &lt;th&gt;Milestone&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1993&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;ext2&lt;/strong&gt; filesystem development begins.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1994&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;ext2&lt;/strong&gt; released with Linux Kernel 1.0.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1994&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;XFS&lt;/strong&gt; first developed by SGI for IRIX.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2001&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;ext3&lt;/strong&gt; released, introducing journaling.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2001&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;XFS&lt;/strong&gt; ported to Linux.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2006&lt;/td&gt;
          &lt;td&gt;Development of &lt;strong&gt;ext4&lt;/strong&gt; begins to extend the capabilities of ext3.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2007&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;BTRFs&lt;/strong&gt; development announced by Oracle.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2008&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;ext4&lt;/strong&gt; marked as stable in Linux Kernel 2.6.28.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2009&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;BTRFs&lt;/strong&gt; included in Linux Kernel 2.6.29 as an experimental filesystem.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2009&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;XFS&lt;/strong&gt; officially included in Linux Kernel 2.6.36.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2010&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;ext4&lt;/strong&gt; becomes the default filesystem for many Linux distributions, including Ubuntu and Fedora.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2012&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;BTRFs&lt;/strong&gt; adopted by SUSE Linux Enterprise Server.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2014&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;XFS&lt;/strong&gt; becomes the default filesystem in &lt;strong&gt;RHEL 7&lt;/strong&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2014&lt;/td&gt;
          &lt;td&gt;Fedora starts offering &lt;strong&gt;BTRFs&lt;/strong&gt; as an option.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2020&lt;/td&gt;
          &lt;td&gt;Fedora 33 makes &lt;strong&gt;BTRFs&lt;/strong&gt; the default filesystem.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;



&lt;h1 id=&#34;crisis-management-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#crisis-management-&#34;&gt;Crisis Management üî•üßØ&lt;/a&gt;
&lt;/h1&gt;



&lt;h3 id=&#34;intro-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#intro-2&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I read a chapter from googles security handbook focused on responding to a security incident.
This chapter covers a wide range of information including common mistakes, templates etcc&amp;hellip; Scott has asked us to pull keywords that may help us better triage an incident. I decided to extend this to creating an incident response checklist for future reference. This order of the list slightly differs from that of the article, yet I think it summarizes the chapter well.&lt;/p&gt;



&lt;h3 id=&#34;overview-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#overview-&#34;&gt;Overview üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Effective crisis management requires taking command and maintaining control of an incident. The outcome of a security incident largely depends on how well your organization prepares and responds, a process referred to as &lt;strong&gt;incident response (IR) capability&lt;/strong&gt;.&lt;/p&gt;



&lt;h3 id=&#34;transparency-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#transparency-&#34;&gt;Transparency üîÆ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Transparency is key in managing incidents, particularly in light of regulations such as GDPR and service contracts. Customers are continually pushing the boundaries for how quickly investigations must begin, progress, and be resolved. Organizations are often expected to respond to potential security problems within &lt;strong&gt;24 hours or less&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As the saying goes: &lt;em&gt;&amp;ldquo;There are only two types of companies: those that know they&amp;rsquo;ve been compromised, and those that don&amp;rsquo;t know.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;



&lt;h3 id=&#34;steps-of-crisis-management-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#steps-of-crisis-management-&#34;&gt;Steps of Crisis Management ü™ú&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;1-triage-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#1-triage-&#34;&gt;1. Triage ü•º&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The First Step: Don‚Äôt Panic!&lt;/strong&gt; Not every incident is a crisis.&lt;/li&gt;
&lt;li&gt;Differentiate between &lt;strong&gt;compromises&lt;/strong&gt; and &lt;strong&gt;bugs&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make educated and informed assumptions about the severity and potential consequences of the incident.
&lt;ul&gt;
&lt;li&gt;What data might be accessible to someone on the compromised system?&lt;/li&gt;
&lt;li&gt;What trust relationships does the potentially compromised system have with other systems?&lt;/li&gt;
&lt;li&gt;Are there compensating controls that an attacker would also have to penetrate?&lt;/li&gt;
&lt;li&gt;Does the attack seem to be &lt;strong&gt;commodity opportunistic malware&lt;/strong&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;2-manage-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#2-manage-&#34;&gt;2. Manage üß†&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Establish Your Incident Team:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Management Liaison:&lt;/strong&gt; Coordinate between the technical team and upper management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Incident Commander (IC):&lt;/strong&gt; Ultimately responsible for ensuring that rules around confidentiality are set, communicated, and followed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operations Coordinator (OC):&lt;/strong&gt; Coordinate the technical side of the incident response.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Legal Lead:&lt;/strong&gt; Ensure the response complies with legal obligations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communications Lead:&lt;/strong&gt; Ensure internal and external communications are clear and effective.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Guidelines for Management:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maintain a clear line of command.&lt;/li&gt;
&lt;li&gt;Designate clearly defined roles.&lt;/li&gt;
&lt;li&gt;Keep a working record of debugging and mitigation steps as you go.&lt;/li&gt;
&lt;li&gt;Declare incidents early and often.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;3-declare-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#3-declare-&#34;&gt;3. Declare üì£&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Declare incidents as soon as they are recognized to ensure early containment and response.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;4-communicate-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#4-communicate-&#34;&gt;4. Communicate ‚òéÔ∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Avoid Misunderstandings&lt;/strong&gt;: Ensure that all parties are aligned on the severity and impact of the incident.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Avoid Hedging&lt;/strong&gt;: Be clear and concise in communication, avoiding ambiguity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Meetings&lt;/strong&gt;: Hold regular update meetings to ensure that the team and stakeholders are aware of the incident&amp;rsquo;s progress and next steps.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;5-operational-security-opsec-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#5-operational-security-opsec-&#34;&gt;5. Operational Security (OpSec) ü•∑&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpSec&lt;/strong&gt; refers to the practice of keeping your response activities confidential.
&lt;ul&gt;
&lt;li&gt;Use secure lines of communication.&lt;/li&gt;
&lt;li&gt;Avoid interacting directly with affected networks or components.&lt;/li&gt;
&lt;li&gt;Lock down affected accounts immediately.&lt;/li&gt;
&lt;li&gt;Shut down compromised systems to prevent further damage.&lt;/li&gt;
&lt;li&gt;Use different credentials when interacting with compromised systems.&lt;/li&gt;
&lt;li&gt;Ensure the right people are informed with the correct level of detail about the incident.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;6-investigate-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#6-investigate-&#34;&gt;6. Investigate üïµ&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Follow the &lt;strong&gt;OODA Loop&lt;/strong&gt;: Observe, Orient, Decide, and Act.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Forensic Imaging&lt;/strong&gt;: Capture system images for later analysis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Memory Imaging&lt;/strong&gt;: Capture the contents of system memory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Carving&lt;/strong&gt;: Extract useful files from data storage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Log Analysis&lt;/strong&gt;: Analyze system logs to identify suspicious activity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Malware Analysis&lt;/strong&gt;: Dissect malware to understand its function.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sharding the Investigation&lt;/strong&gt;: Divide the investigation into manageable parts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parallelize the Incident&lt;/strong&gt;: Have different teams working on different aspects of the investigation simultaneously.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;7-handover-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#7-handover-&#34;&gt;7. Handover ‚õìÔ∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Properly hand over any remaining tasks or investigations to ensure nothing is overlooked as the incident winds down.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;8-remediate-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#8-remediate-&#34;&gt;8. Remediate üõ†Ô∏è&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Fix vulnerabilities and mitigate damage to prevent future incidents. Implement long-term security measures.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;9-close-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#9-close-&#34;&gt;9. Close üìí&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Close the incident formally. Review what went well, what could have been better, and document the lessons learned for future incidents.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h1 id=&#34;high-availability-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#high-availability-&#34;&gt;High Availability ‚öìÔ∏è&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;refers to the design and implementation of systems, services, or applications to minimize downtime and ensure continuous operation.
The goal of high availability is to ensure that a system is accessible and operational for the maximum possible amount of time.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;key-terms-in-ha-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#key-terms-in-ha-&#34;&gt;Key Terms in HA üîë&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;1-uptime--downtime-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#1-uptime--downtime-&#34;&gt;1. Uptime &amp;amp; Downtime ‚ÜïÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Uptime&lt;/strong&gt;: The period during which a system is fully operational and accessible to users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Downtime&lt;/strong&gt;: The period during which the system is unavailable or not functioning as expected. HA systems aim to minimize downtime as much as possible.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;2-redundancy-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#2-redundancy-&#34;&gt;2. Redundancy üëØ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Redundancy refers to duplicating critical components or functions of a system to increase reliability. In HA systems, components like servers, databases, or networks are replicated so that if one fails, another can take over seamlessly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Active-Active Redundancy&lt;/strong&gt;: Multiple systems work simultaneously, and if one fails, the others continue without interruption.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Active-Passive Redundancy&lt;/strong&gt;: A primary system works actively, while a backup system remains idle until a failure occurs.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;3-failover-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#3-failover-&#34;&gt;3. Failover üõ§Ô∏èüõ§Ô∏èüõ§Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Failover&lt;/strong&gt; is the process of switching to a standby or backup system when the primary system fails. In HA setups, failover is often automatic to minimize disruption. &lt;strong&gt;Failback&lt;/strong&gt; refers to switching back to the primary system after recovery.&lt;/p&gt;



&lt;h3 id=&#34;4-load-balancing-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#4-load-balancing-&#34;&gt;4. Load Balancing ‚öñÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Load balancing&lt;/strong&gt; distributes network or application traffic across multiple servers to ensure that no single server becomes overwhelmed. It enhances both performance and availability by balancing the load and rerouting traffic in case of server failures.&lt;/p&gt;



&lt;h3 id=&#34;5-elastic-scaling-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#5-elastic-scaling-&#34;&gt;5. Elastic Scaling üéã&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Elastic scaling&lt;/strong&gt; is the ability to automatically adjust resource capacity (compute, memory, etc.) based on workload demand. This is crucial for HA, as it prevents resource exhaustion during peak loads and reduces costs during low-demand periods.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Horizontal Scaling (Scaling Out)&lt;/strong&gt;: Adding more instances/servers to distribute load.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vertical Scaling (Scaling Up)&lt;/strong&gt;: Increasing the resources of a single instance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto-scaling&lt;/strong&gt;: Automatic scaling based on real-time metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;In Kubernetes&lt;/strong&gt;, elastic scaling is managed through &lt;strong&gt;Horizontal Pod Autoscalers (HPA)&lt;/strong&gt;, which automatically scale the number of pods in a deployment based on observed CPU utilization or other metrics. In HA systems using Kubernetes, autoscaling ensures that the right amount of resources are always allocated based on demand, contributing to both high performance and availability.&lt;/p&gt;



&lt;h3 id=&#34;6-fault-tolerance-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#6-fault-tolerance-&#34;&gt;6. Fault Tolerance ü§¶‚Äç‚ôÇÔ∏èüòÖ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fault tolerance&lt;/strong&gt; refers to the system&amp;rsquo;s ability to continue operating correctly even when one or more components fail. Fault-tolerant systems detect, isolate, and handle faults without causing downtime.&lt;/p&gt;



&lt;h3 id=&#34;7-cluster-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#7-cluster-&#34;&gt;7. Cluster üßë‚Äçüç≥üßë‚Äçüç≥üßë‚Äçüç≥üßë‚Äçüç≥&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;cluster&lt;/strong&gt; is a group of servers or nodes working together as a single system to provide HA. Clustering ensures that if one node in the cluster fails, another node takes over its tasks, maintaining service availability.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Kubernetes&lt;/strong&gt;, a cluster consists of a set of worker machines, called &lt;strong&gt;nodes&lt;/strong&gt;, that run containerized applications. Kubernetes ensures high availability by distributing workloads across multiple nodes and automatically replacing failed nodes or restarting containers.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Warewulf&lt;/strong&gt;, a cluster provisioning tool, high availability is addressed by enabling systems to quickly re-deploy compute nodes. Warewulf helps manage HA in high-performance computing (HPC) environments by ensuring compute nodes are readily available for workloads in case of node failure or maintenance.&lt;/p&gt;



&lt;h3 id=&#34;8-replication-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#8-replication-&#34;&gt;8. Replication üíæüíæüíæ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Replication&lt;/strong&gt; is the process of duplicating data across multiple storage systems or servers. In HA, replication ensures that a copy of data exists on multiple systems, so if one system fails, another can continue providing access to the same data.&lt;/p&gt;



&lt;h3 id=&#34;9-disaster-recovery-dr-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#9-disaster-recovery-dr-&#34;&gt;9. Disaster Recovery (DR) üìâüìà&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Disaster recovery&lt;/strong&gt; involves strategies to restore a system after a catastrophic failure (e.g., data center failure). DR usually includes off-site backups and failover to remote data centers.&lt;/p&gt;



&lt;h3 id=&#34;10-mean-time-between-failures-mtbf-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#10-mean-time-between-failures-mtbf-&#34;&gt;10. Mean Time Between Failures (MTBF) ‚è±Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;MTBF&lt;/strong&gt; measures the average time between system failures. A higher MTBF indicates a more reliable system.&lt;/p&gt;



&lt;h3 id=&#34;11-mean-time-to-repair-mttr-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#11-mean-time-to-repair-mttr-&#34;&gt;11. Mean Time to Repair (MTTR) ‚è±Ô∏èüõ†Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;MTTR&lt;/strong&gt; measures how long it takes to restore a system to full functionality after a failure. Minimizing MTTR is critical for reducing downtime in HA systems.&lt;/p&gt;



&lt;h3 id=&#34;12-quorum-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#12-quorum-&#34;&gt;12. Quorum üêæ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Quorum&lt;/strong&gt; is the minimum number of nodes or components in a distributed system that must agree or function correctly to maintain availability. Quorum is often required in cluster setups to ensure consistent operation.&lt;/p&gt;



&lt;h3 id=&#34;13-geographic-redundancy-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#13-geographic-redundancy-&#34;&gt;13. Geographic Redundancy üåé&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Geographic redundancy&lt;/strong&gt; involves deploying systems across multiple geographical locations or data centers. This ensures that services remain available even if a region experiences a failure (e.g., due to natural disasters or power outages).&lt;/p&gt;



&lt;h2 id=&#34;relation-to-kubernetes-and-warewulf&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#relation-to-kubernetes-and-warewulf&#34;&gt;Relation to Kubernetes and Warewulf&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I wanted to look at Kubernetes and Warewulf and how they relate to this topic as they are both systems written with GO and they are both well liked systems relating to HA.&lt;/p&gt;
&lt;p&gt;I will write a future article all about GO and why it is fantastic at a later date. So I will just leave this point for now.&lt;/p&gt;
&lt;p&gt;-A language built by the progenitors of UNIX and C for diverse connected systems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt; üçÄ:
automated failover
container orchestration
elastic scaling with Horizontal Pod Autoscalers
and geographic redundancy through multi-region clusters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Warewulf&lt;/strong&gt; üê∫: In HPC environments, &lt;strong&gt;Warewulf&lt;/strong&gt; aids in HA by managing node provisioning and monitoring the health of the compute nodes. In case of failures, Warewulf can quickly re-deploy nodes, ensuring that the overall HPC workload is minimally disrupted.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kubernetes and Warewulf both play key roles in maintaining high availability in modern infrastructures, with Kubernetes focusing on containerized applications and Warewulf on HPC cluster management.&lt;/p&gt;



&lt;h2 id=&#34;ha--incident-triage-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#ha--incident-triage-&#34;&gt;HA &amp;amp; Incident Triage üö®&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;High Availability (HA) systems improve operational security, allowing precise triage due to these factors:&lt;/p&gt;



&lt;h3 id=&#34;1-continuous-monitoring&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#1-continuous-monitoring&#34;&gt;1. Continuous Monitoring&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;HA systems continuously monitor performance to detect security threats in real time.&lt;/p&gt;



&lt;h3 id=&#34;2-continuous-comprehensive-logging&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#2-continuous-comprehensive-logging&#34;&gt;2. Continuous Comprehensive Logging&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Logs are centralized, providing full visibility across the system for quick forensic analysis.&lt;/p&gt;



&lt;h3 id=&#34;3-declarative-structure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#3-declarative-structure&#34;&gt;3. Declarative Structure&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Declarative configurations enable automated remediation scripts for rapid self-healing.&lt;/p&gt;



&lt;h3 id=&#34;4-automated-alerting&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#4-automated-alerting&#34;&gt;4. Automated Alerting&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Automated alerts prioritize and notify teams of security incidents as they happen.&lt;/p&gt;
&lt;p&gt;Beyond triage, HA systems offer several other security benefits:&lt;/p&gt;



&lt;h3 id=&#34;5-containerized-components&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#5-containerized-components&#34;&gt;5. Containerized Components&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Microservices are isolated, allowing affected components to be restarted without system-wide impact.&lt;/p&gt;



&lt;h3 id=&#34;6-elastic-scaling&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#6-elastic-scaling&#34;&gt;6. Elastic Scaling&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;HA systems dynamically scale resources to handle traffic spikes or increased workloads securely.&lt;/p&gt;



&lt;h3 id=&#34;7-automated-failover&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#7-automated-failover&#34;&gt;7. Automated Failover&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Automated failover isolates compromised components, ensuring continuous uptime during incidents.&lt;/p&gt;



&lt;h3 id=&#34;8-data-replication-by-design&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#8-data-replication-by-design&#34;&gt;8. Data Replication by Design&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Multiple data copies prevent loss and aid in disaster recovery during security breaches.&lt;/p&gt;



&lt;h3 id=&#34;9-event-replay&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#9-event-replay&#34;&gt;9. Event Replay&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Event replay allows security teams to analyze incidents for better future defense.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;lessons-learned-about-ha&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#lessons-learned-about-ha&#34;&gt;Lessons Learned about HA&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;What I have learned from reading articles, searching and compiling these notes.&lt;/p&gt;



&lt;h3 id=&#34;the-why&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-why&#34;&gt;The Why&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In today‚Äôs world, data is ingested, processed, and distributed at an unprecedented rate. To keep up, we must implement systems that operate with the same speed and frequency. The era of handling sequential tasks one at a time is over. High availability solutions such as Kubernetes, declarative infrastructure, cluster management, and stateless automation are now essential in modern IT environments.&lt;/p&gt;
&lt;p&gt;Although some developers, administrators, and engineers express concerns about the complexity of these deployments, preferring simpler solutions, the reality is that we need to adapt to the increasing demands of data availability and security. Setting up a robust infrastructure now may have a higher initial labor cost, but it will undoubtedly reduce the risk of costly security incidents and system downtime in the future.&lt;/p&gt;



&lt;h3 id=&#34;the-what&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-what&#34;&gt;The What&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The systems we must focus on include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt; for orchestrating containerized applications across clusters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Declarative Infrastructure&lt;/strong&gt; using Infrastructure-as-Code (IaC) for consistent and scalable deployments&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cluster Management&lt;/strong&gt; to efficiently manage and scale distributed systems&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stateless Automation&lt;/strong&gt; to ensure systems can self-heal and adapt quickly without human intervention&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These technologies form the backbone of high availability infrastructures, designed to handle vast amounts of data without compromising performance or uptime.&lt;/p&gt;



&lt;h3 id=&#34;the-how&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-how&#34;&gt;The How&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;To implement these solutions, organizations should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Automate deployment processes&lt;/strong&gt; using tools like Terraform or Ansible to ensure repeatability and reliability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Leverage Kubernetes clusters&lt;/strong&gt; to manage microservices architectures, enabling fast scaling and robust fault tolerance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Adopt a declarative approach&lt;/strong&gt; by defining infrastructure states in code, allowing easier management and version control of systems.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utilize stateless automation&lt;/strong&gt; to reduce system reliance on individual components, making the system more resilient to failure and able to recover without manual intervention.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By adopting these practices, companies can build resilient, secure, and scalable infrastructures that meet the demands of today‚Äôs fast-paced data environments.&lt;/p&gt;



&lt;h2 id=&#34;ha-and-sir-synergy&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#ha-and-sir-synergy&#34;&gt;HA and SIR Synergy&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;the-why-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-why-1&#34;&gt;The Why&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;As organizations become increasingly reliant on digital systems, security incidents are inevitable. Data breaches, malware attacks, and system vulnerabilities pose significant risks that can lead to costly downtime, reputational damage, and legal consequences. In this high-availability (HA) era, where uninterrupted service is critical, an effective &lt;strong&gt;Security Incident Response (SIR)&lt;/strong&gt; plan is more important than ever.&lt;/p&gt;



&lt;h3 id=&#34;the-what-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-what-1&#34;&gt;The What&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;At its core, &lt;strong&gt;Security Incident Response (SIR)&lt;/strong&gt; involves:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identifying&lt;/strong&gt; and responding to potential security incidents in real time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Containing&lt;/strong&gt; incidents to prevent further damage and preserve critical systems&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eradicating&lt;/strong&gt; malicious activity from systems quickly and efficiently&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Recovering&lt;/strong&gt; compromised systems and restoring operations to normal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reviewing and improving&lt;/strong&gt; security protocols based on lessons learned from incidents&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In high-availability environments, this process works hand in hand with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Failover mechanisms&lt;/strong&gt; that redirect traffic or services away from compromised systems to maintain uptime&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resilient architectures&lt;/strong&gt; where services are spread across clusters, reducing the impact of a security breach on overall operations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automated remediation&lt;/strong&gt; that helps detect and respond to threats before they cause major disruptions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Together, SIR and HA form a dual-layer defense to keep systems running while actively dealing with security threats.&lt;/p&gt;



&lt;h3 id=&#34;the-how-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#the-how-1&#34;&gt;The How&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;For Security Incident Response to effectively complement high availability, organizations should:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Implement proactive monitoring and detection&lt;/strong&gt;: Use tools like SIEM (Security Information and Event Management)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prepare for containment and isolation&lt;/strong&gt;: High availability systems should be designed with segmentation in mind&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Automate incident response and failover&lt;/strong&gt;: Automate responses to specific types of threats, such as deploying firewalls, initiating backups, or failing over to standby systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Maintain constant communication&lt;/strong&gt;: SIR teams should work closely with HA engineers to ensure that any security measures (e.g., shutting down affected systems) do not inadvertently cause a service disruption.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Review and test regularly&lt;/strong&gt;: Just as HA systems undergo regular testing for failovers, security incident response plans should be tested in simulated scenarios.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;



&lt;h3 id=&#34;why-study-failure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#why-study-failure&#34;&gt;Why study failure?&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proactive Prevention&lt;/strong&gt; üõ†Ô∏è: Identifying potential failure points allows you to take preventive measures and avoid system outages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Faster Recovery&lt;/strong&gt; üöë: Knowing how systems can fail enables quicker response and minimizes downtime with a tested failover plan.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resilience Building&lt;/strong&gt; üõ°Ô∏è: Understanding failure mechanisms helps design architectures that automatically handle issues, ensuring better uptime.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Risk Management&lt;/strong&gt; ‚öñÔ∏è: Acknowledging failure risks helps balance uptime goals with realistic risk management and avoids catastrophic downtime.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h1 id=&#34;service-level-objectives-slos-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#service-level-objectives-slos-&#34;&gt;Service Level Objectives (SLOs) üéØ&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;intro-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#intro-3&#34;&gt;Intro&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Service Level Objectives (SLOs) are specific, measurable targets üìä that define the expected performance or quality level of a service, typically included in Service Level Agreements (SLAs). They help ensure services meet customer expectations by setting clear benchmarks for key metrics like reliability, availability, and response time.&lt;/p&gt;
&lt;p&gt;SLOs help teams prioritize work, manage resources, and drive decisions based on real performance data. üîß&lt;/p&gt;
&lt;p&gt;Check out Google&amp;rsquo;s guide to SLOs &lt;a href=&#34;https://sre.google/workbook/implementing-slos/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h3 id=&#34;bad-operations-badops-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#bad-operations-badops-&#34;&gt;Bad Operations (BadOps) ‚ö†Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The unspoken rule of 100% uptime is a myth ‚ùå.&lt;/li&gt;
&lt;li&gt;100% uptime ‚â† 100% reliability.&lt;/li&gt;
&lt;li&gt;Each extra ‚Äúnine‚Äù of uptime comes at a significant cost üí∏.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;why-have-slos-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#why-have-slos-&#34;&gt;Why Have SLOs? ü§î&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Engineers are scarce üßë‚Äçüíª: Impossible standards require more resources.&lt;/li&gt;
&lt;li&gt;They inform decisions: The opportunity cost of reliability is clear with an objective.&lt;/li&gt;
&lt;li&gt;SREs aren&amp;rsquo;t just automation experts; they&amp;rsquo;re driven by SLOs üöÄ.&lt;/li&gt;
&lt;li&gt;SLOs help prioritize tasks effectively üìã.&lt;/li&gt;
&lt;li&gt;They define &lt;strong&gt;error budgets&lt;/strong&gt; to manage acceptable failure rates.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1 id=&#34;service-level-indicators-slis-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#service-level-indicators-slis-&#34;&gt;Service Level Indicators (SLIs) üìè&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;intro-4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#intro-4&#34;&gt;Intro&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A Service Level Indicator (SLI) is a specific, quantifiable metric üî¢ used to measure the performance of a service, often forming the foundation of SLOs.&lt;/p&gt;



&lt;h3 id=&#34;setting-a-solid-sli-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#setting-a-solid-sli-&#34;&gt;Setting a Solid SLI ‚öñÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Two out of five of these factors can be used to form a ratio that serves as a target SLI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Number of successful HTTP requests / total HTTP requests (success rate) üåê.&lt;/li&gt;
&lt;li&gt;Number of gRPC calls completed in under 100ms / total gRPC requests ‚è±Ô∏è.&lt;/li&gt;
&lt;li&gt;Number of search results using the entire data set / total search results, including gracefully degraded ones üîç.&lt;/li&gt;
&lt;li&gt;Number of stock check requests with data fresher than 10 minutes / total stock check requests üõí.&lt;/li&gt;
&lt;li&gt;Number of ‚Äúgood user minutes‚Äù based on defined criteria / total user minutes üìÖ.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h2 id=&#34;glossary-of-terms-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#glossary-of-terms-&#34;&gt;Glossary of Terms üôä&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;These are additional terms I have become familiar with that were not covered in this units notes but relayed by Scott.&lt;/p&gt;



&lt;h3 id=&#34;five-9s&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#five-9s&#34;&gt;Five 9‚Äôs&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Refers to 99.999% availability, meaning less than 5 minutes of downtime per year.&lt;/p&gt;



&lt;h3 id=&#34;single-point-of-failure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#single-point-of-failure&#34;&gt;Single point of failure&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A component in a system whose failure will cause the entire system to fail.&lt;/p&gt;



&lt;h3 id=&#34;key-performance-indicators&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#key-performance-indicators&#34;&gt;Key Performance Indicators&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Metrics used to measure the performance and effectiveness of a system or service.&lt;/p&gt;



&lt;h3 id=&#34;sli-service-level-indicator&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#sli-service-level-indicator&#34;&gt;SLI (Service Level Indicator)&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A specific, quantifiable metric used to measure the performance of a service (e.g., latency, uptime).&lt;/p&gt;



&lt;h3 id=&#34;slo-service-level-objective&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#slo-service-level-objective&#34;&gt;SLO (Service Level Objective)&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A target or goal for an SLI, defining acceptable performance for a service.&lt;/p&gt;



&lt;h3 id=&#34;sla-service-level-agreement&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#sla-service-level-agreement&#34;&gt;SLA (Service Level Agreement)&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A formal contract that defines the level of service expected between a provider and a customer, including penalties for not meeting SLOs.&lt;/p&gt;



&lt;h3 id=&#34;active-standby&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#active-standby&#34;&gt;Active-Standby&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A redundancy setup where one component is active while another remains on standby to take over if the active one fails.&lt;/p&gt;



&lt;h3 id=&#34;active-active&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#active-active&#34;&gt;Active-Active&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A redundancy setup where multiple components work simultaneously to share the load, and failure in one component is covered by the others.&lt;/p&gt;



&lt;h3 id=&#34;mttd-mean-time-to-detect&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#mttd-mean-time-to-detect&#34;&gt;MTTD (Mean Time to Detect)&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The average time it takes to detect a failure or incident in a system.&lt;/p&gt;



&lt;h3 id=&#34;mttr-mean-time-to-repair&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#mttr-mean-time-to-repair&#34;&gt;MTTR (Mean Time to Repair)&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The average time it takes to recover from a failure or incident once it has been detected.&lt;/p&gt;



&lt;h3 id=&#34;mtbf-mean-time-between-failures-mentioned-once&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#mtbf-mean-time-between-failures-mentioned-once&#34;&gt;MTBF (Mean Time Between Failures) &amp;lsquo;Mentioned Once&amp;rsquo;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The average time a system operates without failure, used to measure system reliability.&lt;/p&gt;
&lt;hr&gt;



&lt;h1 id=&#34;reflection&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#reflection&#34;&gt;Reflection&lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Remaining Qustions?&lt;/li&gt;
&lt;li&gt;How will I put this into practice?&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu3/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Capstone Project Stage 2 üêß</title>
      <link>http://localhost:1313/techblog/post/paccp2/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/paccp2/</guid>
      <description>&lt;h1 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I‚Äôve made significant progress with the Capstone Project, the project has expanded to include building a full website.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;planning&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#planning&#34;&gt;Planning&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;integration&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#integration&#34;&gt;Integration&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;It seemed silly to develop such a complex mechanism that would later require integration into an unknown larger structure.&lt;/p&gt;



&lt;h3 id=&#34;no-site-to-begin-with&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#no-site-to-begin-with&#34;&gt;No site to begin with&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;After asking Scott about it, I learned that there has never been a ProLUG website and that he has been meaning to get something up.&lt;/p&gt;



&lt;h3 id=&#34;naturally&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#naturally&#34;&gt;Naturally&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;It seemed like taking on the entire website project was a good course of action. That way I would be able to decide the layout, functionality and logic all while learning new tools and techniques.&lt;/p&gt;



&lt;h2 id=&#34;technology&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#technology&#34;&gt;Technology&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;going-with-go&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#going-with-go&#34;&gt;Going with GO&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACCP2/godeal.png&#34; alt=&#34;Go Logo x Deal with it&#34;&gt;&lt;/p&gt;
&lt;p&gt;The website uses Go on the backend to serve templates and for back-end logic. While I‚Äôve used Go for template servers before, incorporating templated components similar to Vue.js is new to me.&lt;/p&gt;



&lt;h4 id=&#34;heres-why-go-excels-for-this-type-of-project&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#heres-why-go-excels-for-this-type-of-project&#34;&gt;Here‚Äôs why Go excels for this type of project:&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The codebase remains clean, minimal, and easy to understand.&lt;/li&gt;
&lt;li&gt;The dependency system is simple, with no clutter of unnecessary packages.&lt;/li&gt;
&lt;li&gt;It ensures memory safety.&lt;/li&gt;
&lt;li&gt;Go‚Äôs HTTP server protects against injection, MITM, side-channel, and other common attacks.&lt;/li&gt;
&lt;li&gt;HTML templating allows for modularity similar to Vue.js.&lt;/li&gt;
&lt;li&gt;Garbage collection ensures long-term running without memory issues.&lt;/li&gt;
&lt;li&gt;The project can be easily containerized or built into a single binary.&lt;/li&gt;
&lt;li&gt;The Go module system (go.mod) ensures future stability through version control.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;storing-data&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#storing-data&#34;&gt;Storing Data&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Initially, I was looking at SQLite for storing key-value pairs. However, after considering usability, I switched to a simple CSV file.&lt;/p&gt;



&lt;h3 id=&#34;why-csv&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#why-csv&#34;&gt;Why CSV&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The stored data must be easily manipulated by the administrator in a human readable format. With CSV, Scott would be able to amend or edit certificate holders at a glance.&lt;/p&gt;



&lt;h3 id=&#34;operationally&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#operationally&#34;&gt;Operationally&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This method is both secure and integral&lt;/p&gt;



&lt;h3 id=&#34;how-is-it-secure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#how-is-it-secure&#34;&gt;How is it secure?&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;As stated before GO can securely transmit backend data without many common attacks. Additionally using GIT diff feature would ensure alterations are spotted should a compromise be made.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;the-structure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#the-structure&#34;&gt;The Structure&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;certificate-verifier&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#certificate-verifier&#34;&gt;Certificate Verifier&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;pulling-from-this-test-csv-file&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#pulling-from-this-test-csv-file&#34;&gt;Pulling from this test CSV file:&lt;/a&gt;
&lt;/h4&gt;

  

&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;Johny,Exampleseed,ProLUG Admin Course,2024-11-15,f078b6c4f26a2fae59d50fdb7c761a7f9523d240b2c18b332aac11e0
Kate,Testinger,ProLUG Admin Course,2024-11-15,a523e6d1ece5bb2758f71993ba1a460024dcd10243fa17654af90257
Het, Tanis, ProLUG Admin Course,2015-11-02,a523e6d1ece5bb2758f71993ba1a460024dcd10243fa17324af90257&lt;/code&gt;&lt;/pre&gt;



&lt;h4 id=&#34;using-this-logic&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#using-this-logic&#34;&gt;Using this logic:&lt;/a&gt;
&lt;/h4&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Certificate verification handler
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// This function is the HTTP handler responsible for verifying certificates.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// It is triggered when a user accesses the relevant URL and checks for a certificate based on a hash parameter.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;certHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ResponseWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Extract hash value from the URL query parameters.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// The hash is used to identify the certificate to verify.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// If no hash is provided in the query, return a &amp;#34;Bad Request&amp;#34; error.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Send an HTTP error response indicating that the hash is missing.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hash not provided&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Exit the handler function since no hash is available.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Load certificates from a CSV file.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// This function attempts to retrieve all certificates stored in the &amp;#34;certificates.csv&amp;#34; file.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;certificates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LoadCertificates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;certificates.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// If there&amp;#39;s an error loading the certificates (e.g., file not found or corrupted), log the error.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Log the error message to the server logs and return a &amp;#34;Server Error&amp;#34; to the client.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Error loading certificates: %v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Server Error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusInternalServerError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Exit the handler function due to the error.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Initialize a pointer to a Certificate struct.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// This will hold the matching certificate if a valid hash is found.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Certificate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Iterate over all loaded certificates.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// Check each certificate&amp;#39;s hash to see if it matches the one provided in the query.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;certificates&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Hash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// If a matching certificate is found, assign it to the &amp;#39;cert&amp;#39; pointer and break the loop.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;nx&#34;&gt;cert&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Render the result page using the template engine.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// Pass the certificate (or nil if not found) to the template &amp;#34;result.html&amp;#34; for display.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;templates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ExecuteTemplate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;result.html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#34;Certificate&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Include the certificate as part of the template data.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// If there&amp;#39;s an error rendering the page (e.g., template not found or syntax error), log the issue.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Log the error message to the server logs and return an &amp;#34;Internal Server Error&amp;#34; to the client.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Error rendering verification page: %v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Internal Server Error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusInternalServerError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-GO&#34; data-lang=&#34;GO&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Certificate represents a learning certificate with associated data.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Certificate&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;FirstName&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;LastName&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;CertType&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;DateCompleted&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;Hash&lt;/span&gt;          &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h4 id=&#34;the-prompt&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#the-prompt&#34;&gt;The prompt&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot5.png&#34; alt=&#34;ProLUG Verify Step 1&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;inputting-a-uid-hash-string&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#inputting-a-uid-hash-string&#34;&gt;Inputting a UID hash string&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot6.png&#34; alt=&#34;ProLUG Verify Step 2&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;matching-string-results-in-a-info-retrieval&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#matching-string-results-in-a-info-retrieval&#34;&gt;Matching string results in a info retrieval&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot7.png&#34; alt=&#34;ProLUG Verify Step 3&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;an-unrecognized-string-results-in-an-error-message&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#an-unrecognized-string-results-in-an-error-message&#34;&gt;An unrecognized string results in an error message&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot8.png&#34; alt=&#34;ProLUG Verify Step 4&#34;&gt;&lt;/p&gt;



&lt;h3 id=&#34;current-site-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#current-site-&#34;&gt;Current Site üíÑ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;After getting a working verification system worked out, I moved on to creating a broader website.&lt;/p&gt;



&lt;h4 id=&#34;styling&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#styling&#34;&gt;Styling&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;I like sites with a clean, easy to use and accessible appearance. I have a solid understanding of graphic design for accessibility and wanted to put that into practice here. So the design is stark, compact, clear and contrasting. This language carries throughout.&lt;/p&gt;



&lt;h4 id=&#34;technique&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#technique&#34;&gt;Technique&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;So as mentioned previously, I am serving html templates with GO. This can be pretty simple, we can serve a single basic html page with no modular components. I wanted to try out some fancy tricks using modularized components in this project, cutting down on the size of each template. The way this works within this project is very similar to Vue.js templating. We must declare a template as a component by encapsulating the html with tags.&lt;/p&gt;
&lt;p&gt;for example the Navigation bar is coded similarly to any old navbar and saved in templates as navbar.html. The fancy bit is enclosing the code with the tag&lt;/p&gt;



&lt;h4 id=&#34;defining-a-component&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#defining-a-component&#34;&gt;Defining a component&lt;/a&gt;
&lt;/h4&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;navbar&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Code&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;goes&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;here&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h4 id=&#34;using-a-template-component&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#using-a-template-component&#34;&gt;Using a template component&lt;/a&gt;
&lt;/h4&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;navbar&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h4 id=&#34;current-home-page&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#current-home-page&#34;&gt;Current Home Page&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot1.png&#34; alt=&#34;ProLUG Home Page&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;current-about-page&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#current-about-page&#34;&gt;Current About Page&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot2.png&#34; alt=&#34;ProLUG About Page&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;current-join-page&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#current-join-page&#34;&gt;Current Join Page&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot3.png&#34; alt=&#34;ProLUG Join Page&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;current-certify-page&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#current-certify-page&#34;&gt;Current Certify Page&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot4.png&#34; alt=&#34;ProLUG Certify Page&#34;&gt;&lt;/p&gt;



&lt;h4 id=&#34;current-verify-page&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#current-verify-page&#34;&gt;Current Verify Page&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Sep22site/shot5.png&#34; alt=&#34;ProLUG Verify Page&#34;&gt;&lt;/p&gt;



&lt;h3 id=&#34;next-steps-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#next-steps-&#34;&gt;Next Steps&amp;hellip; ü•æ&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;I plan on discussing this in the Code Cove group in ProLUG&lt;/li&gt;
&lt;li&gt;I plan on creating a scoreboard as ideated in unit 2 by scott by reading from a CSV and writing to an order list&lt;/li&gt;
&lt;li&gt;I plan on spiffying up the appearance and useability of the site using tailwind and a bit more js logic&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp2/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 2 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu2/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu2/</guid>
      <description>&lt;h1 id=&#34;essential-tools-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#essential-tools-&#34;&gt;Essential Tools üõ†Ô∏è&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We have reached the second week of the PAC and things are getting more serious. Now that we are familiar with the flow of the course and expectations are set, the second lesson has started with some momentum. üí∫&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;unit-2-lab-exercise-notes-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#unit-2-lab-exercise-notes-&#34;&gt;Unit 2 lab exercise notes üß™&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;I am completing the labs locally carefully covering every command listed by running them and checking output, making sure to pay attention to details like options. It was fairly time consuming, yet I learned quite a bit.&lt;/p&gt;



&lt;h4 id=&#34;-basic-cli-exercise&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#-basic-cli-exercise&#34;&gt;üß≠ Basic CLI exercise:&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;cd ~ # Change Directory to Home&lt;/li&gt;
&lt;li&gt;ls ~ # List&lt;/li&gt;
&lt;li&gt;mkdir evaluation # Make Directory called &amp;rsquo;evaluation&#39;&lt;/li&gt;
&lt;li&gt;mkdir evaluation/test/round6 # This fails why? We need to use the Parent option &amp;lsquo;-p&amp;rsquo;&lt;/li&gt;
&lt;li&gt;mkdir -p evaluation/test/round6 # Make parent directory with subdirectories&lt;/li&gt;
&lt;li&gt;cd evaluation # change directory to evaluation&lt;/li&gt;
&lt;li&gt;pwd # present/print working directory = /home/ts/evaluation&lt;/li&gt;
&lt;li&gt;touch testfile1 # create file name &amp;rsquo;testfile1&amp;rsquo; in current directory&lt;/li&gt;
&lt;li&gt;ls # list = test testfile1&lt;/li&gt;
&lt;li&gt;touch testfile{2..10} # Creates a numbered range of testfile
touch .hfile .hfile2 .hfile3 # this creates three dot files which are not visible to a normal listing method, we must use list all (ls -a)&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;-gathering-system-information&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#-gathering-system-information&#34;&gt;üîç Gathering System Information&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;I am running Rocky Linux 9 on a local Proxmox container for this course.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hostname = localhost.localdomain&lt;/li&gt;
&lt;li&gt;uname # system info command which stands for Unix Name&lt;/li&gt;
&lt;li&gt;uname -a # shows a comprehensive list of system info Kernal name# Hostname, Kernel release, Kernel version, Machine hardware name, Processor type, Hardware platform, Operating system.&lt;/li&gt;
&lt;li&gt;uname -r # the -r option stands for release and shows the kernel release version.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;-checking-the-amount-of-rammemory&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#-checking-the-amount-of-rammemory&#34;&gt;üß† Checking the amount of RAM/Memory&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;sudo&lt;/em&gt; cat/proc/meminfo # concatenate process memory information&lt;/li&gt;
&lt;li&gt;free # displays total, used, free, shared, buffer, and available memory (RAM and SWAP)&lt;/li&gt;
&lt;li&gt;free -m # megabyte display option for the free command&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;-checking-the-number-of-processors-and-processor-info&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#-checking-the-number-of-processors-and-processor-info&#34;&gt;üë®üèª‚Äçüíª Checking the number of processors and processor info&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;cat/proc/cpuinfo # concatenate process central processor unit information = 4 processors on my lab.&lt;/li&gt;
&lt;li&gt;cat /proc/cpuinfo | grep proc | wc -l # what we are doing here is piping the output of the previous command to grep which is filtering lines starting with proc, then we pipe through to word count with line option to cleverly count the number of processors, the result is 4&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;-checking-storage-usage-and-mounted-filesystems&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#-checking-storage-usage-and-mounted-filesystems&#34;&gt;üíæ Checking storage usage and mounted filesystems&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;df # the disk free command&lt;/li&gt;
&lt;li&gt;df -h # we are adding the human readable option to df in order to more easily ascertain what is going on.&lt;/li&gt;
&lt;li&gt;df -h | grep -i var #&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;-mounting-a-new-file-system&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#-mounting-a-new-file-system&#34;&gt;üíæ Mounting a new file system&lt;/a&gt;
&lt;/h4&gt;



&lt;h5 id=&#34;common-mount-command-options&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#common-mount-command-options&#34;&gt;Common &lt;code&gt;mount&lt;/code&gt; Command Options&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-t&lt;/strong&gt; # Specify the filesystem type (e.g., &lt;code&gt;ext4&lt;/code&gt;, &lt;code&gt;xfs&lt;/code&gt;, &lt;code&gt;vfat&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-o&lt;/strong&gt; # Specify options in a comma-separated list (e.g., &lt;code&gt;rw&lt;/code&gt;, &lt;code&gt;ro&lt;/code&gt;, &lt;code&gt;noexec&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-a&lt;/strong&gt; # Mount all filesystems defined in &lt;code&gt;/etc/fstab&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-r&lt;/strong&gt; # Mount the filesystem as read-only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-w&lt;/strong&gt; # Mount the filesystem as read-write.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-v&lt;/strong&gt; # Verbose mode, provides more detailed output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;ndash;bind&lt;/strong&gt; # Bind mount, remount part of the filesystem elsewhere.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&amp;ndash;make-shared&lt;/strong&gt; # Make a mounted file system shared (for propagating mount events).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-L&lt;/strong&gt; # Mount by filesystem label.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;-U&lt;/strong&gt; # Mount by UUID.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mount | grep ‚Äìi home# lists all mounts starting with the case sensitive phrase home (I was not getting any result ü§î)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mount | grep -i sd# this lists all SCSK disks, normally named sda, sdb, sdc etc&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;h5 id=&#34;trying-out-alternative-commands&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#trying-out-alternative-commands&#34;&gt;Trying out alternative commands&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;findmt&lt;/strong&gt;# find mount&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cat /proc/mounts&lt;/strong&gt;# concatenate in-process mounts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lsblk&lt;/strong&gt;# list block devices&lt;/li&gt;
&lt;/ul&gt;



&lt;h5 id=&#34;i-was-unaware-that-commands-could-be-chained-together-with-a-semicolon&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#i-was-unaware-that-commands-could-be-chained-together-with-a-semicolon&#34;&gt;I was unaware that commands could be chained together with a semicolon&lt;/a&gt;
&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd ~; pwd; df -h&lt;/code&gt;# change directory to home, then print working directory, then list disk usage in a human-readable format üßê.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -sh&lt;/code&gt;# disk usage summary in a human-readable format.&lt;/li&gt;
&lt;/ul&gt;



&lt;h5 id=&#34;du-command-options&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#du-command-options&#34;&gt;&lt;code&gt;du&lt;/code&gt; Command Options&lt;/a&gt;
&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;  **`-a`**# Display disk usage for all files, not just directories.
  **`-h`**# Show disk usage in human-readable format (e.g., KB, MB, GB).
  **`-s`**# Show summary of total disk usage for a directory.
  **`-c`**# Produce a grand total at the end.
  **`-L`**# Follow symbolic links (default `du` doesn&#39;t follow symlinks).
  **`-d N`** or **`--max-depth=N`**# Limit directory depth to N levels.
  **`--time`**# Show modification time of directories.
  **`-b`**# Show disk usage in bytes.
  **`-k`**# Show disk usage in kilobytes.
  **`-m`**# Show disk usage in megabytes.
  **`--apparent-size`**# Show the apparent size instead of disk usage.
  **`-x`**# Skip directories on different file systems.
  **`--exclude=PATTERN`**# Exclude files matching a pattern.
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;uptime&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#uptime&#34;&gt;Uptime&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  `uptime`# Shows time in HH:MM:SS Unix time format in local time. If the time is not set, like in my instance, I get UTC 0üßê. Next, it shows how long the system has been running, the number of logged-in users, and finally, the load average over the last 1, 5, and 15 minutes.
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;last&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#last&#34;&gt;Last&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  **`last`**# Lists all users who have logged in from latest to oldest.
  **`w`**# Lists current users and associated processes.
  **`who`**# Shows who is currently logged on. The output `pts/0` stands for pseudo terminal, typically shown when logged in remotely. It will show either an IPv4 or IPv6 address and the login time. When I logged into my Ubuntu server via SSH, I was shown the IPv6 address. ü§Ø
  **`whoami`**# Tells which user you are.
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;checking-environment&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#checking-environment&#34;&gt;Checking environment&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  **`printenv`**# Shows a long list of environmental information.
  **`printenv | grep -i home`**# Shows that I am in the home directory of `root`.
  **`id`**# Shows a lot of info about UID, GID, and group memberships, including SELinux policies.
  **`echo $SHELL`**# Displays the path of the shell environment variable, in my case, `/bin/bash`.
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;check-running-processes-and-services&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#check-running-processes-and-services&#34;&gt;Check running processes and services&lt;/a&gt;
&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  **`ps -aux | more`**
  **`ps -ef | more`**
  **`ps -ef | wc -l`**
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;check-memory-usage&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#check-memory-usage&#34;&gt;Check memory usage&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Run each of these commands individually for understanding:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  **`free -m`**
  **`free -m | egrep &amp;quot;Mem|Swap&amp;quot;`**
  **`free -m | egrep &amp;quot;Mem|Swap&amp;quot; | awk &#39;{print $1, $2, $3}&#39;`**: What are the first, second, and third columns? How would I know the variable names?
  **`free -t | egrep &amp;quot;Mem|Swap&amp;quot; | awk &#39;{print $1 &amp;quot; Used Space = &amp;quot; ($3 / $2) * 100&amp;quot;%&amp;quot;}&#39;`**: Similar question for these variables.
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;testing-out-scripts&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#testing-out-scripts&#34;&gt;Testing out scripts&lt;/a&gt;
&lt;/h3&gt;



&lt;h5 id=&#34;q-have-you-ever-written-a-basic-check-script-or-touched-on-conditional-statements-or-loops&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#q-have-you-ever-written-a-basic-check-script-or-touched-on-conditional-statements-or-loops&#34;&gt;Q: Have you ever written a basic check script or touched on conditional statements or loops?&lt;/a&gt;
&lt;/h5&gt;



&lt;h5 id=&#34;a-yes-very-basic-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#a-yes-very-basic-&#34;&gt;A: Yes very basic üòÖ&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;(Use ctrl + c to break out of these) üëç&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  while true; do free -m; sleep 3; done
  Watch this output for a few and then break with ctrl + c
  Try to edit this to wait for 5 seconds
  Try to add a check for uptime and date each loop with a blank line between each and 10 second wait:
  while true; do date; uptime; free -m; echo ‚Äú ‚Äú; sleep 10; done
  Since we can wrap anything inside of our while statements, let‚Äôs try adding something from earlier:
  While true; do free -t | egrep &amp;quot;Mem|Swap&amp;quot; | awk &#39;{print $1 &amp;quot; Used Space = &amp;quot; ($3 / $2) * 100&amp;quot;%&amp;quot;}&#39;; sleep 3; done üëç
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;seq 1 10&lt;/strong&gt;&lt;/p&gt;



&lt;h5 id=&#34;q-what-did-this-do&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#q-what-did-this-do&#34;&gt;Q: What did this do?&lt;/a&gt;
&lt;/h5&gt;



&lt;h5 id=&#34;a-it-counts-from-1-to-10-creating-a-new-line-for-each-char&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#a-it-counts-from-1-to-10-creating-a-new-line-for-each-char&#34;&gt;A: it counts from 1 to 10, creating a new line for each char.&lt;/a&gt;
&lt;/h5&gt;



&lt;h5 id=&#34;q-can-you-man-seq-to-modify-that-to-count-from-2-to-20-by-2s&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#q-can-you-man-seq-to-modify-that-to-count-from-2-to-20-by-2s&#34;&gt;Q: Can you man seq to modify that to count from 2 to 20 by 2‚Äôs?&lt;/a&gt;
&lt;/h5&gt;



&lt;h5 id=&#34;a-yes-by-using-first-increment-last-so-2-2-20&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#a-yes-by-using-first-increment-last-so-2-2-20&#34;&gt;A: yes by using &amp;lsquo;First Increment Last, so 2 2 20&amp;rsquo;&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;Let‚Äôs make a counting for loop from that sequence ‚úÖ
for i in &lt;code&gt;seq 1 20&lt;/code&gt;; do echo &amp;ldquo;I am counting i and am on $i times through the loop&amp;rdquo;; done üëç&lt;/p&gt;



&lt;h5 id=&#34;q-can-you-tell-me-what-is-the-difference-or-significance-of-the--in-the-command-above-what-does-that-denote-to-the-system&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#q-can-you-tell-me-what-is-the-difference-or-significance-of-the--in-the-command-above-what-does-that-denote-to-the-system&#34;&gt;Q: Can you tell me what is the difference or significance of the $ in the command above? What does that denote to the system?&lt;/a&gt;
&lt;/h5&gt;



&lt;h5 id=&#34;a-we-are-using-the--to-access-a-variable&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#a-we-are-using-the--to-access-a-variable&#34;&gt;A: we are using the $ to access a variable.&lt;/a&gt;
&lt;/h5&gt;
&lt;p&gt;Uptime ‚Äì The time a system has been running for without interruption.
Standard input - stdin &amp;lsquo;0&amp;rsquo; the default stream where a program receives data.
Standard output - stdout &amp;lsquo;1&amp;rsquo; refers to default stream output of a program.
Standard error ‚Äì stderr &amp;lsquo;2&amp;rsquo; refers to a default stream wherein an error is sent.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;reflecting-on-unit-1-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#reflecting-on-unit-1-&#34;&gt;Reflecting on Unit 1 ü§î&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Week 1 went well for me. I was very excited to start this course as it strongly aligns with my professional interests, and it came at a great time. I am incredibly grateful to have access to such a talented group of like-minded and enthusiastic professionals.&lt;/p&gt;
&lt;p&gt;I managed to complete everything for Week 1 by preparing in advance. For example, I created this blog and started some of the materials early. The night before the course began, I went through Vim Tutor and Vim Adventures to give myself a bit of a head start, as my time is currently divided between various responsibilities. I also dedicated a significant portion of my time to starting my capstone project and troubleshooting issues.&lt;/p&gt;
&lt;p&gt;I‚Äôve set aside 8 hours per week, as suggested by Scott, for attending lectures, reading materials, practicing labs, and doing general research. During Week 1, I used roughly 6 hours, so I believe I‚Äôve allocated enough time to complete the course work.&lt;/p&gt;
&lt;p&gt;My note-taking has been excellent for this course. Prior to starting, I learned how essential note-taking is to the administration and engineering process, so I began using LogSeq as my note-taking tool four months ago. This gave me time to familiarize myself with its features, allowing me to dive into the lectures fully prepared. I‚Äôm also a fast touch typist, so I can easily listen and type simultaneously. After each lecture, I review and organize my notes by nesting and tagging information to relate it to other topics. Additionally, I‚Äôve been reflecting on everything by writing in this blog.&lt;/p&gt;
&lt;hr&gt;



&lt;h2 id=&#34;security-enhanced-linux&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#security-enhanced-linux&#34;&gt;Security Enhanced Linux&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;brief-intro-to-selinux&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#brief-intro-to-selinux&#34;&gt;Brief intro to SELinux&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;SELinux (Security-Enhanced Linux) is a security module integrated into the Linux kernel that enforces mandatory access control policies to provide more granular control over how processes and users interact with files and resources. By defining strict rules on what actions each program or user can perform, SELinux significantly enhances the security posture of a Linux system, helping to prevent unauthorized access and exploits.&lt;/p&gt;



&lt;h3 id=&#34;brief-intro-to-apparmor&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#brief-intro-to-apparmor&#34;&gt;Brief intro to Apparmor&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;AppArmor (Application Armor) is a Linux security module that enforces access control policies based on file paths, limiting what resources applications can access to enhance system security. It provides a simpler, profile-based alternative to SELinux, allowing administrators to create restrictive environments for individual applications without requiring deep changes to system configuration.&lt;/p&gt;



&lt;h3 id=&#34;key-terminology&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#key-terminology&#34;&gt;Key Terminology&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Mandatory Access Control ‚Äì
Discretionary Access Control ‚Äì
Security contexts (SELINUX) ‚Äì
SELINUX operating modes -&lt;/p&gt;



&lt;h3 id=&#34;comparing-apparmor-and-selinux-for-container-separation-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#comparing-apparmor-and-selinux-for-container-separation-1&#34;&gt;Comparing AppArmor and SELinux for Container Separation &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This article provides a brief comparison between &lt;strong&gt;SELinux&lt;/strong&gt; and &lt;strong&gt;AppArmor&lt;/strong&gt; regarding their effectiveness in securely separating containers.&lt;/p&gt;
&lt;p&gt;After reading, it became clear that &lt;strong&gt;AppArmor&lt;/strong&gt; is not an ideal choice for &lt;strong&gt;DevSecOps&lt;/strong&gt; when it comes to securely separating containers. This is due to &lt;strong&gt;AppArmor&amp;rsquo;s lack of support for Multi-Category Security (MCS)&lt;/strong&gt;. MCS allows for a hierarchy of controls, granting varying levels of access.&lt;/p&gt;
&lt;p&gt;Therefore, if you&amp;rsquo;re looking to securely separate containers without relying on &lt;strong&gt;Virtual Machines&lt;/strong&gt;‚Äîwhich can be costly‚Äî&lt;strong&gt;SELinux&lt;/strong&gt; emerges as the better option for such tasks.&lt;/p&gt;



&lt;h3 id=&#34;key-takeaways-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#key-takeaways-&#34;&gt;Key Takeaways üìù&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AppArmor&lt;/strong&gt; is &lt;strong&gt;not label-based&lt;/strong&gt;, unlike SELinux.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AppArmor&lt;/strong&gt; is generally seen as more &lt;strong&gt;user-friendly&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AppArmor&lt;/strong&gt; has fewer controls compared to SELinux.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AppArmor&lt;/strong&gt; has &lt;strong&gt;fewer operations&lt;/strong&gt; available.&lt;/li&gt;
&lt;li&gt;Both support the &lt;strong&gt;Type Enforcement&lt;/strong&gt; security model (a form of &lt;strong&gt;mandatory access control&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;The security model is based on rules where subjects (like processes or users) are allowed to access objects (e.g., files, directories, sockets, etc.).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AppArmor&lt;/strong&gt; lacks &lt;strong&gt;Multi-Level Security (MLS)&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AppArmor&lt;/strong&gt; does not support &lt;strong&gt;Multi-Category Security (MCS)&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;üîÑ Because &lt;strong&gt;MCS is unavailable&lt;/strong&gt;, &lt;strong&gt;AppArmor&lt;/strong&gt; cannot maintain proper separation between containers.&lt;/li&gt;
&lt;li&gt;‚ö†Ô∏è The default container policy in AppArmor is &lt;strong&gt;very loose&lt;/strong&gt;, which could present security risks.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;quick-comparison-table-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#quick-comparison-table-&#34;&gt;Quick Comparison Table üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Technology&lt;/th&gt;
          &lt;th&gt;Type Enforcement&lt;/th&gt;
          &lt;th&gt;MLS/MCS&lt;/th&gt;
          &lt;th&gt;Policy Generator&lt;/th&gt;
          &lt;th&gt;Generator for Containers&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;AppArmor&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;SELinux&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;No*&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;By understanding these differences, it‚Äôs clear that &lt;strong&gt;SELinux&lt;/strong&gt; provides a more secure framework for container separation, making it a crucial tool for modern &lt;strong&gt;DevSecOps&lt;/strong&gt; workflows.&lt;/p&gt;



&lt;h3 id=&#34;enabling-selinux&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#enabling-selinux&#34;&gt;Enabling SELinux&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Before enabling SELinux, you can verify its current status by running the &lt;code&gt;sestatus&lt;/code&gt; command, which provides the &lt;strong&gt;Security Enhanced Status&lt;/strong&gt; of the system. To activate or configure SELinux, you need to modify the configuration file located at &lt;code&gt;/etc/selinux/config&lt;/code&gt;. SELinux can operate in two modes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Enforcing&lt;/strong&gt;: SELinux policies are actively enforced, and violations are blocked.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permissive&lt;/strong&gt;: Policies are not enforced, but violations are logged for review, allowing for troubleshooting without blocking actions.&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;selinux-contexts&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#selinux-contexts&#34;&gt;SELinux Contexts&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;context&lt;/strong&gt; in SELinux is a set of security labels used to manage access to files, processes, and other system resources. The context is composed of several fields:&lt;/p&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;system_u:object_r:httpd_sys_content_t:s0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user:role:type:level&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h4 id=&#34;breakdown-of-context-components&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#breakdown-of-context-components&#34;&gt;Breakdown of Context Components:&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt; Represents the SELinux identity of a subject (process) or object (file).
&lt;strong&gt;Role:&lt;/strong&gt; Groups privileges for processes and users, determining what they are allowed to do.
&lt;strong&gt;Type:&lt;/strong&gt; Defines how subjects (processes) can interact with objects (files or resources).
&lt;strong&gt;Level:&lt;/strong&gt; Used in Multi-Level Security (MLS) or Multi-Category Security (MCS) systems for additional granularity in access control.&lt;/p&gt;



&lt;h3 id=&#34;taking-selinux-for-a-spin-on-a-rocky-9-vm-in-my-proxmox-homelab&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#taking-selinux-for-a-spin-on-a-rocky-9-vm-in-my-proxmox-homelab&#34;&gt;Taking SELinux for a spin on a Rocky 9 VM in my Proxmox Homelab&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A few weeks ago, I learned how to create uninitialized templates with Proxmox, meaning the SSH keys are generated for each copy of the template. This is done with cloud init.&lt;/p&gt;
&lt;p&gt;So today I created a clone of my template specifically for getting hands on experience with SElinux&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU2/prox1.png&#34; alt=&#34;ProLUG Homepage&#34;&gt;&lt;/p&gt;
&lt;p&gt;I opened the &lt;strong&gt;/etc/selinux/config&lt;/strong&gt; and set se to enforce. I then ran &lt;strong&gt;sestatus&lt;/strong&gt; to confirm selinux had been activated.
I created a new user policy for myself with &lt;strong&gt;semanage user -a -R &amp;lsquo;staff_r webadm_r&amp;rsquo; Treasure&lt;/strong&gt; here is the result after running &lt;strong&gt;semanage user -l&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/PACU2/selinux1.png&#34; alt=&#34;ProLUG Homepage&#34;&gt;&lt;/p&gt;



&lt;h3 id=&#34;selinux-scenario-contemplation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#selinux-scenario-contemplation&#34;&gt;SELinux scenario contemplation&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You follow your company instructions to add a new user to a set of 10 Linux servers.&lt;/li&gt;
&lt;li&gt;They cannot access just one (1) of the servers.&lt;/li&gt;
&lt;li&gt;When you review the differences in the servers you see that the server they cannot access is running SELINUX.&lt;/li&gt;
&lt;li&gt;On checking other users have no problem getting into the system.&lt;/li&gt;
&lt;li&gt;You find nothing in the documentation (typical) about this different system or how these users are accessing it.&lt;/li&gt;
&lt;li&gt;What do you do? Where do you check?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the given information, it seems likely that SELinux is denying access to the new user. To troubleshoot this, I would take the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Check SELinux User Configuration&lt;/strong&gt;:&lt;br&gt;
I would run the command &lt;code&gt;semanage user -l&lt;/code&gt; to list all SELinux users and confirm whether the new user exists within the SELinux policy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify MLS/MCS Levels and Roles&lt;/strong&gt;:&lt;br&gt;
If the user is already registered, I would review the user&amp;rsquo;s Multi-Level Security (MLS) or Multi-Category Security (MCS) level and verify the role assigned to the user. It&amp;rsquo;s important that the user&amp;rsquo;s role matches those that have the necessary access permissions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Assign Appropriate Role&lt;/strong&gt;:&lt;br&gt;
If the current role restricts access, I would assign the user to an SELinux role that permits access to the system, ensuring that role-based access control (RBAC) is properly configured.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;



&lt;h3 id=&#34;interactive-killercoda-lab-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#interactive-killercoda-lab-2&#34;&gt;Interactive Killercoda Lab &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;i-hope-this-was-designed-to-be-challenging-because-i-was-challenged-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#i-hope-this-was-designed-to-be-challenging-because-i-was-challenged-&#34;&gt;I hope this was designed to be challenging, because I was challenged üòÖ&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Despite paying close attention, I somehow got confused by this challenge. I suppose the exercise was designed to force me to read through documentation, which was tough.
But I am proud to say that through trial and error, I was able to get through.&lt;/p&gt;



&lt;h4 id=&#34;commands-i-looked-up-in-the-documentation&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#commands-i-looked-up-in-the-documentation&#34;&gt;Commands I looked up in the documentation:&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;kubectl get deployment spacecow -n moon -o yaml &amp;gt; spacecow-deployment.yaml&lt;/li&gt;
&lt;li&gt;vim spacecow-deployment.yaml&lt;/li&gt;
&lt;li&gt;kubectl apply -f spacecow-deployment.yaml&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h2 id=&#34;troubleshooting&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;how-troubleshooting-differs-between-administrator-and-engineer&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#how-troubleshooting-differs-between-administrator-and-engineer&#34;&gt;How Troubleshooting Differs Between Administrator and Engineer&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Administrators&lt;/strong&gt; focus on &lt;strong&gt;restoring functionality&lt;/strong&gt; to existing systems, while &lt;strong&gt;Engineers&lt;/strong&gt; work on &lt;strong&gt;building and implementing&lt;/strong&gt; new systems or improvements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administrators&lt;/strong&gt; have &lt;strong&gt;existing documentation&lt;/strong&gt; to reference for troubleshooting, whereas &lt;strong&gt;Engineers&lt;/strong&gt; are responsible for &lt;strong&gt;creating new documentation&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administrators&lt;/strong&gt; can compare similar systems for &lt;strong&gt;inconsistencies&lt;/strong&gt;, but &lt;strong&gt;Engineers&lt;/strong&gt; may be working with entirely new systems or solutions, making such comparisons difficult.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;administrators&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#administrators&#34;&gt;Administrators:&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fix&lt;/strong&gt;: Restore systems to their previous, working state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimize&lt;/strong&gt;: Use tools like &lt;strong&gt;Ansible&lt;/strong&gt; or custom scripts to streamline operations and automate repetitive tasks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operate&lt;/strong&gt;: Handle daily tasks that &lt;strong&gt;cannot be automated&lt;/strong&gt;, such as monitoring or handling unexpected issues.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;engineers&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#engineers&#34;&gt;Engineers:&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prepare&lt;/strong&gt;: Configure pre-built tools for daily use and ensure they integrate smoothly with existing systems.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plan&lt;/strong&gt;: Anticipate and strategize operational changes, such as the introduction of new tools or system upgrades.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Design&lt;/strong&gt;: Create new tools, systems, or measures that address organizational needs and future challenges.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Implement&lt;/strong&gt;: Deploy new or upgraded systems and produce comprehensive documentation to support ongoing maintenance and troubleshooting.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;key-differences-in-troubleshooting&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#key-differences-in-troubleshooting&#34;&gt;Key Differences in Troubleshooting:&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Administrators typically deal with &lt;strong&gt;reactive troubleshooting&lt;/strong&gt;, where the goal is to quickly restore functionality after an issue occurs. Engineers, on the other hand, often engage in &lt;strong&gt;proactive troubleshooting&lt;/strong&gt; by identifying potential problems before they happen, ensuring that systems are scalable and sustainable.&lt;/li&gt;
&lt;li&gt;While administrators may focus on resolving immediate operational issues, engineers are responsible for the &lt;strong&gt;long-term stability&lt;/strong&gt; of systems, often troubleshooting while keeping future requirements in mind.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;troubleshooting-procedure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#troubleshooting-procedure&#34;&gt;Troubleshooting Procedure&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;1-identify-the-problem&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#1-identify-the-problem&#34;&gt;1. &lt;strong&gt;Identify the Problem&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gather Information&lt;/strong&gt;: Ask questions, check logs, or run diagnostics to gather all necessary details.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reproduce the Issue&lt;/strong&gt;: Try to replicate the problem to confirm its existence and scope.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;2-establish-a-theory-of-cause&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#2-establish-a-theory-of-cause&#34;&gt;2. &lt;strong&gt;Establish a Theory of Cause&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Look for Patterns&lt;/strong&gt;: Are there recurring errors or conditions?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use Known Issues&lt;/strong&gt;: Refer to documentation, previous cases, or online resources to match symptoms to potential causes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hypothesize&lt;/strong&gt;: Develop potential explanations based on the data you&amp;rsquo;ve collected.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;3-test-the-theory&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#3-test-the-theory&#34;&gt;3. &lt;strong&gt;Test the Theory&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Isolate Variables&lt;/strong&gt;: Disable or eliminate components one by one to test your theory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Try Quick Fixes&lt;/strong&gt;: Implement minor changes to see if the problem is resolved, such as restarting services or clearing caches.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;4-create-an-action-plan&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#4-create-an-action-plan&#34;&gt;4. &lt;strong&gt;Create an Action Plan&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Plan for Resolution&lt;/strong&gt;: Identify the steps needed to fix the problem if your theory is confirmed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consider Impact&lt;/strong&gt;: Make sure to assess any risks or side effects of your solution.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;5-implement-the-solution&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#5-implement-the-solution&#34;&gt;5. &lt;strong&gt;Implement the Solution&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Execute the Fix&lt;/strong&gt;: Apply the necessary changes, whether it&amp;rsquo;s a configuration adjustment, software update, or hardware replacement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitor&lt;/strong&gt;: Observe the system closely to ensure the issue doesn&amp;rsquo;t recur.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;6-verify-full-system-functionality&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#6-verify-full-system-functionality&#34;&gt;6. &lt;strong&gt;Verify Full System Functionality&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Test the Fix&lt;/strong&gt;: Confirm the problem is fully resolved and that other services or systems haven‚Äôt been affected.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ask Stakeholders&lt;/strong&gt;: Ensure end-users or relevant parties can validate the fix.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;7-document-the-findings&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#7-document-the-findings&#34;&gt;7. &lt;strong&gt;Document the Findings&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Write It Down&lt;/strong&gt;: Document the issue, the root cause, the solution, and any potential future prevention methods.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Share Knowledge&lt;/strong&gt;: Ensure others on your team or organization can reference the solution.&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;8-prevent-future-issues&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#8-prevent-future-issues&#34;&gt;8. &lt;strong&gt;Prevent Future Issues&lt;/strong&gt;&lt;/a&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Review System&lt;/strong&gt;: Investigate whether the root cause indicates a larger problem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Proactive Monitoring&lt;/strong&gt;: Set up alerts, automations, or optimizations to prevent recurrence.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h2 id=&#34;notes&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#notes&#34;&gt;Notes&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;dhcp&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#dhcp&#34;&gt;DHCP&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DHCP Should only be assigned by one server&lt;/li&gt;
&lt;li&gt;What is a BootP?&lt;/li&gt;
&lt;li&gt;DHCP is a process that comes from BootP?&lt;/li&gt;
&lt;li&gt;Layer 2 based on Mac address&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;first-day-on-the-job-you-must-inventory-the-servers&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#first-day-on-the-job-you-must-inventory-the-servers&#34;&gt;First day on the job, you must inventory the servers&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Nmap&lt;/li&gt;
&lt;li&gt;History on CommandLine (Find the IP&amp;rsquo;s)&lt;/li&gt;
&lt;li&gt;Ping Sweep for OpenSSH&lt;/li&gt;
&lt;li&gt;Create a local Inventory File&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;questions-i-have-from-this-week&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#questions-i-have-from-this-week&#34;&gt;Questions I have from this week:&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;How often does a Jr. Admin implement SELinux?&lt;/li&gt;
&lt;li&gt;If apparmor is so much less functional than SELinux, why is it still a popular choice? is it due to ease of use?&lt;/li&gt;
&lt;li&gt;you mentioned Irata? I was unable to look it up.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;free ‚Äìm| egrep ‚ÄúMem|Swap‚Äù | awk ‚Äò{print $1, $2, $3}‚Äô&lt;/strong&gt;: what is 1, 2 and 3. Is there an easy way to know which variables pertain to which data?&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;how-are-you-going-to-use-what-youve-learned-in-your-current-role&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#how-are-you-going-to-use-what-youve-learned-in-your-current-role&#34;&gt;How are you going to use what you‚Äôve learned in your current role?&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I have no direct application for most of this stuff at the moment. however I will definitely use scripting in my current position in order to automate tasks. Furthermore, I will def remember several commands from the labs that I will likely use daily.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu2/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Comparing Apparmor to Se Linux Isolation &lt;a href=&#34;https://www.redhat.com/sysadmin/apparmor-selinux-isolation&#34;&gt;Article&lt;/a&gt; Redhat.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Apparmor Interactive Lab &lt;a href=&#34;https://killercoda.com/killer-shell-cks/scenario/apparmor&#34;&gt;Site&lt;/a&gt; Killercoda.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Capstone Project Stage 1 üêß</title>
      <link>http://localhost:1313/techblog/post/paccp1/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/paccp1/</guid>
      <description>&lt;h3 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;To complete this course, we are required to undertake a capstone project. Before the course began, I created a graphic design and branding package for ProLUG, as I felt the group was gaining critical mass but lacked visual cohesion. As part of that package, I designed a certificate template for use in this course, which included the suggestion of a verification link. I have received several certifications from the Linux Professional Institute, all of which include a verification link to a server hosted by the organization. I believe this feature is crucial in a world of diploma mills and AI-generated credentials, as it ensures that those who put in real work are properly accredited.&lt;/p&gt;



&lt;h3 id=&#34;locking-in-a-project-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#locking-in-a-project-&#34;&gt;Locking in a project üîí&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The night before the course started, I reached out to Scott to ensure he had everything he needed in terms of graphics and to let him know that I was available for further support if required. During our conversation, I mentioned the idea of a verification link and server, which led to my proposing it as a project. His response was, &amp;ldquo;possibly.&amp;rdquo; The next day, while teaching, Scott announced that a student would be creating a verification server for the certificates, so I guess the project is green-lit! ü§£&lt;/p&gt;



&lt;h3 id=&#34;preface-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#preface-&#34;&gt;Preface ü§®&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I‚Äôd like to preface this by stating that I have limited programming experience. This project is beyond my current understanding, and I‚Äôll need to break everything down into bite-sized pieces to fully grasp it. So, follow me on my journey to creating a verification server.&lt;/p&gt;



&lt;h3 id=&#34;outline-of-the-project-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#outline-of-the-project-&#34;&gt;Outline of the Project üß≠&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The project involves creating a system that, when given a unique ID, returns information matching what is written on the certificate. For each certificate issued, we need to generate a unique ID and link that directs to the corresponding credentials.&lt;/p&gt;



&lt;h3 id=&#34;my-initial-simple-planoutline&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#my-initial-simple-planoutline&#34;&gt;My initial simple plan/outline&lt;/a&gt;
&lt;/h3&gt;



&lt;h3 id=&#34;1-creating-the-data&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#1-creating-the-data&#34;&gt;1. Creating the data&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Intake the first name, last name and date to create a unique hash.&lt;/p&gt;



&lt;h3 id=&#34;2-storing-the-data&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#2-storing-the-data&#34;&gt;2. Storing the data&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;this info is then added to columns in a database.&lt;/p&gt;



&lt;h3 id=&#34;3-retrieving-the-data&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#3-retrieving-the-data&#34;&gt;3. Retrieving the data&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;With the use of an API and Web Interface, we can use the hash to prompt for more data.&lt;/p&gt;



&lt;h3 id=&#34;initial-tech-stack-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#initial-tech-stack-&#34;&gt;Initial Tech Stack ü§î&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Data Generation: GO
Database: SQLight
Interface: HTML, CSS, JS&lt;/p&gt;



&lt;h3 id=&#34;next-steps-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#next-steps-&#34;&gt;Next Steps&amp;hellip; ü•æ&lt;/a&gt;
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;I plan on discussing this in the Code Cove group in ProLUG&lt;/li&gt;
&lt;li&gt;I plan on researching how LPI has created their verification server&lt;/li&gt;
&lt;li&gt;I plan on creating comprehensive build notes in LogSeq/here&lt;/li&gt;
&lt;/ol&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/paccp1/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProLUG Admin Course Unit 1 üêß</title>
      <link>http://localhost:1313/techblog/post/pacu1/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pacu1/</guid>
      <description>&lt;h1 id=&#34;command-line-interface-primer-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#command-line-interface-primer-&#34;&gt;Command Line Interface Primer üë®üèª‚Äçüè´&lt;/a&gt;
&lt;/h1&gt;



&lt;h2 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Well the ProLUG course is a go. We had a great meeting yesterday with a group of over 80 people. There was a slight snafu regarding thread size limits, so mid lesson we jumped into a presenter room. The session ran for a solid two hours wherein Scott went over command line interface essentials, networking essentials, VIM, pathing, redirects, Xargs, man pages and more. Although I have decent foundational knowledge of Linux, I know that there is always something to learn or better understand. I came away from this first class with a handful of things to review and practice for sure.&lt;/p&gt;



&lt;h3 id=&#34;prompts-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#prompts-&#34;&gt;prompts ü¶Æ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Group discussions have kicked off early in #ProLUG-Projects. Scott has prompted us with a few questions for Unit 1 that we are to post and discuss. I thought it would be good to post these answers in a longer form on my blog. This acts as a review of yesterdays work and gives me a chance to further reflect.&lt;/p&gt;



&lt;h3 id=&#34;discussion-post-1-technical-skill-assessment-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#discussion-post-1-technical-skill-assessment-&#34;&gt;Discussion Post 1: Technical Skill Assessment üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Using this rubric, we are to self-assess our skills in various areas with a score from 1-10, giving us a total score at the end. My score was 48 out of a potential 110. I would never rate myself above a 7, as that feels like Demi-God territory!&lt;/p&gt;
&lt;p&gt;Given the pace we started at in the first class, I‚Äôm confident that my skills will improve throughout this course. I plan to really go for it and challenge myself along the way.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Skill&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;High (8-10)&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Mid (4-7)&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Low (0-3)&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Networking&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Automation&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Cloud&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;48&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;



&lt;h3 id=&#34;what-do-i-hope-to-learn-in-this-course-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#what-do-i-hope-to-learn-in-this-course-&#34;&gt;What do I hope to learn in this course? ü§î&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I aim to gain hands-on experience in all aspects of system administration. While I have studied Linux and system administration, I understand that skill levels in this field can vary widely. As I work toward becoming a Systems Engineer, I recognize the importance of consistently challenging myself. Through this journey, I hope to build confidence in managing existing systems, configuring services, securing environments, and automating tasks.&lt;/p&gt;



&lt;h3 id=&#34;what-type-of-career-are-you-looking-for-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#what-type-of-career-are-you-looking-for-&#34;&gt;What type of career are you looking for? ü•ï&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I am looking to become a full time Linux System Engineer. I am currently in an administrative support role wherein I am tasked with setting up new systems on a small scale. I would like to be able to manage a large number of servers with automation.&lt;/p&gt;



&lt;h3 id=&#34;discussion-post-2-target-job-and-skills-gap-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#discussion-post-2-target-job-and-skills-gap-&#34;&gt;Discussion Post 2: Target Job and Skills Gap üéØ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Our second task is to look for a job we would like to target and list the requirements posted for that given job.&lt;br&gt;
I found this job posted by &lt;strong&gt;OERP Canada&lt;/strong&gt;, located in Toronto, Ontario, with the following information.&lt;/p&gt;
&lt;hr&gt;



&lt;h3 id=&#34;job-overview&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#job-overview&#34;&gt;Job Overview&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The role will be 100% remote for now (#socialdistancing). Eventually, it will convert into an onsite role in Toronto, ON. We are only accepting applications from residents of Canada.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OERP Canada&lt;/strong&gt; is looking for a full-time, experienced &lt;strong&gt;LINUX System Administrator&lt;/strong&gt; to help maintain our operations and support our Odoo application deployment team, which deploys the Odoo Business Application suite for our clients. The successful candidate will have a technical background in &lt;strong&gt;LINUX&lt;/strong&gt;, experience with hosting, web and proxy servers, database administration, mail routing, network security, strong communication skills, and the willingness and ability to think creatively and flexibly. A desire to learn is an important requirement of being part of our team.&lt;/p&gt;
&lt;p&gt;This position is both creative and rigorous by nature‚Äîyou need to think outside the box. We expect the candidate to be proactive and have a &amp;ldquo;get it done&amp;rdquo; spirit.&lt;/p&gt;



&lt;h3 id=&#34;responsibilities&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#responsibilities&#34;&gt;Responsibilities&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Manage cloud and on-premise hosting environments&lt;/li&gt;
&lt;li&gt;Endless security improvements&lt;/li&gt;
&lt;li&gt;Improve automation tools&lt;/li&gt;
&lt;li&gt;Improve scripting&lt;/li&gt;
&lt;li&gt;Provide technical support as needed&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;must-have-skills&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#must-have-skills&#34;&gt;Must-Have Skills&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu / Debian server&lt;/li&gt;
&lt;li&gt;NGINX&lt;/li&gt;
&lt;li&gt;Security best practices: Firewalls &amp;amp; WAF&lt;/li&gt;
&lt;li&gt;Automation tools and server scripting&lt;/li&gt;
&lt;li&gt;Functional knowledge of networking: VPNs, DNS, mail routing and delivery, etc.&lt;/li&gt;
&lt;li&gt;University degree or 3-5 years of work experience&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;nice-to-have-skills&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#nice-to-have-skills&#34;&gt;Nice-to-Have Skills&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL high availability, load balancing, and replication&lt;/li&gt;
&lt;li&gt;Virtualization: VMware, vSphere, KVM&lt;/li&gt;
&lt;li&gt;VCS/Git working knowledge&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;



&lt;h3 id=&#34;what-i-am-currently-able-to-do-in-this-position-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#what-i-am-currently-able-to-do-in-this-position-&#34;&gt;What I am currently able to do in this position üí™üèª&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Solid experience with Debian/Ubuntu&lt;/li&gt;
&lt;li&gt;Confident in managing both cloud and on-premise hosting environments&lt;/li&gt;
&lt;li&gt;Skilled in improving automation through the use of Ansible, Terraform, and Bash scripting&lt;/li&gt;
&lt;li&gt;While I may not have 3-5 years of continuous working experience, I have been involved in IT work on and off&lt;/li&gt;
&lt;li&gt;Experienced in setting up and managing PostgreSQL&lt;/li&gt;
&lt;li&gt;Proficient with Oracle VirtualBox and Proxmox, which I believe translates well to VMware, vSphere, and KVM&lt;/li&gt;
&lt;li&gt;Knowledgeable in Git, including branch management and command-line usage&lt;/li&gt;
&lt;li&gt;Familiar with FreeBSD and BSD-specific commands&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;what-i-am-currently-incapable-of-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#what-i-am-currently-incapable-of-&#34;&gt;What I am currently incapable of üòì&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lack confidence in managing firewalls&lt;/li&gt;
&lt;li&gt;Limited experience with VPNs, DNS, and mail handling&lt;/li&gt;
&lt;li&gt;Basic hands-on experience with NGINX, but skills are limited&lt;/li&gt;
&lt;li&gt;Minimal technical support experience&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;how-i-plan-to-close-the-gap-on-these-missing-skills-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#how-i-plan-to-close-the-gap-on-these-missing-skills-&#34;&gt;How I plan to close the gap on these missing skills üéØ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I plan to close this gap by learning more about general Linux security and networking principles from this course. Additionally, I&amp;rsquo;ve already purchased a recently published book by Michael Lucas on running and maintaining mail servers, which I intend to skim through. Additionally, I am studying ITIL to improve my understanding of technical support and service management.&lt;/p&gt;



&lt;h3 id=&#34;prolug-links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pacu1/#prolug-links-&#34;&gt;ProLUG Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actually completing VimTutor</title>
      <link>http://localhost:1313/techblog/post/vt/</link>
      <pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/vt/</guid>
      <description>&lt;h3 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Vim is a program created by the late Bram Moolenaar as an improvement to an older program called Vi. It is a modal text editor, meaning there are different modes of usage ‚Äî I&amp;rsquo;ll get into that later. While strongly associated with UNIX systems, Vim is available on other platforms as well. It is used to efficiently create and modify files from a simple terminal, requiring very limited system resources. Vim is a foundational tool for mastering Linux, allowing one to navigate the directory structure and edit configuration files like no other. Furthermore, Vi and/or Vim come bundled with most minimal Linux distributions.&lt;/p&gt;



&lt;h3 id=&#34;vim-tutor&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#vim-tutor&#34;&gt;Vim Tutor&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Vim Tutor is an in-built interactive tutorial that comes pre-packaged with Vim, designed to bring novices up to speed with the various modes and functions of this nimble tool. I had hopped into Vim Tutor before but never felt the need to complete it, as it seemed long and complex. Recently, my teacher and mentor Scott C. mentioned that this would be one of the first lessons we would undertake as part of the ProLUG system administration course. Being a dedicated student, I decided to give it my full attention ‚Äî and I‚Äôm glad I did.&lt;/p&gt;



&lt;h3 id=&#34;the-halfway-point&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#the-halfway-point&#34;&gt;The Halfway Point&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;In previous attempts, I had reached the halfway point and felt confident I had gained enough information to edit files. Some functions are unintuitive at first, like using the &lt;code&gt;hjkl&lt;/code&gt; keys for navigation instead of arrow keys. There are many jokes about the overload people feel when they first encounter Vim&amp;rsquo;s conventions. Jokes like never being able to exit the program or forgetting one&amp;rsquo;s own name after memorizing commands are common. Mastering Vim requires memorizing commands until they become second nature, which simply takes time. This is why I hadn&amp;rsquo;t completed Vim Tutor before ‚Äî there‚Äôs only so much one can absorb before needing a break. However, this time, I was able to make it through to the end, pleasantly surprised by the new techniques I had learned.&lt;/p&gt;



&lt;h3 id=&#34;understanding-the-modes&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#understanding-the-modes&#34;&gt;Understanding the Modes&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Modes are what make Vim a powerful tool. There are three modes in Vim: Normal, Insert, and Visual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Normal mode&lt;/strong&gt; is the default mode, where you navigate a document using motions. It protects the document from accidental modifications and allows for a broader range of single-key commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Insert mode&lt;/strong&gt; is where characters or strings are added ‚Äî fairly self-explanatory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Visual mode&lt;/strong&gt; allows you to make selections, much like clicking and dragging with a mouse to highlight text.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although I had known about these modes, it once seemed improbable that I would ever memorize them well enough to use them reflexively. However, with practice, I have done just that. Combining motions and commands can lead to huge efficiency gains. For example, you can navigate to a specific line, delete the first three letters, and paste something at the end of the line with just a few keystrokes.&lt;/p&gt;



&lt;h3 id=&#34;what-i-recently-picked-up&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#what-i-recently-picked-up&#34;&gt;What I Recently Picked Up&lt;/a&gt;
&lt;/h3&gt;



&lt;h4 id=&#34;stringing-commands&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#stringing-commands&#34;&gt;Stringing Commands&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;What did I actually learn that I will immediately employ? Well, I now have a solid grasp of most single-key commands, so I‚Äôll start stringing commands and motions together, such as deleting three words and appending text to the end of a line.&lt;/p&gt;



&lt;h4 id=&#34;global-search-and-replace&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#global-search-and-replace&#34;&gt;Global Search and Replace&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Additionally, I had known about global search and replace, but I hadn‚Äôt really used it before since it‚Äôs only useful for certain file types.&lt;/p&gt;



&lt;h4 id=&#34;buffers-and-deleted-lines&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#buffers-and-deleted-lines&#34;&gt;Buffers and Deleted Lines&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;I also learned that Vim‚Äôs buffer, much like a clipboard, stores strings for later use ‚Äî and deleted lines are stored there as well. I‚Äôll be more mindful of using the buffer going forward.&lt;/p&gt;



&lt;h4 id=&#34;running-shell-commands&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#running-shell-commands&#34;&gt;Running Shell Commands&lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Lastly, running shell commands from within Vim seemed inefficient to me before, since I could easily jump in and out of files. However, I now understand that it can speed things up.&lt;/p&gt;



&lt;h3 id=&#34;in-summary&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vt/#in-summary&#34;&gt;In Summary&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Vim isn‚Äôt something you just pick up on a whim. It‚Äôs more like a martial art, where you practice movements until they become second nature. In a world dominated by graphical user interfaces, Vim can seem like a waste of time and effort. Yet, when you‚Äôre working under the hood of an operating system, especially on bare-bones UNIX servers, it becomes clear that if everything is a file and many configurations must be made, Vim is the right tool for the job.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New WebDev framework</title>
      <link>http://localhost:1313/techblog/post/vue/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/vue/</guid>
      <description>


&lt;h3 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I frequent a Discord group called ProLUG (Professional Linux User Group). The group is organized around cooperative, project-based learning, led by experienced members. One of these groups, called Coding Cove, is led by Ryan Long (SaltyCatfish). Ryan is a very experienced and senior developer who introduces us to new concepts on a weekly basis.&lt;/p&gt;



&lt;h3 id=&#34;vue&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#vue&#34;&gt;Vue&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This past weekend, Ryan introduced Vue.js and the ideas behind the framework. We spent over an hour discussing and interacting with Vue, and I came away from the meeting excited to learn more and start building projects.&lt;/p&gt;



&lt;h3 id=&#34;why-vue-is-exciting&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#why-vue-is-exciting&#34;&gt;Why Vue is Exciting&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;What I really liked about Vue is the concept of templates and components. These ideas seemed logical from the start. Templates can be created and reused on multiple pages, while components provide modularity. Together, these features result in a very clean and easy-to-read codebase, especially for larger projects.&lt;/p&gt;



&lt;h3 id=&#34;what-i-was-using&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#what-i-was-using&#34;&gt;What I Was Using&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Prior to learning about Vue, I had completed a few projects using HTML, Tailwind CSS, and React. While I‚Äôm a big fan of Go (for reasons I won‚Äôt get into here), I found React to be cumbersome. React often creates messy code, especially when combined with Tailwind.&lt;/p&gt;



&lt;h3 id=&#34;go--vue&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#go--vue&#34;&gt;Go + Vue?&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;After the meeting, I felt inspired to explore combining the power of Go with Vue. I started searching for examples, and it‚Äôs definitely doable for simple or small projects. However, when I looked at more advanced projects, the situation became complicated. Gluing a Go backend to a Vue frontend felt relatively simple at first, but when you introduce middleware, SSR/CSR, OAuth2, and more, things quickly become complex.&lt;/p&gt;



&lt;h3 id=&#34;then-i-found-nuxt&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#then-i-found-nuxt&#34;&gt;Then I Found Nuxt&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Nuxt is a &amp;ldquo;batteries-included&amp;rdquo; framework built on top of Vue. It comes with all the modern build tools and services needed for a professional project, and everything ties together elegantly.&lt;/p&gt;



&lt;h3 id=&#34;where-i-am-now&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/vue/#where-i-am-now&#34;&gt;Where I Am Now&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I‚Äôve done a deep dive into Nuxt, and it feels very comfortable to work with. After purchasing a course on Udemy, I‚Äôve completed a few simple projects and intend to build a mid-level project soon. With Vue‚Äôs templating and components, along with Tailwind‚Äôs efficiency, I‚Äôm confident I can create a functional and aesthetically pleasing project that runs efficiently across different systems.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>ProLUG Admin Course üêß</title>
      <link>http://localhost:1313/techblog/post/pac/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/pac/</guid>
      <description>&lt;h3 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pac/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I am a member of a fantastic group called the Professional Linux User Group lead by Scott Champine. The home base is on Discord where over 2000 people discuss Linux daily.
Scott and other members teach via Live-Streaming and Interactive Labs with supporting documentation. Scott has created a 16 week deep dive course into linux adminstration starting September 14th that I have gladly enrolled in.
This course will take place every Saturday via a livestream with interactive Q/A wherein participants leave with assignments. This blog is in part, related to the course as I will document my learning among other things.&lt;/p&gt;



&lt;h3 id=&#34;links-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/pac/#links-&#34;&gt;Links ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Discord: &lt;a href=&#34;https://discord.com/invite/m6VPPD9usw&#34;&gt;https://discord.com/invite/m6VPPD9usw&lt;/a&gt;
Youtube: &lt;a href=&#34;https://www.youtube.com/@het_tanis8213&#34;&gt;https://www.youtube.com/@het_tanis8213&lt;/a&gt;
Twitch: &lt;a href=&#34;https://www.twitch.tv/het_tanis&#34;&gt;https://www.twitch.tv/het_tanis&lt;/a&gt;
ProLUG Book: &lt;a href=&#34;https://leanpub.com/theprolugbigbookoflabs&#34;&gt;https://leanpub.com/theprolugbigbookoflabs&lt;/a&gt;
KillerCoda: &lt;a href=&#34;https://killercoda.com/het-tanis&#34;&gt;https://killercoda.com/het-tanis&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>That Unix file is not deleted üë∫</title>
      <link>http://localhost:1313/techblog/post/nd/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/nd/</guid>
      <description>&lt;p&gt;Removing a file in Unix does not actually remove it from memory. You are only reducing the number of Hard-Links pointing to the file to &amp;lsquo;0&amp;rsquo;.
In order to actually delete the information is to overwrite it. This will happen over time as the disk fills, or if one would like to delete a file in a timely fashion should over write empty drive sectors.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Studying for the LPIC1 Certification üìñ</title>
      <link>http://localhost:1313/techblog/post/lpic/</link>
      <pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/lpic/</guid>
      <description>&lt;h3 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/lpic/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I am intent on becoming a Linux Professional Institute Certified Administrator. It has been a goal of mine for a little while now. However goals are just aspirational, reaching a goal such as this requires a structured, systematic approach. As a life-long learner, I am always improving my study methods by being more efficient with my time and energy. As we all know life can get in the way of our goals, so we must find methods that work when conditions are not ideal for studying. For instance, I brake up my study sessions into smaller, more bite sized chunks that I can do when time permits. I take much more comprehensive notes than I did in the past and I work on wrought memorization through the use of flash cards; something that I really wasn&amp;rsquo;t into before.&lt;/p&gt;



&lt;h3 id=&#34;creating-a-work-breakdown-structure&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/lpic/#creating-a-work-breakdown-structure&#34;&gt;Creating a Work Breakdown Structure&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The first thing I do when starting to study a new topic is creating a simple structure from a high level view. A handful of bullet points can simply outline the structure of the knowledge. In regards to the LPIC, most of this had already been done as the curriculum for the exam is open source.&lt;/p&gt;



&lt;h3 id=&#34;hands-on-practice&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/lpic/#hands-on-practice&#34;&gt;Hands on practice&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;For each item that the course cover, I set up a lab and run through all of the commands by actually typing them in and seeing what kind of errors or typos I may run into. The LPIC has a huge list of commands that we must remember which makes it very difficult for me.&lt;/p&gt;



&lt;h3 id=&#34;taking-comprehensive-notes&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/lpic/#taking-comprehensive-notes&#34;&gt;Taking comprehensive notes&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I recently started using LogSeq, a markdown ++ notetaking applicaton that allows for interlinking of notes. This has really upped my game when it comes to keeping track of notes and refering back to them. In the past, I would just take notes for the task at hand, not really refering back to them often. I was just taking notes as a memory retention aid.&lt;/p&gt;



&lt;h3 id=&#34;flash-cards&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/lpic/#flash-cards&#34;&gt;Flash Cards&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Another recent addition to my study arsenal is Anki, a smart flashcard application that I use for wrought memorization. The application and many flash card decks are open source, so I was up and running in a short period of time with a large deck of LPIC flashcards.&lt;/p&gt;



&lt;h3 id=&#34;udemy--youtube&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/lpic/#udemy--youtube&#34;&gt;Udemy / Youtube&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Though video courses are pretty low bandwidth information sources, I still like to follow chapterized courses, especially on Udemy. On a sale day I can grab a comprehensive chapterised video course for less than 20 Dollars, a steal in comparison to a college course.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxMox for the win üèÜ</title>
      <link>http://localhost:1313/techblog/post/proxmox/</link>
      <pubDate>Mon, 26 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/proxmox/</guid>
      <description>&lt;h3 id=&#34;intro-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/proxmox/#intro-&#34;&gt;Intro üëã&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Proxmox is a free, open-source virtualization host built on top of Debian. It can run both virtual machines (VMs) and Linux containers, offering a wide array of features. üöÄ&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m always learning new systems and software. Before using Proxmox, I was repeatedly installing and reinstalling Unix systems on an old laptop. This helped me understand installation, configuration, and a host of other things‚Äîbut it was very tedious and inefficient. That laptop was underpowered, so running multiple VMs was out of the question. I needed a multicore x86 machine with ample memory to achieve this.&lt;/p&gt;
&lt;p&gt;Wanting to take my systems engineering learning more seriously, I decided to build an x86 machine dedicated to learning without the fear of messing things up. While researching virtualization software, I discovered Proxmox.&lt;/p&gt;



&lt;h3 id=&#34;installation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/proxmox/#installation-&#34;&gt;Installation üõ†Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Installing Proxmox is straightforward, especially for someone who has installed many major distros on bare-metal systems. The process involves downloading the latest ISO, creating a boot disk using Balena Etcher, and then following a series of prompts, choosing the target disk and locale‚Äîjust like a typical Debian installation.&lt;/p&gt;



&lt;h3 id=&#34;accessing-proxmox-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/proxmox/#accessing-proxmox-&#34;&gt;Accessing Proxmox üåê&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Once installed, Proxmox operates as a headless network machine. If you plug in a monitor, you&amp;rsquo;ll only see a black screen showing the host address‚Äînothing more. The way to interact with Proxmox is through a browser on a device connected to the same local network.&lt;/p&gt;
&lt;p&gt;For example, I open a browser on my MacBook, navigate to the host&amp;rsquo;s IP address, and am greeted by the login screen. You would have set up your username and password during installation, so just log in from there. üëç&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Proxmox/pctower1.png&#34; alt=&#34;PC Tower&#34;&gt;&lt;/p&gt;



&lt;h3 id=&#34;the-dashboard-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/proxmox/#the-dashboard-&#34;&gt;The Dashboard üìä&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Proxmox provides an easy-to-use dashboard that shows system load and memory usage at a glance. Creating a virtual machine is as simple as clicking &amp;ldquo;Create New VM&amp;rdquo; and uploading a suitable ISO. The real learning comes when you automate the process and manage multiple machines.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://trevorsmale.github.io/techblog/images/Proxmox/proxdash.png&#34; alt=&#34;Proxmox Dashboard&#34;&gt;&lt;/p&gt;



&lt;h3 id=&#34;learning-platform-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/proxmox/#learning-platform-&#34;&gt;Learning Platform üéì&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Proxmox gives you the freedom to create, break, and destroy VMs‚Äîallowing you to learn new things without sweating the small stuff. Through it, I&amp;rsquo;ve gained a wealth of systems engineering knowledge by completing small projects outside of work.&lt;/p&gt;
&lt;p&gt;I like to create machine templates that can be reused for automated provisioning using tools like Ansible and Terraform. This simulates setting up clusters of machines that need to be pre-configured and communicate with each other.&lt;/p&gt;
&lt;p&gt;I also create Cloud-Init images in Qcow2 format to build templates with randomized SSH keys and uninitialized hostnames, much like how Azure, AWS, or Google Cloud sets up Platform-as-a-Service (PaaS) environments.&lt;/p&gt;
&lt;p&gt;Through Proxmox, I&amp;rsquo;ve gone through installation and configuration procedures for large, complex systems like Kubernetes. This allows me to gain valuable experience with these cumbersome tools before working on similar setups in production environments. üñ•Ô∏è&lt;/p&gt;



&lt;h3 id=&#34;in-summary-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/proxmox/#in-summary-&#34;&gt;In Summary üìù&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re serious about learning systems engineering and working with multiple machines, I highly recommend setting up a Proxmox machine. Even an older PC can suffice, although some limitations may apply‚Äîbut that&amp;rsquo;s part of the research and learning process! üòÑ&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux File Systems Overview üíæ</title>
      <link>http://localhost:1313/techblog/post/fs/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/fs/</guid>
      <description>


&lt;h2 id=&#34;1-ext4--linux-bsd&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#1-ext4--linux-bsd&#34;&gt;1. ext4 üíæ (Linux, BSD)&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ext4&lt;/strong&gt; (Extended File System version 4) is the default file system for many Linux distributions.&lt;/p&gt;



&lt;h3 id=&#34;links&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#links&#34;&gt;Links&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Ext4&#34;&gt;https://en.wikipedia.org/wiki/Ext4&lt;/a&gt;
&lt;a href=&#34;https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/storage_administration_guide/ch-ext4#ch-ext4&#34;&gt;https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/storage_administration_guide/ch-ext4#ch-ext4&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;technical-features-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-features-&#34;&gt;Technical Features: üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Journaling&lt;/li&gt;
&lt;li&gt;Extent-Based Allocation&lt;/li&gt;
&lt;li&gt;Delayed Allocation&lt;/li&gt;
&lt;li&gt;Persistent Pre-allocation&lt;/li&gt;
&lt;li&gt;Multi-block Allocation&lt;/li&gt;
&lt;li&gt;Online Resizing&lt;/li&gt;
&lt;li&gt;64-bit File System Support&lt;/li&gt;
&lt;li&gt;Directory Indexing with HTree&lt;/li&gt;
&lt;li&gt;Defragmentation&lt;/li&gt;
&lt;li&gt;Backward Compatibility with ext2/ext3&lt;/li&gt;
&lt;li&gt;Barriers for Data Integrity&lt;/li&gt;
&lt;li&gt;Large File Support (up to 16 TiB)&lt;/li&gt;
&lt;li&gt;Metadata Checksumming (optional)&lt;/li&gt;
&lt;li&gt;Quotas&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;advantages-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#advantages-&#34;&gt;Advantages üëç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mature and Stable&lt;/strong&gt;: ext4 is a well-tested and widely-used file system with a long history of stability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: It offers good performance for most workloads, especially for general-purpose usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backward Compatibility&lt;/strong&gt;: Supports ext3 and ext2 file systems, making it easy to upgrade.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Journaling&lt;/strong&gt;: Provides a journaling feature that helps to prevent data corruption in case of a crash.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wide Support&lt;/strong&gt;: Supported by almost all Linux distributions and has a large community.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;downsides-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#downsides-&#34;&gt;Downsides üëé&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Limited Scalability&lt;/strong&gt;: While adequate for most users, ext4 doesn&amp;rsquo;t scale as well as newer file systems for very large volumes and large numbers of files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lack of Advanced Features&lt;/strong&gt;: ext4 lacks features like snapshotting and built-in data integrity checks (e.g., checksums).&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;scale&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#scale&#34;&gt;Scale&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maximum File Size&lt;/strong&gt;: 16 TiB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maximum Volume Size&lt;/strong&gt;: 1 EiB&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;distro-usage&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#distro-usage&#34;&gt;Distro Usage&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ext4 is the most widely used format spanning Linux and BSD.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;2-xfs--linux-bsd&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#2-xfs--linux-bsd&#34;&gt;2. XFS üíæ (Linux, BSD)&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;intro-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#intro-1&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;XFS&lt;/strong&gt; is a high-performance file system designed for parallel I/O operations, often used in enterprise environments.&lt;/p&gt;



&lt;h3 id=&#34;links-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#links-1&#34;&gt;Links&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XFS&#34;&gt;https://en.wikipedia.org/wiki/XFS&lt;/a&gt;
&lt;a href=&#34;https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/7/html/storage_administration_guide/ch-xfs&#34;&gt;https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/7/html/storage_administration_guide/ch-xfs&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;technical-features--1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-features--1&#34;&gt;Technical Features: üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Extent-Based Allocation&lt;/li&gt;
&lt;li&gt;Journaling (Metadata Journaling)&lt;/li&gt;
&lt;li&gt;Delayed Allocation&lt;/li&gt;
&lt;li&gt;Persistent Pre-allocation&lt;/li&gt;
&lt;li&gt;Online Resizing (grow only)&lt;/li&gt;
&lt;li&gt;Dynamic Inode Allocation&lt;/li&gt;
&lt;li&gt;B+ Tree Directory Structure - (Quick Access B Tree)&lt;/li&gt;
&lt;li&gt;Direct I/O Support&lt;/li&gt;
&lt;li&gt;Data Striping for Performance&lt;/li&gt;
&lt;li&gt;Advanced Metadata Management&lt;/li&gt;
&lt;li&gt;Large File and Volume Support (up to 8 EiB)&lt;/li&gt;
&lt;li&gt;Online Defragmentation&lt;/li&gt;
&lt;li&gt;Quotas and Project Quotas&lt;/li&gt;
&lt;li&gt;Realtime Subvolume for Real-Time I/O&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;advantages--1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#advantages--1&#34;&gt;Advantages üëç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt;: Optimized for large files and supports high-performance parallel I/O, making it ideal for environments with large data sets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Scales well with large volumes and large numbers of files, supporting file systems up to 500 TB.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Journaling&lt;/strong&gt;: Uses journaling to help prevent data corruption.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Online Resizing&lt;/strong&gt;: Supports online resizing of file systems (only grow).&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;downsides--1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#downsides--1&#34;&gt;Downsides üëé&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Complexity&lt;/strong&gt;: XFS is more complex to manage compared to ext4.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Limited Snapshot Support&lt;/strong&gt;: Has limited support for snapshots compared to Btrfs and OpenZFS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Potential Data Loss on Power Failure&lt;/strong&gt;: In certain configurations, XFS may be more susceptible to data loss in the event of a sudden power loss.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;technical-details-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-details-&#34;&gt;Technical Details üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maximum File Size&lt;/strong&gt;: 8 EiB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maximum Volume Size&lt;/strong&gt;: 8 EiB&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;distro-usage-1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#distro-usage-1&#34;&gt;Distro Usage&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;XFS has been in the Linux Kernel since 2001
It is the default file system for RHEL&lt;/p&gt;



&lt;h2 id=&#34;3-btrfs--linux&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#3-btrfs--linux&#34;&gt;3. Btrfs üíæ (Linux)&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;intro-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#intro-2&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Btrfs (B-tree File System) is a modern, copy-on-write file system designed for Linux that offers advanced features like snapshots, RAID support, self-healing, and efficient storage management, making it suitable for scalable and reliable data storage.&lt;/p&gt;



&lt;h3 id=&#34;links-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#links-2&#34;&gt;Links&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Btrfs&#34;&gt;https://en.wikipedia.org/wiki/Btrfs&lt;/a&gt;
&lt;a href=&#34;https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/storage_administration_guide/ch-btrfs&#34;&gt;https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/storage_administration_guide/ch-btrfs&lt;/a&gt;
&lt;a href=&#34;https://docs.kernel.org/filesystems/btrfs.html&#34;&gt;https://docs.kernel.org/filesystems/btrfs.html&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;technical-features--2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-features--2&#34;&gt;Technical Features: üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Journaling&lt;/li&gt;
&lt;li&gt;Extent Base Allocation&lt;/li&gt;
&lt;li&gt;Persistent Pre-allocation&lt;/li&gt;
&lt;li&gt;Delayed Allocation&lt;/li&gt;
&lt;li&gt;Multi-block Allocation&lt;/li&gt;
&lt;li&gt;Stripe-aware Allocation&lt;/li&gt;
&lt;li&gt;Resizeable with resize2fs&lt;/li&gt;
&lt;li&gt;*B-tree Balancing Algorithm - Different from XFS (COW B Tee)&lt;/li&gt;
&lt;li&gt;Copy-on-Write (COW)&lt;/li&gt;
&lt;li&gt;Snapshots and Clones&lt;/li&gt;
&lt;li&gt;Built-in RAID Support&lt;/li&gt;
&lt;li&gt;Data and Metadata Checksumming&lt;/li&gt;
&lt;li&gt;Self-Healing&lt;/li&gt;
&lt;li&gt;Dynamic Subvolumes&lt;/li&gt;
&lt;li&gt;Online Resizing&lt;/li&gt;
&lt;li&gt;Compression (LZO. ZLIB. ZSTD)&lt;/li&gt;
&lt;li&gt;Deduplication&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;advantages--2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#advantages--2&#34;&gt;Advantages üëç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Snapshot Support&lt;/strong&gt;: Provides built-in support for snapshots, allowing for quick backups and rollbacks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Integrity&lt;/strong&gt;: Includes checksumming of data and metadata, which helps to ensure data integrity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-Healing&lt;/strong&gt;: With RAID support, Btrfs can automatically repair corrupted data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Storage&lt;/strong&gt;: Allows for the dynamic addition and removal of storage devices.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;downsides--2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#downsides--2&#34;&gt;Downsides üëé&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;: Btrfs is considered less mature than ext4 or XFS, particularly for certain features like RAID 5/6.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: May not perform as well as XFS or ext4 in certain high-performance scenarios, particularly with heavy random writes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complexity&lt;/strong&gt;: The advanced features of Btrfs come with increased complexity.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;technical-details--1&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-details--1&#34;&gt;Technical Details üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maximum File Size&lt;/strong&gt;: 16 EiB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maximum Volume Size&lt;/strong&gt;: 16 EiB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Better on SSDs&lt;/strong&gt;: Btrfs is well-suited for flash/solid-state storage because of TRIM support and CoW, which reduces write amplification.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;distro-usage-2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#distro-usage-2&#34;&gt;Distro Usage&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Btrfs has been in the mainline linux Kernel since 2008
it is the default file system for SUSE and Fedora&lt;/p&gt;



&lt;h2 id=&#34;4-openzfs--unix&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#4-openzfs--unix&#34;&gt;4. OpenZFS üíæ (Unix)&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;intro-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#intro-3&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;OpenZFS&lt;/strong&gt; is an advanced file system and volume manager that originated from Sun Microsystems&amp;rsquo; ZFS and is now maintained by the OpenZFS project.&lt;/p&gt;



&lt;h3 id=&#34;links-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#links-3&#34;&gt;Links&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/OpenZFS&#34;&gt;https://en.wikipedia.org/wiki/OpenZFS&lt;/a&gt;
&lt;a href=&#34;https://openzfs.org/wiki/Main_Page&#34;&gt;https://openzfs.org/wiki/Main_Page&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;technical-features--3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-features--3&#34;&gt;Technical Features: üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Copy-on-Write (COW)&lt;/li&gt;
&lt;li&gt;Snapshots and Clones&lt;/li&gt;
&lt;li&gt;Pooled Storage (ZFS Storage Pools)&lt;/li&gt;
&lt;li&gt;Dynamic Striping&lt;/li&gt;
&lt;li&gt;Built-in RAID Support (RAID-Z1, RAID-Z2, RAID-Z3)&lt;/li&gt;
&lt;li&gt;Data and Metadata Checksumming&lt;/li&gt;
&lt;li&gt;Self-Healing&lt;/li&gt;
&lt;li&gt;Deduplication&lt;/li&gt;
&lt;li&gt;Compression (LZ4, GZIP, ZLE, etc.)&lt;/li&gt;
&lt;li&gt;Online Resizing&lt;/li&gt;
&lt;li&gt;Dynamic Block Size&lt;/li&gt;
&lt;li&gt;End-to-End Data Integrity&lt;/li&gt;
&lt;li&gt;ZFS Datasets (File Systems and Volumes)&lt;/li&gt;
&lt;li&gt;Adaptive Replacement Cache (ARC)&lt;/li&gt;
&lt;li&gt;Transparent Data Encryption&lt;/li&gt;
&lt;li&gt;ZFS Send/Receive for Backup and Replication&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;advantages--3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#advantages--3&#34;&gt;Advantages üëç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data Integrity&lt;/strong&gt;: Uses end-to-end checksums for all data, ensuring high data integrity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Snapshots and Clones&lt;/strong&gt;: Supports efficient, low-overhead snapshots and clones, useful for backups and development.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RAID-Z Support&lt;/strong&gt;: Offers advanced RAID options (RAID-Z1, RAID-Z2, RAID-Z3), providing redundancy and fault tolerance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt;: Built-in compression can save space and improve performance in certain workloads.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Designed to handle very large data sets and scales well with both size and number of files.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;downsides--3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#downsides--3&#34;&gt;Downsides üëé&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Resource Intensive&lt;/strong&gt;: Can be resource-intensive, particularly in terms of memory usage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complexity&lt;/strong&gt;: The advanced features and flexibility of OpenZFS come with a steep learning curve.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Portability&lt;/strong&gt;: While available on many platforms, it is not as natively supported in Linux as ext4 or XFS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Licensing&lt;/strong&gt;: OpenZFS is licensed under CDDL, which is incompatible with the GPL.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;technical-details--2&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-details--2&#34;&gt;Technical Details üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maximum File Size&lt;/strong&gt;: 16 EiB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maximum Volume Size&lt;/strong&gt;: 256 ZiB (theoretical)&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;distro-usage-3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#distro-usage-3&#34;&gt;Distro Usage&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Open ZFS is &lt;strong&gt;Not&lt;/strong&gt; available in the mainline Linux Kernel. Rather, it is available through a 3rd party module.
Works on Linux, BSD, and Mac&lt;/p&gt;



&lt;h2 id=&#34;hammer2--dragonflybsd&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#hammer2--dragonflybsd&#34;&gt;HAMMER2 üíæ (DragonflyBSD)&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;intro-4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#intro-4&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Hammer2&lt;/strong&gt; is a modern, advanced file system designed for high-performance and scalable storage solutions, particularly in clustered environments. It features robust capabilities such as copy-on-write, data deduplication, and built-in snapshots, providing high data integrity, efficient storage management, and instant crash recovery.&lt;/p&gt;



&lt;h3 id=&#34;links-4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#links-4&#34;&gt;Links&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/HAMMER2&#34;&gt;Wikipedia: HAMMER2&lt;/a&gt;
&lt;a href=&#34;https://www.dragonflybsd.org/hammer/&#34;&gt;DragonFly BSD Hammer2&lt;/a&gt;&lt;/p&gt;



&lt;h3 id=&#34;technical-features--4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-features--4&#34;&gt;Technical Features: üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clustered File System Support&lt;/li&gt;
&lt;li&gt;Snapshot and Cloning Support&lt;/li&gt;
&lt;li&gt;Copy-on-Write (COW)&lt;/li&gt;
&lt;li&gt;Data Deduplication&lt;/li&gt;
&lt;li&gt;Data Compression (LZ4, ZLIB)&lt;/li&gt;
&lt;li&gt;Data and Metadata Checksumming&lt;/li&gt;
&lt;li&gt;Multi-Volume Support&lt;/li&gt;
&lt;li&gt;Instant Crash Recovery&lt;/li&gt;
&lt;li&gt;Fine-Grained Locking (for SMP scalability)&lt;/li&gt;
&lt;li&gt;RAID Support (1, 1+0)&lt;/li&gt;
&lt;li&gt;Thin Provisioning&lt;/li&gt;
&lt;li&gt;Asynchronous Bulk-Freeing&lt;/li&gt;
&lt;li&gt;Large Directory Support&lt;/li&gt;
&lt;li&gt;Built-in Data Integrity and Self-Healing&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;advantages--4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#advantages--4&#34;&gt;Advantages üëç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High Performance&lt;/strong&gt;: Optimized for high-performance and scalable storage solutions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Integrity&lt;/strong&gt;: Incorporates checksumming and self-healing features to maintain data integrity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Efficient Storage Management&lt;/strong&gt;: Offers advanced features like data deduplication and compression to manage storage efficiently.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Designed to handle large volumes of data and support clustered environments.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;downsides--4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#downsides--4&#34;&gt;Downsides üëé&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Complexity&lt;/strong&gt;: The advanced features and configuration options can introduce complexity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maturity&lt;/strong&gt;: As a newer file system, it may have fewer tools and less mature support compared to more established file systems.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Limited Adoption&lt;/strong&gt;: Less commonly used than other file systems, which may affect community support and documentation.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;technical-details--3&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#technical-details--3&#34;&gt;Technical Details üîç&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Maximum File Size&lt;/strong&gt;: Not explicitly defined, but supports very large files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maximum Volume Size&lt;/strong&gt;: Not explicitly defined, but designed for large-scale storage.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;distro-usage-4&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#distro-usage-4&#34;&gt;Distro Usage&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DragonFly BSD&lt;/strong&gt;: The primary platform where Hammer2 is used and supported.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Limited Availability&lt;/strong&gt;: Not available in mainstream Linux distributions; primarily associated with DragonFly BSD.&lt;/li&gt;
&lt;/ul&gt;



&lt;h2 id=&#34;key-concepts--glossary-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#key-concepts--glossary-&#34;&gt;Key Concepts / Glossary üîë&lt;/a&gt;
&lt;/h2&gt;



&lt;h3 id=&#34;snapshots-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#snapshots-&#34;&gt;Snapshots üì∏&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Snapshots&lt;/strong&gt; are read-only copies of a file system at a specific point in time, allowing users to save the state of the file system for backup and recovery purposes. They are efficient and consume minimal space, as only the differences between the current state and the snapshot are stored.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;clones-vs-snapshots-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#clones-vs-snapshots-&#34;&gt;Clones vs. Snapshots üì∏üß¨&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Snapshots&lt;/strong&gt;: Read-only copies of the file system at a specific time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clones&lt;/strong&gt;: Writable copies of snapshots that can be modified independently.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;raid-z-levels-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#raid-z-levels-&#34;&gt;RAID-Z Levels ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RAID-Z1&lt;/strong&gt;: Single parity; can tolerate the loss of one disk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RAID-Z2&lt;/strong&gt;: Double parity; can tolerate the loss of two disks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RAID-Z3&lt;/strong&gt;: Triple parity; can tolerate the loss of three disks.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;raid-5-and-raid-6-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#raid-5-and-raid-6-&#34;&gt;RAID 5 and RAID 6 ‚õìÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RAID 5&lt;/strong&gt;: Stripes data across disks with single parity; can tolerate the loss of one disk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RAID 6&lt;/strong&gt;: Stripes data across disks with double parity; can tolerate the loss of two disks.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3 id=&#34;issues-with-raid-56-in-btrfs&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#issues-with-raid-56-in-btrfs&#34;&gt;Issues with RAID 5/6 in Btrfs&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Btrfs&amp;rsquo;s implementation of RAID 5/6 is considered unstable due to issues like the write hole problem, making it less reliable for production use. Data integrity may be compromised, leading to potential data loss.&lt;/p&gt;



&lt;h3 id=&#34;cddl-license-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#cddl-license-&#34;&gt;CDDL License ü™™&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;Common Development and Distribution License (CDDL)&lt;/strong&gt; is an open-source license created by Sun Microsystems. It is incompatible with the GPL, which can complicate integration with Linux.&lt;/p&gt;



&lt;h3 id=&#34;btrfs-self-healing-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#btrfs-self-healing-&#34;&gt;Btrfs Self-Healing ‚ù§Ô∏è‚Äçü©π&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Self-Healing&lt;/strong&gt; in Btrfs works by verifying data against checksums and repairing any detected corruption using redundant data stored on other disks in a RAID configuration.&lt;/p&gt;



&lt;h3 id=&#34;dynamic-storage-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#dynamic-storage-&#34;&gt;Dynamic Storage üß±&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Storage&lt;/strong&gt; refers to the ability to manage multiple storage devices within a single file system, allowing for on-the-fly addition and removal of devices, with the file system automatically balancing data across them.&lt;/p&gt;



&lt;h3 id=&#34;online-resizing-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#online-resizing-&#34;&gt;Online Resizing üó∫Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Online Resizing&lt;/strong&gt; allows the resizing of a file system while it is mounted and in use. XFS supports growing the file system online, while Btrfs supports both growing and shrinking.&lt;/p&gt;



&lt;h3 id=&#34;b-trees-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#b-trees-&#34;&gt;B-Trees ‚öñÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;B-tree&lt;/strong&gt; is a self-balancing tree data structure that maintains sorted data and allows efficient insertion, deletion, and search operations. B-trees are used in file systems like Btrfs to manage metadata and data blocks.&lt;/p&gt;



&lt;h3 id=&#34;extent-base-allocation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#extent-base-allocation-&#34;&gt;Extent Base Allocation üë†&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;is a method used by modern file systems to manage data storage efficiently. Instead of tracking individual fixed-size blocks, the file system groups contiguous blocks into larger units called extents.&lt;/p&gt;



&lt;h3 id=&#34;persistent-pre-allocation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#persistent-pre-allocation-&#34;&gt;Persistent Pre-allocation üéüÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This technique reserves a specific amount of disk space for a file in advance, ensuring that the allocated space remains available, which helps in reducing fragmentation and guaranteeing storage for large files.&lt;/p&gt;



&lt;h3 id=&#34;delayed-allocation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#delayed-allocation-&#34;&gt;Delayed Allocation ‚è±Ô∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Delayed allocation defers the assignment of specific disk blocks to file data until the data is flushed to disk, optimizing the allocation process and reducing fragmentation by allowing the file system to make better decisions about where to place data.&lt;/p&gt;



&lt;h3 id=&#34;multi-block-allocation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#multi-block-allocation-&#34;&gt;Multi-block Allocation ‚ãî&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Multi-block allocation allows a file system to allocate multiple contiguous blocks at once, rather than individually, improving performance and reducing fragmentation, especially for large files.&lt;/p&gt;



&lt;h3 id=&#34;stripe-aware-allocation-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#stripe-aware-allocation-&#34;&gt;Stripe-aware Allocation üß†&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Stripe-aware allocation is used in RAID configurations to ensure that data is distributed evenly across all disks in the array, optimizing performance by aligning data placement with the underlying stripe size of the RAID setup.&lt;/p&gt;



&lt;h3 id=&#34;fine-grained-locking-for-smp-scalability-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#fine-grained-locking-for-smp-scalability-&#34;&gt;Fine-Grained Locking (for SMP Scalability) üöÄ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Fine-grained locking applies locks at a granular level, allowing multiple processors to concurrently access different parts of the file system, enhancing performance and scalability in multi-core environments.&lt;/p&gt;



&lt;h3 id=&#34;raid-10-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#raid-10-&#34;&gt;RAID 1+0 üñáÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;RAID support includes configurations such as RAID 1 for data mirroring and RAID 1+0 for combining mirroring with striping to provide both redundancy and improved performance.&lt;/p&gt;



&lt;h3 id=&#34;thin-provisioning-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#thin-provisioning-&#34;&gt;Thin Provisioning üîÆ&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Thin provisioning allocates disk space on-demand rather than reserving it all upfront, optimizing storage utilization by only using the space actually required by data.&lt;/p&gt;



&lt;h3 id=&#34;asynchronous-bulk-freeing-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#asynchronous-bulk-freeing-&#34;&gt;Asynchronous Bulk-Freeing üóëÔ∏è&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Asynchronous bulk-freeing performs large-scale space reclamation in the background, allowing the file system to manage deletions efficiently without impacting overall performance.&lt;/p&gt;



&lt;h3 id=&#34;large-directory-support-&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/fs/#large-directory-support-&#34;&gt;Large Directory Support üè¢&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Large directory support enables efficient management of directories with a vast number of entries, using optimized data structures to ensure fast performance for directory operations.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>My WebDev Preferences üëç</title>
      <link>http://localhost:1313/techblog/post/ws/</link>
      <pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/techblog/post/ws/</guid>
      <description>


&lt;h3 id=&#34;intro&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/ws/#intro&#34;&gt;Intro&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This blog will likely be dominated by Linux talk as that is what I spend most of my time with. However, I do full-stack web development on occlusion.
In fact, I have worked as a professional web Designer/Developer on and off, doing simple full stack projects in a range of languages. Recently, I have been stepping up my game with the intention of creating web applications with great GUIs, not only information pages. I think that with mature Javascript frameworks like NextJS or React and WASM (Web Assembly), we are going to see high performance desktop applications transition to being web-apps. This potential has me excited about learning more sophisticated tools.&lt;/p&gt;



&lt;h3 id=&#34;go&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/ws/#go&#34;&gt;GO&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Golang is a dead simple systems focused language created by GOATED Unix contributors. When I started picking up Go a few years back, it was not really popular. Web development was dominated by NodeJS on the backend and there were no job posting for the skill. However, I tend to have good instincts and decided to eschew Node in favor of GO. I am very happy with this decision as it is clear, strongly typed, easy to set up and fast as hell.
You can classify me as a GO enjoyer and back-ned deployer. GO now has a built-in HTTPs service and muxer, so it is my go-to for serving static and dynamic content.&lt;/p&gt;



&lt;h3 id=&#34;tailwind&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/ws/#tailwind&#34;&gt;TailWind&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I really regret not checking out TailWind CSS earlier, it is so nice. I totally had the wrong idea and thought that it was just another annoying framework that over complicates and I was sorely wrong. It really helps in combination with GO templates to create beautiful responsive layouts. There is not much too a simple TW setup, just a simple call-out in the header. When things needs to be more expansive, one can use a config file to specify rules.
I think I will be using a lot more TW in the future.&lt;/p&gt;



&lt;h3 id=&#34;react&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/ws/#react&#34;&gt;React&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;I am not a major fan of JS because I am a fan of simplicity, alas it is the language of the Web, so I must tango with wild syntax. Most web experiences  require reactive interaction and content delivery. I am not locked into react as there are so many similar frameworks, but I am saying it is a must in ones stack.&lt;/p&gt;



&lt;h3 id=&#34;vscode&#34;&gt;
  &lt;a class=&#34;Heading-link u-clickable&#34; href=&#34;http://localhost:1313/techblog/techblog/post/ws/#vscode&#34;&gt;VSCode&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Having a customizable proper IDE is important for getting things done. As much as I like learning Vim, Helix, or even Sublime, I know that no-matter the level of configuration it wont even come close to a proper IDE that lints, detects bugs, has a large ecosystem of plug-ins and comfy features like workspaces and built in problem console. If you just want to make stuff, then reduce your cognitive overhead and utilize a user friendly IDE.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
